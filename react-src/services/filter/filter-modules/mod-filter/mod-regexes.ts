import { IMod } from './IModFilterParams';
import { ModFilterType } from './ModFilterType';
/* tslint:disable:max-line-length */

/* [total] mods */
export const totalModRegexes: IMod[] = [
  {
    label: '+# to maximum Life',
    regex: [
      /\+(\d+) to maximum Life/,
      /\+(\d+) to all Attributes/,
      /\+(\d+) to Strength/,
      /\+(\d+) to Strength and Dexterity/,
      /\+(\d+) to Strength and Intelligence/,
    ],
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Cold Resistance',
    regex: [
      /\+(\d+)% to Cold Resistance/,
      /\+(\d+)% to Fire and Cold Resistances/,
      /\+(\d+)% to Cold and Lightning Resistances/,
      /\+(\d+)% to all Elemental Resistances/,
    ],
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Fire Resistance',
    regex: [
      /\+(\d+)% to Fire Resistance/,
      /\+(\d+)% to Fire and Cold Resistances/,
      /\+(\d+)% to Fire and Lightning Resistances/,
      /\+(\d+)% to all Elemental Resistances/,
    ],
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Lightning Resistance',
    regex: [
      /\+(\d+)% to Lightning Resistance/,
      /\+(\d+)% to Cold and Lightning Resistances/,
      /\+(\d+)% to Fire and Lightning Resistances/,
      /\+(\d+)% to all Elemental Resistances/,
    ],
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to all Elemental Resistances',
    regex: /\+(\d+)% to all Elemental Resistances/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to maximum Energy Shield',
    regex: /\+(\d+) to maximum Energy Shield/,

    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to maximum Mana',
    regex: [
      /\+(\d+) to maximum Mana/,
      /\+(\d+) to Intelligence/,
      /\+(\d+) to Dexterity and Intelligence/,
      /\+(\d+) to Strength and Intelligence/,
      /\+(\d+) to all Attributes/,
    ],
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Chaos Resistance',
    regex: [
      /\+(\d+)% to Chaos Resistance/,
      /\+(\d+)% to Cold and Chaos Resistances/,
      /\+(\d+)% to Fire and Chaos Resistances/,
      /\+(\d+)% to Lightning and Chaos Resistances/,
    ],
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Movement Speed',
    regex: /(\d+)% increased Movement Speed/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '# Life Regenerated per second',
    regex: /(\d+) Life Regenerated per second/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Mana Regeneration Rate',
    regex: /(\d+)% increased Mana Regeneration Rate/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Physical Damage',
    regex: /(\d+)% increased Physical Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Rarity of Items found',
    regex: /(\d+)% increased Rarity of Items found/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Spell Damage',
    regex: /(\d+)% increased Spell Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Dexterity',
    regex: [
      /\+(\d+) to Dexterity/,
      /\+(\d+) to Dexterity and Intelligence/,
      /\+(\d+) to Strength and Dexterity/,
      /\+(\d+) to all Attributes/,
    ],
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Intelligence',
    regex: [
      /\+(\d+) to Intelligence/,
      /\+(\d+) to Dexterity and Intelligence/,
      /\+(\d+) to Strength and Intelligence/,
      /\+(\d+) to all Attributes/,
    ],
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Strength',
    regex: [
      /\+(\d+) to Strength/,
      /\+(\d+) to Strength and Intelligence/,
      /\+(\d+) to Strength and Dexterity/,
      /\+(\d+) to all Attributes/,
    ],
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to all Attributes',
    regex: /\+(\d+) to all Attributes/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Level of Socketed Aura Gems',
    regex: /\+(\d+) to Level of Socketed Aura Gems/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Level of Socketed Strength Gems',
    regex: /\+(\d+) to Level of Socketed Strength Gems/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Level of Socketed Bow Gems',
    regex: /\+(\d+) to Level of Socketed Bow Gems/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Level of Socketed Cold Gems',
    regex: /\+(\d+) to Level of Socketed Cold Gems/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Level of Socketed Elemental Gems',
    regex: /\+(\d+) to Level of Socketed Elemental Gems/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Level of Socketed Fire Gems',
    regex: /\+(\d+) to Level of Socketed Fire Gems/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Level of Socketed Lightning Gems',
    regex: /\+(\d+) to Level of Socketed Lightning Gems/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Level of Socketed Melee Gems',
    regex: /\+(\d+) to Level of Socketed Melee Gems/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Level of Socketed Minion Gems',
    regex: /\+(\d+) to Level of Socketed Minion Gems/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Level of Socketed Movement Gems',
    regex: /\+(\d+) to Level of Socketed Movement Gems/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Level of Socketed Spell Gems',
    regex: /\+(\d+) to Level of Socketed Spell Gems/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Level of Socketed Vaal Gems',
    regex: /\+(\d+) to Level of Socketed Vaal Gems/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Level of Socketed Chaos Gems',
    regex: /\+(\d+) to Level of Socketed Chaos Gems/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Fire Spell Damage',
    regex: /(\d+)% increased Fire Spell Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Cold Spell Damage',
    regex: /(\d+)% increased Cold Spell Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Lightning Spell Damage',
    regex: /(\d+)% increased Lightning Spell Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Fire Damage with Attack Skills',
    regex: /(\d+)% increased Fire Damage with Attack Skills/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Cold Damage with Attack Skills',
    regex: /(\d+)% increased Cold Damage with Attack Skills/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Lightning Damage with Attack Skills',
    regex: /(\d+)% increased Lightning Damage with Attack Skills/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Elemental Damage with Attack Skills',
    regex: /(\d+)% increased Elemental Damage with Attack Skills/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Burning Damage',
    regex: /(\d+)% increased Burning Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Fire Area Damage',
    regex: /(\d+)% increased Fire Area Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Critical Strike Chance for Spells',
    regex: /(\d+)% increased Critical Strike Chance for Spells/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Global Critical Strike Multiplier',
    regex: /\+(\d+)% to Global Critical Strike Multiplier/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Global Critical Strike Chance',
    regex: /(\d+)% increased Global Critical Strike Chance/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% of Physical Attack Damage Leeched as Life',
    regex: /(\d+)% of Physical Attack Damage Leeched as Life/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # Physical Damage to Attacks',
    regex: /Adds (\d+) Physical Damage to Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # Fire Damage to Attacks',
    regex: /Adds (\d+) Fire Damage to Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # Elemental Damage to Attacks',
    regex: /Adds (\d+) Elemental Damage to Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # Damage to Attacks',
    regex: /Adds (\d+) Damage to Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # Elemental Damage to Spells',
    regex: /Adds (\d+) Elemental Damage to Spells/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # Damage to Spells',
    regex: /Adds (\d+) Damage to Spells/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Cast Speed',
    regex: /(\d+)% increased Cast Speed/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Attack Speed',
    regex: /(\d+)% increased Attack Speed/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased maximum Energy Shield',
    regex: /(\d+)% increased maximum Energy Shield/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% of Life Regenerated per second',
    regex: /(\d+)% of Life Regenerated per second/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Rarity of Fish Caught',
    regex: /(\d+)% increased Rarity of Fish Caught/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Critical Strike Multiplier with Axes',
    regex: /\+(\d+)% to Critical Strike Multiplier with Axes/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Efficacy',
    regex: /Socketed Gems are Supported by Level (\d+) Efficacy/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to gain Onslaught for 4 seconds on Kill',
    regex: /(\d+)% chance to gain Onslaught for 4 seconds on Kill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Movement Speed if you haven\'t been Hit Recently',
    regex: /(\d+)% increased Movement Speed if you haven't been Hit Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Level of all Spell Skill Gems',
    regex: /\+(\d+) to Level of all Spell Skill Gems/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to Ignite',
    regex: /(\d+)% chance to Ignite/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Damage with Staves',
    regex: /(\d+)% increased Damage with Staves/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% reduced Physical Damage taken over time',
    regex: /(\d+)% reduced Physical Damage taken over time/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Attributes',
    regex: /(\d+)% increased Attributes/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Movement speed while on Burning, Chilled or Shocked ground',
    regex: /(\d+)% increased Movement speed while on Burning, Chilled or Shocked ground/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% Chance to Block Attack Damage if there are at least 5 nearby Enemies',
    regex: /\+(\d+)% Chance to Block Attack Damage if there are at least 5 nearby Enemies/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Curse Enemies with Level # Poacher\'s Mark on Hit',
    regex: /Curse Enemies with Level (\d+) Poacher's Mark on Hit/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Gain #% of Physical Damage as Extra Chaos Damage',
    regex: /Gain (\d+)% of Physical Damage as Extra Chaos Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Blastchain Mine',
    regex: /Socketed Gems are Supported by Level (\d+) Blastchain Mine/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Grants Level # Grace Skill',
    regex: /Grants Level (\d+) Grace Skill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Attack Speed if you\'ve Killed Recently',
    regex: /(\d+)% increased Attack Speed if you've Killed Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Effect of Fortify on you',
    regex: /(\d+)% increased Effect of Fortify on you/,
    type: ModFilterType.TOTAL,
  },
  {

    label: 'Minions have #% increased Attack and Cast Speed if you or your Minions have Killed Recently',
    regex: /Minions have (\d+)% increased Attack and Cast Speed if you or your Minions have Killed Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Lightning Damage to Wand Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Wand Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Frenzy Charge Duration',
    regex: /(\d+)% increased Frenzy Charge Duration/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Mines have #% increased Detonation Speed',
    regex: /Mines have (\d+)% increased Detonation Speed/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Projectile Speed',
    regex: /(\d+)% increased Projectile Speed/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Damage with Hits and Ailments per Curse on Enemy',
    regex: /(\d+)% increased Damage with Hits and Ailments per Curse on Enemy/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Curse Enemies with Level # Warlord\'s Mark on Hit',
    regex: /Curse Enemies with Level (\d+) Warlord's Mark on Hit/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% of Physical Attack Damage Leeched as Mana',
    regex: /(\d+)% of Physical Attack Damage Leeched as Mana/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Minions deal # to # additional Chaos Damage',
    regex: /Minions deal (\d+) to (\d+) additional Chaos Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Trap Damage',
    regex: /(\d+)% increased Trap Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Critical Strike Chance with One Handed Melee Weapons',
    regex: /(\d+)% increased Critical Strike Chance with One Handed Melee Weapons/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to Shock Attackers for 4 seconds on Block',
    regex: /(\d+)% chance to Shock Attackers for 4 seconds on Block/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Critical Strike Chance with Bows',
    regex: /(\d+)% increased Critical Strike Chance with Bows/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Level of all Fire Spell Skill Gems',
    regex: /\+(\d+) to Level of all Fire Spell Skill Gems/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% Chance to Block Spell Damage',
    regex: /(\d+)% Chance to Block Spell Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Damage with Axes',
    regex: /(\d+)% increased Damage with Axes/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Innervate',
    regex: /Socketed Gems are Supported by Level (\d+) Innervate/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% reduced Reflected Elemental Damage taken',
    regex: /(\d+)% reduced Reflected Elemental Damage taken/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to Dodge Attack and Spell Hits if you\'ve been Hit Recently',
    regex: /(\d+)% chance to Dodge Attack and Spell Hits if you've been Hit Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Energy Shield Recovery rate',
    regex: /(\d+)% increased Energy Shield Recovery rate/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Flask Life Recovery rate',
    regex: /(\d+)% increased Flask Life Recovery rate/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Attacks have +#% to Critical Strike Chance',
    regex: /Socketed Attacks have \+(\d+)% to Critical Strike Chance/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Cold Damage',
    regex: /(\d+)% increased Cold Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Lesser Multiple Projectiles',
    regex: /Socketed Gems are Supported by Level (\d+) Lesser Multiple Projectiles/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% of Spell Damage Leeched as Energy Shield',
    regex: /(\d+)% of Spell Damage Leeched as Energy Shield/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Minions have #% increased Cast Speed',
    regex: /Minions have (\d+)% increased Cast Speed/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Regenerate #% of Mana per second if you\'ve Hit an Enemy Recently',
    regex: /Regenerate (\d+)% of Mana per second if you've Hit an Enemy Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '# Physical Damage taken from Hits',
    regex: /(\d+) Physical Damage taken from Hits/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Armour and Energy Shield',
    regex: /(\d+)% increased Armour and Energy Shield/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to Maim on Hit',
    regex: /(\d+)% chance to Maim on Hit/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Energy Shield',
    regex: [
      /(\d+)% increased Energy Shield/,
      /\+(\d+) to Intelligence/,
      /\+(\d+) to Dexterity and Intelligence/,
      /\+(\d+) to Strength and Intelligence/,
      /\+(\d+) to all Attributes/,
      /(\d+)% increased Armour and Energy Shield/,
      /(\d+)% increased Evasion and Energy Shield/,
    ],
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% of Physical Damage Converted to Chaos Damage',
    regex: /(\d+)% of Physical Damage Converted to Chaos Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Increased Critical Strikes',
    regex: /Socketed Gems are Supported by Level (\d+) Increased Critical Strikes/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Elemental Damage with Attacks',
    regex: /Socketed Gems are Supported by Level (\d+) Elemental Damage with Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Minions have #% chance to deal Double Damage',
    regex: /Minions have (\d+)% chance to deal Double Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to maximum Fire Resistance',
    regex: /\+(\d+)% to maximum Fire Resistance/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Fire Damage to Attacks with this Weapon per 10 Strength',
    regex: /Adds (\d+) to (\d+) Fire Damage to Attacks with this Weapon per 10 Strength/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Less Duration',
    regex: /Socketed Gems are Supported by Level (\d+) Less Duration/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Spell Damage per 16 Dexterity',
    regex: /(\d+)% increased Spell Damage per 16 Dexterity/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Rarity of Items found during any Flask Effect',
    regex: /(\d+)% increased Rarity of Items found during any Flask Effect/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Curse Enemies with Level # Despair on Hit',
    regex: /Curse Enemies with Level (\d+) Despair on Hit/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Cooldown Recovery Speed',
    regex: /(\d+)% increased Cooldown Recovery Speed/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Attack and Cast Speed during any Flask Effect',
    regex: /(\d+)% increased Attack and Cast Speed during any Flask Effect/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Cooldown Recovery Speed for throwing Traps',
    regex: /(\d+)% increased Cooldown Recovery Speed for throwing Traps/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Rarity of Items found from Slain Unique Enemies',
    regex: /(\d+)% increased Rarity of Items found from Slain Unique Enemies/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Physical Damage taken',
    regex: /(\d+)% increased Physical Damage taken/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Minions have +# to Accuracy Rating',
    regex: /Minions have \+(\d+) to Accuracy Rating/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Grants Level # Herald of Thunder Skill',
    regex: /Grants Level (\d+) Herald of Thunder Skill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Non-Curse Aura Gems have #% increased Aura Effect',
    regex: /Socketed Non-Curse Aura Gems have (\d+)% increased Aura Effect/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Drops Burning Ground while moving, dealing # Fire Damage per second',
    regex: /Drops Burning Ground while moving, dealing (\d+) Fire Damage per second/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Level of Socketed Intelligence Gems',
    regex: /\+(\d+) to Level of Socketed Intelligence Gems/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Lightning Damage to Spells while wielding a Two Handed Weapon',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Spells while wielding a Two Handed Weapon/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# Life gained for each Enemy hit by your Attacks',
    regex: /\+(\d+) Life gained for each Enemy hit by your Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Mine Throwing Speed',
    regex: /(\d+)% increased Mine Throwing Speed/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Ruthless',
    regex: /Socketed Gems are Supported by Level (\d+) Ruthless/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to avoid Bleeding',
    regex: /(\d+)% chance to avoid Bleeding/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Skills have #% increased Attack Speed',
    regex: /Socketed Skills have (\d+)% increased Attack Speed/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Poison Duration',
    regex: /(\d+)% increased Poison Duration/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Melee Splash',
    regex: /Socketed Gems are Supported by Level (\d+) Melee Splash/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Evasion and Energy Shield',
    regex: /(\d+)% increased Evasion and Energy Shield/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Cast While Channelling',
    regex: /Socketed Gems are Supported by Level (\d+) Cast While Channelling/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Cast On Critical Strike',
    regex: /Socketed Gems are Supported by Level (\d+) Cast On Critical Strike/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Slower Projectiles',
    regex: /Socketed Gems are Supported by Level (\d+) Slower Projectiles/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Damage Penetrates #% Elemental Resistances during any Flask Effect',
    regex: /Damage Penetrates (\d+)% Elemental Resistances during any Flask Effect/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Regenerate # Energy Shield per second',
    regex: /Regenerate (\d+) Energy Shield per second/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Melee Physical Damage',
    regex: /Socketed Gems are Supported by Level (\d+) Melee Physical Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Mine Duration',
    regex: /(\d+)% increased Mine Duration/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Spell Damage per 16 Intelligence',
    regex: /(\d+)% increased Spell Damage per 16 Intelligence/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Critical Strike Multiplier while Dual Wielding',
    regex: /\+(\d+)% to Critical Strike Multiplier while Dual Wielding/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Ranged Attack Totem',
    regex: /Socketed Gems are Supported by Level (\d+) Ranged Attack Totem/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Recover #% of Mana on Kill',
    regex: /Recover (\d+)% of Mana on Kill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance for Bleeding inflicted with this Weapon to deal 100% more Damage',
    regex: /(\d+)% chance for Bleeding inflicted with this Weapon to deal 100% more Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Minions have +#% to Chaos Resistance',
    regex: /Minions have \+(\d+)% to Chaos Resistance/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Volley',
    regex: /Socketed Gems are Supported by Level (\d+) Volley/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Global Evasion Rating when on Full Life',
    regex: /(\d+)% increased Global Evasion Rating when on Full Life/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to gain a Frenzy Charge when Hit',
    regex: /(\d+)% chance to gain a Frenzy Charge when Hit/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to Avoid Cold Damage from Hits',
    regex: /(\d+)% chance to Avoid Cold Damage from Hits/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Level of all Lightning Spell Skill Gems',
    regex: /\+(\d+) to Level of all Lightning Spell Skill Gems/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to maximum Cold Resistance',
    regex: /\+(\d+)% to maximum Cold Resistance/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Attacks have #% chance to cause Bleeding',
    regex: /Attacks have (\d+)% chance to cause Bleeding/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Regenerate #% of Energy Shield per second if you\'ve Hit an Enemy Recently',
    regex: /Regenerate (\d+)% of Energy Shield per second if you've Hit an Enemy Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Fire Damage to Wand Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Wand Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to Avoid being Ignited',
    regex: /(\d+)% chance to Avoid being Ignited/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Cast Speed with Lightning Skills',
    regex: /(\d+)% increased Cast Speed with Lightning Skills/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Fire Damage to Spells',
    regex: /Adds (\d+) to (\d+) Fire Damage to Spells/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Multistrike',
    regex: /Socketed Gems are Supported by Level (\d+) Multistrike/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to all maximum Resistances',
    regex: /\+(\d+)% to all maximum Resistances/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Lightning Damage to Spells and Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Spells and Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance when Hit for double Armour effect',
    regex: /(\d+)% chance when Hit for double Armour effect/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Armour',
    regex: [
      /(\d+)% increased Armour/,
      /(\d+)% increased Armour and Energy Shield/,
      /(\d+)% increased Armour and Evasion/,
    ],
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Spells have +#% to Critical Strike Multiplier',
    regex: /Socketed Spells have \+(\d+)% to Critical Strike Multiplier/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% Chance to Block Attack Damage while Dual Wielding',
    regex: /\+(\d+)% Chance to Block Attack Damage while Dual Wielding/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Damage over Time while Dual Wielding',
    regex: /(\d+)% increased Damage over Time while Dual Wielding/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Physical Damage to Spells while wielding a Two Handed Weapon',
    regex: /Adds (\d+) to (\d+) Physical Damage to Spells while wielding a Two Handed Weapon/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to Avoid Fire Damage from Hits',
    regex: /(\d+)% chance to Avoid Fire Damage from Hits/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Weapon Critical Strike Chance while Dual Wielding',
    regex: /(\d+)% increased Weapon Critical Strike Chance while Dual Wielding/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Critical Strike Chance against Shocked Enemies',
    regex: /(\d+)% increased Critical Strike Chance against Shocked Enemies/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Gain an Endurance Charge every # seconds while Stationary',
    regex: /Gain an Endurance Charge every (\d+) seconds while Stationary/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Melee Weapon and Unarmed Attack range',
    regex: /\+(\d+) to Melee Weapon and Unarmed Attack range/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# Life gained when you Block',
    regex: /\+(\d+) Life gained when you Block/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Gain #% of Fire Damage as Extra Chaos Damage',
    regex: /Gain (\d+)% of Fire Damage as Extra Chaos Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to Dodge Spell Hits',
    regex: /(\d+)% chance to Dodge Spell Hits/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Effect of Shock',
    regex: /(\d+)% increased Effect of Shock/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Critical Strike Chance with Two Handed Melee Weapons',
    regex: /(\d+)% increased Critical Strike Chance with Two Handed Melee Weapons/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Spell Damage while Dual Wielding',
    regex: /(\d+)% increased Spell Damage while Dual Wielding/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Cast On Melee Kill',
    regex: /Socketed Gems are Supported by Level (\d+) Cast On Melee Kill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Projectile Attack Damage per 200 Accuracy Rating',
    regex: /(\d+)% increased Projectile Attack Damage per 200 Accuracy Rating/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Nearby Enemies have #% to Chaos Resistance',
    regex: /Nearby Enemies have (\d+)% to Chaos Resistance/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems have #% reduced Mana Reservation',
    regex: /Socketed Gems have (\d+)% reduced Mana Reservation/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Minion Duration',
    regex: /(\d+)% increased Minion Duration/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Attack Speed with Axes',
    regex: /(\d+)% increased Attack Speed with Axes/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to gain Unholy Might for 3 seconds on Kill',
    regex: /(\d+)% chance to gain Unholy Might for 3 seconds on Kill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# Mana gained for each Enemy Hit by your Spells',
    regex: /\+(\d+) Mana gained for each Enemy Hit by your Spells/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Maximum Frenzy Charges',
    regex: /\+(\d+) to Maximum Frenzy Charges/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Melee Physical Damage with Unarmed Attacks',
    regex: /(\d+)% increased Melee Physical Damage with Unarmed Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Area Damage',
    regex: /(\d+)% increased Area Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to Freeze',
    regex: /(\d+)% chance to Freeze/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to Dodge Attack Hits',
    regex: /(\d+)% chance to Dodge Attack Hits/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Elemental Focus',
    regex: /Socketed Gems are Supported by Level (\d+) Elemental Focus/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Spell Damage while wielding a Staff',
    regex: /(\d+)% increased Spell Damage while wielding a Staff/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Nearby Enemies have #% to Fire Resistance',
    regex: /Nearby Enemies have (\d+)% to Fire Resistance/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% of Damage is taken from Mana before Life',
    regex: /(\d+)% of Damage is taken from Mana before Life/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Regenerate # Mana per second',
    regex: /Regenerate (\d+) Mana per second/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Critical Strike Multiplier with One Handed Melee Weapons',
    regex: /\+(\d+)% to Critical Strike Multiplier with One Handed Melee Weapons/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% additional Physical Damage Reduction',
    regex: /(\d+)% additional Physical Damage Reduction/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Cast Speed with Fire Skills',
    regex: /(\d+)% increased Cast Speed with Fire Skills/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Damage with Daggers',
    regex: /(\d+)% increased Damage with Daggers/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Damage if you\'ve Killed Recently',
    regex: /(\d+)% increased Damage if you've Killed Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Spells have +#% to Critical Strike Chance',
    regex: /Socketed Spells have \+(\d+)% to Critical Strike Chance/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Armour and Evasion',
    regex: /(\d+)% increased Armour and Evasion/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Damage per 15 Intelligence',
    regex: /(\d+)% increased Damage per 15 Intelligence/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Level of Socketed Trap Gems',
    regex: /\+(\d+) to Level of Socketed Trap Gems/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Fishing Line Strength',
    regex: /(\d+)% increased Fishing Line Strength/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# Mana gained on Kill',
    regex: /\+(\d+) Mana gained on Kill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% of Physical Damage from Hits taken as Lightning Damage',
    regex: /(\d+)% of Physical Damage from Hits taken as Lightning Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Minions have #% increased maximum Life',
    regex: /Minions have (\d+)% increased maximum Life/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Strength and Dexterity',
    regex: /\+(\d+) to Strength and Dexterity/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Life Recovery rate',
    regex: /(\d+)% increased Life Recovery rate/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to gain an Endurance Charge on Kill',
    regex: /(\d+)% chance to gain an Endurance Charge on Kill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Vaal Skills deal #% increased Damage',
    regex: /Vaal Skills deal (\d+)% increased Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Grants Level # Wrath Skill',
    regex: /Grants Level (\d+) Wrath Skill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Damage when on Full Life',
    regex: /(\d+)% increased Damage when on Full Life/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Lightning Damage',
    regex: /(\d+)% increased Lightning Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# Energy Shield gained for each Enemy hit by your Attacks',
    regex: /\+(\d+) Energy Shield gained for each Enemy hit by your Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Critical Strike Chance if you haven\'t dealt a Critical Strike Recently',
    regex: /(\d+)% increased Critical Strike Chance if you haven't dealt a Critical Strike Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to Knock Enemies Back on hit',
    regex: /(\d+)% chance to Knock Enemies Back on hit/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Power Charge Duration',
    regex: /(\d+)% increased Power Charge Duration/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Energy Shield from Body Armour',
    regex: /(\d+)% increased Energy Shield from Body Armour/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Totem Life',
    regex: /(\d+)% increased Totem Life/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Skills deal #% more Spell Damage',
    regex: /Socketed Skills deal (\d+)% more Spell Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to Avoid interruption from Stuns while Casting',
    regex: /(\d+)% chance to Avoid interruption from Stuns while Casting/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Items and Gems have #% reduced Attribute Requirements',
    regex: /Items and Gems have (\d+)% reduced Attribute Requirements/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Curse Enemies with Level # Frostbite on Hit',
    regex: /Curse Enemies with Level (\d+) Frostbite on Hit/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Fire Damage against Ignited Enemies',
    regex: /Adds (\d+) to (\d+) Fire Damage against Ignited Enemies/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Maximum total Recovery per second from Life Leech',
    regex: /(\d+)% increased Maximum total Recovery per second from Life Leech/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Damage Penetrates #% Elemental Resistances',
    regex: /Damage Penetrates (\d+)% Elemental Resistances/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Accuracy Rating per Frenzy Charge',
    regex: /(\d+)% increased Accuracy Rating per Frenzy Charge/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Cold Damage to Spells while holding a Shield',
    regex: /Adds (\d+) to (\d+) Cold Damage to Spells while holding a Shield/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Lightning Damage to Spells',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Spells/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Onslaught',
    regex: /Socketed Gems are Supported by Level (\d+) Onslaught/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Flask Effect Duration',
    regex: /(\d+)% increased Flask Effect Duration/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Damage with Maces and Sceptres',
    regex: /(\d+)% increased Damage with Maces and Sceptres/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Fire Damage to Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Attack Speed with One Handed Melee Weapons',
    regex: /(\d+)% increased Attack Speed with One Handed Melee Weapons/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Gain #% of Cold Damage as Extra Chaos Damage',
    regex: /Gain (\d+)% of Cold Damage as Extra Chaos Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Melee Damage',
    regex: /(\d+)% increased Melee Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Damage Penetrates #% Lightning Resistance',
    regex: /Damage Penetrates (\d+)% Lightning Resistance/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Damage with Bows',
    regex: /(\d+)% increased Damage with Bows/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Damage with Claws',
    regex: /(\d+)% increased Damage with Claws/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Grants Level # Aspect of the Crab Skill',
    regex: /Grants Level (\d+) Aspect of the Crab Skill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Regenerate # Life per second',
    regex: /Regenerate (\d+) Life per second/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% reduced Fishing Pool Consumption',
    regex: /(\d+)% reduced Fishing Pool Consumption/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Nearby Enemies have #% to Lightning Resistance',
    regex: /Nearby Enemies have (\d+)% to Lightning Resistance/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% of Chaos Damage Leeched as Life',
    regex: /(\d+)% of Chaos Damage Leeched as Life/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Nearby Enemies take #% increased Physical Damage',
    regex: /Nearby Enemies take (\d+)% increased Physical Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Minions have +#% Chance to Block Attack Damage',
    regex: /Minions have \+(\d+)% Chance to Block Attack Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Minions Regenerate # Life per second',
    regex: /Minions Regenerate (\d+) Life per second/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% of Physical Damage Converted to Lightning Damage',
    regex: /(\d+)% of Physical Damage Converted to Lightning Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Cast Speed while holding a Shield',
    regex: /(\d+)% increased Cast Speed while holding a Shield/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Critical Strike Multiplier with Mines',
    regex: /\+(\d+)% to Critical Strike Multiplier with Mines/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Totem Placement speed',
    regex: /(\d+)% increased Totem Placement speed/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Movement Speed if you haven\'t taken Damage Recently',
    regex: /(\d+)% increased Movement Speed if you haven't taken Damage Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Recover #% of your maximum Mana when you Block',
    regex: /Recover (\d+)% of your maximum Mana when you Block/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Attacks have #% chance to Maim on Hit',
    regex: /Attacks have (\d+)% chance to Maim on Hit/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Fire Damage to Bow Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Bow Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Attack Speed with Swords',
    regex: /(\d+)% increased Attack Speed with Swords/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Cold Damage over Time Multiplier',
    regex: /\+(\d+)% to Cold Damage over Time Multiplier/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Iron Grip',
    regex: /Socketed Gems are Supported by Level (\d+) Iron Grip/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% additional Physical Damage Reduction during any Flask Effect',
    regex: /(\d+)% additional Physical Damage Reduction during any Flask Effect/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Gain #% of Physical Damage as Extra Cold Damage',
    regex: /Gain (\d+)% of Physical Damage as Extra Cold Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to gain Onslaught when you use a Flask',
    regex: /(\d+)% chance to gain Onslaught when you use a Flask/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Auras from your Skills grant #% increased Damage to you and Allies',
    regex: /Auras from your Skills grant (\d+)% increased Damage to you and Allies/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Spells have #% reduced Mana Cost',
    regex: /Socketed Spells have (\d+)% reduced Mana Cost/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% of Fire Damage Leeched as Life',
    regex: /(\d+)% of Fire Damage Leeched as Life/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Stun Duration on Enemies',
    regex: /(\d+)% increased Stun Duration on Enemies/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% additional Physical Damage Reduction if you weren\'t Damaged by a Hit Recently',
    regex: /(\d+)% additional Physical Damage Reduction if you weren't Damaged by a Hit Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Damage Penetrates #% Cold Resistance',
    regex: /Damage Penetrates (\d+)% Cold Resistance/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Cast Speed if you\'ve Killed Recently',
    regex: /(\d+)% increased Cast Speed if you've Killed Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Evasion Rating if Hit an Enemy Recently',
    regex: /\+(\d+) to Evasion Rating if Hit an Enemy Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Armour, Evasion and Energy Shield',
    regex: /(\d+)% increased Armour, Evasion and Energy Shield/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Attacks have -# to Total Mana Cost',
    regex: /Socketed Attacks have -(\d+) to Total Mana Cost/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Life Leech',
    regex: /Socketed Gems are Supported by Level (\d+) Life Leech/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Quality of Socketed Support Gems',
    regex: /\+(\d+)% to Quality of Socketed Support Gems/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Level of Socketed Active Skill Gems',
    regex: /\+(\d+) to Level of Socketed Active Skill Gems/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Arcane Surge',
    regex: /Socketed Gems are Supported by Level (\d+) Arcane Surge/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Dexterity',
    regex: /(\d+)% increased Dexterity/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Vicious Projectiles',
    regex: /Socketed Gems are Supported by Level (\d+) Vicious Projectiles/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Fishing Range',
    regex: /(\d+)% increased Fishing Range/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% Chance to Block',
    regex: /\+(\d+)% Chance to Block/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Movement Speed during any Flask Effect',
    regex: /(\d+)% increased Movement Speed during any Flask Effect/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to gain Fortify when you Stun an Enemy with Melee Damage',
    regex: /(\d+)% chance to gain Fortify when you Stun an Enemy with Melee Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# Life gained for each Blinded Enemy Hit by this Weapon',
    regex: /\+(\d+) Life gained for each Blinded Enemy Hit by this Weapon/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased total Recovery per second from Life Leech',
    regex: /(\d+)% increased total Recovery per second from Life Leech/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% reduced Chaos Damage taken over time',
    regex: /(\d+)% reduced Chaos Damage taken over time/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Damage over Time',
    regex: /(\d+)% increased Damage over Time/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Cold Damage to Mace and Sceptre Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Mace and Sceptre Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Attack Speed with Maces and Sceptres',
    regex: /(\d+)% increased Attack Speed with Maces and Sceptres/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Critical Strike Multiplier with Traps',
    regex: /\+(\d+)% to Critical Strike Multiplier with Traps/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Attack Speed with Wands',
    regex: /(\d+)% increased Attack Speed with Wands/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Dexterity and Intelligence',
    regex: /\+(\d+) to Dexterity and Intelligence/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Mine Damage',
    regex: /(\d+)% increased Mine Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to gain a Power Charge on Critical Strike',
    regex: /(\d+)% chance to gain a Power Charge on Critical Strike/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Skills deal #% more Attack Damage',
    regex: /Socketed Skills deal (\d+)% more Attack Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Lightning Damage to Mace and Sceptre Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Mace and Sceptre Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Cold Damage against Chilled or Frozen Enemies',
    regex: /Adds (\d+) to (\d+) Cold Damage against Chilled or Frozen Enemies/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Chaos Damage',
    regex: /Adds (\d+) to (\d+) Chaos Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Grants Level # Enduring Cry Skill',
    regex: /Grants Level (\d+) Enduring Cry Skill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Minions have #% increased Movement Speed',
    regex: /Minions have (\d+)% increased Movement Speed/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Physical Damage to Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Lightning Damage to Dagger Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Dagger Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance for your Flasks to not consume Charges',
    regex: /(\d+)% chance for your Flasks to not consume Charges/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Controlled Destruction',
    regex: /Socketed Gems are Supported by Level (\d+) Controlled Destruction/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Damage with Swords',
    regex: /(\d+)% increased Damage with Swords/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Damage with One Handed Weapons',
    regex: /(\d+)% increased Damage with One Handed Weapons/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Spell Damage during any Flask Effect',
    regex: /(\d+)% increased Spell Damage during any Flask Effect/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Trap',
    regex: /Socketed Gems are Supported by Level (\d+) Trap/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to Gain Unholy Might for 4 seconds on Melee Kill',
    regex: /(\d+)% chance to Gain Unholy Might for 4 seconds on Melee Kill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Attack Speed with Daggers',
    regex: /(\d+)% increased Attack Speed with Daggers/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Physical Damage to Staff Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Staff Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Maximum Endurance Charges',
    regex: /\+(\d+) to Maximum Endurance Charges/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to Taunt Enemies on Hit with Attacks',
    regex: /(\d+)% chance to Taunt Enemies on Hit with Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Fire Damage if you\'ve Blocked Recently',
    regex: /Adds (\d+) to (\d+) Fire Damage if you've Blocked Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Physical Damage to Bow Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Bow Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Movement Speed if you\'ve Hit an Enemy Recently',
    regex: /(\d+)% increased Movement Speed if you've Hit an Enemy Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Critical Strike Chance with Elemental Skills',
    regex: /(\d+)% increased Critical Strike Chance with Elemental Skills/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Level of Socketed Gems',
    regex: /\+(\d+) to Level of Socketed Gems/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Trap Throwing Speed',
    regex: /(\d+)% increased Trap Throwing Speed/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Strength and Intelligence',
    regex: /\+(\d+) to Strength and Intelligence/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Fire Damage to Mace and Sceptre Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Mace and Sceptre Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% reduced Flask Charges used',
    regex: /(\d+)% reduced Flask Charges used/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Lightning Penetration',
    regex: /Socketed Gems are Supported by Level (\d+) Lightning Penetration/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Chaos Damage to Spells while Dual Wielding',
    regex: /Adds (\d+) to (\d+) Chaos Damage to Spells while Dual Wielding/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Attack Damage',
    regex: /(\d+)% increased Attack Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Attack Speed during any Flask Effect',
    regex: /(\d+)% increased Attack Speed during any Flask Effect/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'When you Kill a Rare Monster, #% chance to gain one of its Modifiers for 10 seconds',
    regex: /When you Kill a Rare Monster, (\d+)% chance to gain one of its Modifiers for 10 seconds/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Skills used by Traps have #% increased Area of Effect',
    regex: /Skills used by Traps have (\d+)% increased Area of Effect/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Minion Damage',
    regex: /Socketed Gems are Supported by Level (\d+) Minion Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Critical Strike Multiplier if you\'ve Killed Recently',
    regex: /\+(\d+)% to Critical Strike Multiplier if you've Killed Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Curse Skills have #% increased Cast Speed',
    regex: /Curse Skills have (\d+)% increased Cast Speed/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Cast Speed if you\'ve dealt a Critical Strike Recently',
    regex: /(\d+)% increased Cast Speed if you've dealt a Critical Strike Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% reduced Lightning Damage taken',
    regex: /(\d+)% reduced Lightning Damage taken/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Mana Recovery rate',
    regex: /(\d+)% increased Mana Recovery rate/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Concentrated Effect',
    regex: /Socketed Gems are Supported by Level (\d+) Concentrated Effect/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Cold Damage to Spells while wielding a Two Handed Weapon',
    regex: /Adds (\d+) to (\d+) Cold Damage to Spells while wielding a Two Handed Weapon/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Grants Level # Abyssal Cry Skill',
    regex: /Grants Level (\d+) Abyssal Cry Skill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems have +#% Critical Strike Chance',
    regex: /Socketed Gems have \+(\d+)% Critical Strike Chance/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Cold Penetration',
    regex: /Socketed Gems are Supported by Level (\d+) Cold Penetration/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Damage with Two Handed Weapons',
    regex: /(\d+)% increased Damage with Two Handed Weapons/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Fire Penetration',
    regex: /Socketed Gems are Supported by Level (\d+) Fire Penetration/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% of Spell Damage Leeched as Life',
    regex: /(\d+)% of Spell Damage Leeched as Life/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Chaos Damage to Spells',
    regex: /Adds (\d+) to (\d+) Chaos Damage to Spells/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Melee Damage during any Flask Effect',
    regex: /(\d+)% increased Melee Damage during any Flask Effect/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Spell Damage while holding a Shield',
    regex: /(\d+)% increased Spell Damage while holding a Shield/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Grants Level # Rallying Cry Skill',
    regex: /Grants Level (\d+) Rallying Cry Skill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Fire Damage to Axe Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Axe Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to maximum Chance to Block Attack Damage',
    regex: /\+(\d+)% to maximum Chance to Block Attack Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% Chance to Block Spell Damage while holding a Shield',
    regex: /\+(\d+)% Chance to Block Spell Damage while holding a Shield/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Cold Damage to Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Grants Level # Aspect of the Avian Skill',
    regex: /Grants Level (\d+) Aspect of the Avian Skill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '# to # Cold Damage per Frenzy Charge',
    regex: /(\d+) to (\d+) Cold Damage per Frenzy Charge/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Cold Damage to Attacks with this Weapon per 10 Dexterity',
    regex: /Adds (\d+) to (\d+) Cold Damage to Attacks with this Weapon per 10 Dexterity/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems gain #% of Physical Damage as extra Lightning Damage',
    regex: /Socketed Gems gain (\d+)% of Physical Damage as extra Lightning Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Trap And Mine Damage',
    regex: /Socketed Gems are Supported by Level (\d+) Trap And Mine Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Freeze Duration on Enemies',
    regex: /(\d+)% increased Freeze Duration on Enemies/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Trap and Mine Throwing Speed',
    regex: /(\d+)% increased Trap and Mine Throwing Speed/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% Chance to Block Attack Damage',
    regex: /(\d+)% Chance to Block Attack Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Projectile Attack Damage',
    regex: /(\d+)% increased Projectile Attack Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Spell Echo',
    regex: /Socketed Gems are Supported by Level (\d+) Spell Echo/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to maximum Chaos Resistance',
    regex: /\+(\d+)% to maximum Chaos Resistance/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Totem Damage',
    regex: /(\d+)% increased Totem Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Gain #% of Elemental Damage as Extra Chaos Damage',
    regex: /Gain (\d+)% of Elemental Damage as Extra Chaos Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to Hinder Enemies on Hit with Spells, with 30% reduced Movement Speed',
    regex: /(\d+)% chance to Hinder Enemies on Hit with Spells, with 30% reduced Movement Speed/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Quality',
    regex: /\+(\d+)% to Quality/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Critical Strike Multiplier with Bows',
    regex: /\+(\d+)% to Critical Strike Multiplier with Bows/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Armour if you\'ve Hit an Enemy Recently',
    regex: /\+(\d+) to Armour if you've Hit an Enemy Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Accuracy Rating',
    regex: [
      /\+(\d+) to Accuracy Rating/,
      /\+(\d+) to Dexterity/,
      /\+(\d+) to Dexterity and Intelligence/,
      /\+(\d+) to Strength and Dexterity/,
      /\+(\d+) to all Attributes/,
    ],
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Gain #% of Physical Damage as Extra Damage of a random Element',
    regex: /Gain (\d+)% of Physical Damage as Extra Damage of a random Element/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Additional Accuracy',
    regex: /Socketed Gems are Supported by Level (\d+) Additional Accuracy/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Cold Damage to Axe Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Axe Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Chaos Damage to Spells while holding a Shield',
    regex: /Adds (\d+) to (\d+) Chaos Damage to Spells while holding a Shield/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% Global chance to Blind Enemies on hit',
    regex: /(\d+)% Global chance to Blind Enemies on hit/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to Cast Level 20 Fire Burst on Hit',
    regex: /(\d+)% chance to Cast Level 20 Fire Burst on Hit/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Lesser Poison',
    regex: /Socketed Gems are Supported by Level (\d+) Lesser Poison/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Experience gain',
    regex: /(\d+)% increased Experience gain/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to gain an Endurance Charge on Critical Strike',
    regex: /(\d+)% chance to gain an Endurance Charge on Critical Strike/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Cold Damage to Spells and Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Spells and Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Armour',
    regex: /\+(\d+) to Armour/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Cold Damage to Sword Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Sword Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Chill and Freeze Duration on Enemies',
    regex: /(\d+)% increased Chill and Freeze Duration on Enemies/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Movement Speed if you\'ve Killed Recently',
    regex: /(\d+)% increased Movement Speed if you've Killed Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% reduced Soul Cost of Vaal Skills',
    regex: /(\d+)% reduced Soul Cost of Vaal Skills/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Lightning Damage to Attacks with this Weapon per 10 Intelligence',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Attacks with this Weapon per 10 Intelligence/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to gain Phasing for 4 seconds on Kill',
    regex: /(\d+)% chance to gain Phasing for 4 seconds on Kill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Accuracy Rating if you haven\'t Killed Recently',
    regex: /(\d+)% increased Accuracy Rating if you haven't Killed Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Chance To Bleed',
    regex: /Socketed Gems are Supported by Level (\d+) Chance To Bleed/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% Chance to Block Spell Damage while wielding a Staff',
    regex: /\+(\d+)% Chance to Block Spell Damage while wielding a Staff/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to cause Bleeding on Hit',
    regex: /(\d+)% chance to cause Bleeding on Hit/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% faster start of Energy Shield Recharge',
    regex: /(\d+)% faster start of Energy Shield Recharge/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Enemies killed explode dealing #% of their Life as Fire Damage',
    regex: /Enemies killed explode dealing (\d+)% of their Life as Fire Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Physical Damage against Bleeding Enemies',
    regex: /Adds (\d+) to (\d+) Physical Damage against Bleeding Enemies/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Grants Level # Envy Skill',
    regex: /Grants Level (\d+) Envy Skill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Grants Level # Aspect of the Spider Skill',
    regex: /Grants Level (\d+) Aspect of the Spider Skill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Critical Strike Chance against Blinded Enemies',
    regex: /(\d+)% increased Critical Strike Chance against Blinded Enemies/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Level of all Minion Skill Gems',
    regex: /\+(\d+) to Level of all Minion Skill Gems/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to Avoid being Poisoned',
    regex: /(\d+)% chance to Avoid being Poisoned/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to gain a Frenzy Charge when you Hit a Rare or Unique Enemy',
    regex: /(\d+)% chance to gain a Frenzy Charge when you Hit a Rare or Unique Enemy/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Critical Strike Chance with Staves',
    regex: /(\d+)% increased Critical Strike Chance with Staves/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to Shock',
    regex: /(\d+)% chance to Shock/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Minions have #% chance to Hinder Enemies on Hit with Spells, with 30% reduced Movement Speed',
    regex: /Minions have (\d+)% chance to Hinder Enemies on Hit with Spells, with 30% reduced Movement Speed/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '# to # added Fire Damage against Burning Enemies',
    regex: /(\d+) to (\d+) added Fire Damage against Burning Enemies/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Attack Speed with Two Handed Melee Weapons',
    regex: /(\d+)% increased Attack Speed with Two Handed Melee Weapons/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Advanced Traps',
    regex: /Socketed Gems are Supported by Level (\d+) Advanced Traps/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Level of Socketed Curse Gems',
    regex: /\+(\d+) to Level of Socketed Curse Gems/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% Chance to Block Spell Damage if you were Damaged by a Hit Recently',
    regex: /\+(\d+)% Chance to Block Spell Damage if you were Damaged by a Hit Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to gain an Endurance Charge when you Block',
    regex: /(\d+)% chance to gain an Endurance Charge when you Block/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Fire Damage to Dagger Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Dagger Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Strength',
    regex: /(\d+)% increased Strength/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Grants Level # Haste Skill',
    regex: /Grants Level (\d+) Haste Skill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Quantity of Items found',
    regex: /(\d+)% increased Quantity of Items found/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'You take #% reduced Extra Damage from Critical Strikes',
    regex: /You take (\d+)% reduced Extra Damage from Critical Strikes/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Item Rarity',
    regex: /Socketed Gems are Supported by Level (\d+) Item Rarity/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Attack Speed with Bows',
    regex: /(\d+)% increased Attack Speed with Bows/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% of Damage taken gained as Mana over 4 seconds when Hit',
    regex: /(\d+)% of Damage taken gained as Mana over 4 seconds when Hit/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Cast Speed if a Minion has been Killed Recently',
    regex: /(\d+)% increased Cast Speed if a Minion has been Killed Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Lightning Damage to Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Physical Damage to Wand Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Wand Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Attack and Cast Speed',
    regex: /(\d+)% increased Attack and Cast Speed/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Fire and Cold Resistances',
    regex: /\+(\d+)% to Fire and Cold Resistances/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Area of Effect of Curse Skills',
    regex: /(\d+)% increased Area of Effect of Curse Skills/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Critical Strike Chance with Swords',
    regex: /(\d+)% increased Critical Strike Chance with Swords/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Minions deal #% increased Damage against Abyssal Monsters',
    regex: /Minions deal (\d+)% increased Damage against Abyssal Monsters/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Level of all Raise Spectre Gems',
    regex: /\+(\d+) to Level of all Raise Spectre Gems/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Critical Strike Chance with Fire Skills',
    regex: /(\d+)% increased Critical Strike Chance with Fire Skills/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Grants Level # Determination Skill',
    regex: /Grants Level (\d+) Determination Skill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Physical Damage to Sword Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Sword Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Evasion Rating',
    regex: [
      /(\d+)% increased Evasion Rating/,
      /\+(\d+) to Dexterity/,
      /\+(\d+) to Dexterity and Intelligence/,
      /\+(\d+) to Strength and Dexterity/,
      /\+(\d+) to all Attributes/,
      /(\d+)% increased Armour and Evasion/,
      /(\d+)% increased Evasion and Energy Shield/,
    ],
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Global Accuracy Rating',
    regex: /(\d+)% increased Global Accuracy Rating/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to Intimidate Enemies for 4 seconds on Hit',
    regex: /(\d+)% chance to Intimidate Enemies for 4 seconds on Hit/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to Dodge Attack Hits if you have Blocked Recently',
    regex: /(\d+)% chance to Dodge Attack Hits if you have Blocked Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% reduced Enemy Stun Threshold',
    regex: /(\d+)% reduced Enemy Stun Threshold/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Fire and Lightning Resistances',
    regex: /\+(\d+)% to Fire and Lightning Resistances/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Critical Strike Multiplier with Claws',
    regex: /\+(\d+)% to Critical Strike Multiplier with Claws/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Skills used by Mines have #% increased Area of Effect',
    regex: /Skills used by Mines have (\d+)% increased Area of Effect/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% reduced Effect of Curses on you',
    regex: /(\d+)% reduced Effect of Curses on you/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Skill Effect Duration',
    regex: /(\d+)% increased Skill Effect Duration/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Chaos Damage over Time Multiplier',
    regex: /\+(\d+)% to Chaos Damage over Time Multiplier/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Critical Strike Chance with Cold Skills',
    regex: /(\d+)% increased Critical Strike Chance with Cold Skills/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Endurance Charge on Melee Stun',
    regex: /Socketed Gems are Supported by Level (\d+) Endurance Charge on Melee Stun/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Critical Strike Chance with Traps',
    regex: /(\d+)% increased Critical Strike Chance with Traps/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Damage',
    regex: /(\d+)% increased Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to Freeze, Shock and Ignite',
    regex: /(\d+)% chance to Freeze, Shock and Ignite/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Level of all Physical Spell Skill Gems',
    regex: /\+(\d+) to Level of all Physical Spell Skill Gems/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% reduced Cold Damage taken',
    regex: /(\d+)% reduced Cold Damage taken/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Mana Regeneration Rate while moving',
    regex: /(\d+)% increased Mana Regeneration Rate while moving/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to Avoid Lightning Damage from Hits',
    regex: /(\d+)% chance to Avoid Lightning Damage from Hits/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Cast Speed with Cold Skills',
    regex: /(\d+)% increased Cast Speed with Cold Skills/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% of Attack Damage Leeched as Life',
    regex: /(\d+)% of Attack Damage Leeched as Life/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Critical Strike Chance with Lightning Skills',
    regex: /(\d+)% increased Critical Strike Chance with Lightning Skills/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Attack Speed with Staves',
    regex: /(\d+)% increased Attack Speed with Staves/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Critical Strike Multiplier with Fire Skills',
    regex: /\+(\d+)% to Critical Strike Multiplier with Fire Skills/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Attacks have +#% to Critical Strike Chance',
    regex: /Attacks have \+(\d+)% to Critical Strike Chance/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Damage per 1% Chance to Block Attack Damage',
    regex: /(\d+)% increased Damage per 1% Chance to Block Attack Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to maximum number of Raised Zombies',
    regex: /\+(\d+) to maximum number of Raised Zombies/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% of Physical Damage from Hits taken as Cold Damage',
    regex: /(\d+)% of Physical Damage from Hits taken as Cold Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Critical Strike Multiplier if you have Blocked Recently',
    regex: /\+(\d+)% to Critical Strike Multiplier if you have Blocked Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Cold Damage to Wand Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Wand Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Recover #% of Life on Kill',
    regex: /Recover (\d+)% of Life on Kill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% of Lightning Damage Leeched as Life',
    regex: /(\d+)% of Lightning Damage Leeched as Life/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Spell Damage per 10 Intelligence',
    regex: /(\d+)% increased Spell Damage per 10 Intelligence/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Area of Effect per 50 Strength',
    regex: /(\d+)% increased Area of Effect per 50 Strength/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Physical Weapon Damage while Dual Wielding',
    regex: /(\d+)% increased Physical Weapon Damage while Dual Wielding/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Level of all Cold Spell Skill Gems',
    regex: /\+(\d+) to Level of all Cold Spell Skill Gems/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Attack and Cast Speed if you\'ve Hit an Enemy Recently',
    regex: /(\d+)% increased Attack and Cast Speed if you've Hit an Enemy Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to maximum number of Spectres',
    regex: /\+(\d+) to maximum number of Spectres/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Minions deal #% increased Damage',
    regex: /Minions deal (\d+)% increased Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Burning Damage',
    regex: /Socketed Gems are Supported by Level (\d+) Burning Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Curse Enemies with Level # Conductivity on Hit',
    regex: /Curse Enemies with Level (\d+) Conductivity on Hit/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Projectiles deal #% increased Damage for each Enemy Pierced',
    regex: /Projectiles deal (\d+)% increased Damage for each Enemy Pierced/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Cast Speed while Dual Wielding',
    regex: /(\d+)% increased Cast Speed while Dual Wielding/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Damage per 15 Strength',
    regex: /(\d+)% increased Damage per 15 Strength/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Attack Speed while holding a Shield',
    regex: /(\d+)% increased Attack Speed while holding a Shield/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Critical Strike Chance',
    regex: /(\d+)% increased Critical Strike Chance/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to deal Double Damage',
    regex: /(\d+)% chance to deal Double Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Lightning Damage',
    regex: /Adds (\d+) to (\d+) Lightning Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Quantity of Fish Caught',
    regex: /(\d+)% increased Quantity of Fish Caught/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Gain #% of Physical Damage as Extra Fire Damage',
    regex: /Gain (\d+)% of Physical Damage as Extra Fire Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Increased Duration',
    regex: /Socketed Gems are Supported by Level (\d+) Increased Duration/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Bleeding Duration',
    regex: /(\d+)% increased Bleeding Duration/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Armour if you haven\'t Killed Recently',
    regex: /(\d+)% increased Armour if you haven't Killed Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Minion Life',
    regex: /Socketed Gems are Supported by Level (\d+) Minion Life/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Area of Effect of Aura Skills',
    regex: /(\d+)% increased Area of Effect of Aura Skills/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Global Defences',
    regex: /(\d+)% increased Global Defences/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Lightning Damage to Staff Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Staff Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Damage Penetrates #% Fire Resistance',
    regex: /Damage Penetrates (\d+)% Fire Resistance/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Maim',
    regex: /Socketed Gems are Supported by Level (\d+) Maim/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Physical Damage over Time Multiplier',
    regex: /\+(\d+)% to Physical Damage over Time Multiplier/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% of Physical Damage Converted to Cold Damage',
    regex: /(\d+)% of Physical Damage Converted to Cold Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Cold Damage to Staff Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Staff Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Grants Level # Anger Skill',
    regex: /Grants Level (\d+) Anger Skill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Fire Damage to Spells while wielding a Two Handed Weapon',
    regex: /Adds (\d+) to (\d+) Fire Damage to Spells while wielding a Two Handed Weapon/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Fire Damage to Staff Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Staff Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Regenerate #% of Life per second while moving',
    regex: /Regenerate (\d+)% of Life per second while moving/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Regenerate #% of Mana per second',
    regex: /Regenerate (\d+)% of Mana per second/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Unbound Ailments',
    regex: /Socketed Gems are Supported by Level (\d+) Unbound Ailments/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Minions deal #% increased Damage if you\'ve used a Minion Skill Recently',
    regex: /Minions deal (\d+)% increased Damage if you've used a Minion Skill Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to gain a Power Charge on Kill',
    regex: /(\d+)% chance to gain a Power Charge on Kill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Brutality',
    regex: /Socketed Gems are Supported by Level (\d+) Brutality/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Intelligence',
    regex: /(\d+)% increased Intelligence/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Minions deal # to # additional Physical Damage',
    regex: /Minions deal (\d+) to (\d+) additional Physical Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Effect of Chill',
    regex: /(\d+)% increased Effect of Chill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% Chance to Block Attack Damage while holding a Shield',
    regex: /\+(\d+)% Chance to Block Attack Damage while holding a Shield/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Minion Accuracy Rating',
    regex: /(\d+)% increased Minion Accuracy Rating/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# Life gained for each Enemy hit by Attacks',
    regex: /\+(\d+) Life gained for each Enemy hit by Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Damage with Hits against Chilled Enemies',
    regex: /(\d+)% increased Damage with Hits against Chilled Enemies/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Added Fire Damage',
    regex: /Socketed Gems are Supported by Level (\d+) Added Fire Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# Life gained on Kill',
    regex: /\+(\d+) Life gained on Kill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '-# to Total Mana Cost of Skills',
    regex: /-(\d+) to Total Mana Cost of Skills/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Attack Speed if you\'ve dealt a Critical Strike Recently',
    regex: /(\d+)% increased Attack Speed if you've dealt a Critical Strike Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Physical Damage to Spells',
    regex: /Adds (\d+) to (\d+) Physical Damage to Spells/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Projectile Attack Damage during any Flask Effect',
    regex: /(\d+)% increased Projectile Attack Damage during any Flask Effect/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Melee Critical Strike Multiplier',
    regex: /\+(\d+)% to Melee Critical Strike Multiplier/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Chaos Damage to Spells while wielding a Two Handed Weapon',
    regex: /Adds (\d+) to (\d+) Chaos Damage to Spells while wielding a Two Handed Weapon/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Grants Level # Hatred Skill',
    regex: /Grants Level (\d+) Hatred Skill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# Mana gained for each Enemy hit by your Attacks',
    regex: /\+(\d+) Mana gained for each Enemy hit by your Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% reduced Elemental Ailment Duration on you',
    regex: /(\d+)% reduced Elemental Ailment Duration on you/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Vaal Skill Effect Duration',
    regex: /(\d+)% increased Vaal Skill Effect Duration/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Enemies have #% reduced Evasion if you have Hit them Recently',
    regex: /Enemies have (\d+)% reduced Evasion if you have Hit them Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to maximum Lightning Resistance',
    regex: /\+(\d+)% to maximum Lightning Resistance/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Damage per 15 Dexterity',
    regex: /(\d+)% increased Damage per 15 Dexterity/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Lightning Damage to Bow Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Bow Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to maximum number of Summoned Totems',
    regex: /\+(\d+) to maximum number of Summoned Totems/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Critical Strike Multiplier with Staves',
    regex: /\+(\d+)% to Critical Strike Multiplier with Staves/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Critical Strike Chance with Mines',
    regex: /(\d+)% increased Critical Strike Chance with Mines/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Minions have #% increased Attack Speed',
    regex: /Minions have (\d+)% increased Attack Speed/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Critical Strike Multiplier with Maces and Sceptres',
    regex: /\+(\d+)% to Critical Strike Multiplier with Maces and Sceptres/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Skills have #% increased Cast Speed',
    regex: /Socketed Skills have (\d+)% increased Cast Speed/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% reduced Mana Reserved',
    regex: /(\d+)% reduced Mana Reserved/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Inspiration',
    regex: /Socketed Gems are Supported by Level (\d+) Inspiration/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Fire Damage to Spells while Dual Wielding',
    regex: /Adds (\d+) to (\d+) Fire Damage to Spells while Dual Wielding/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to Avoid being Frozen',
    regex: /(\d+)% chance to Avoid being Frozen/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance for Poisons inflicted with this Weapon to deal 100% more Damage',
    regex: /(\d+)% chance for Poisons inflicted with this Weapon to deal 100% more Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to gain an Endurance Charge when you Taunt an Enemy',
    regex: /(\d+)% chance to gain an Endurance Charge when you Taunt an Enemy/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to avoid Projectiles',
    regex: /(\d+)% chance to avoid Projectiles/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Cold Damage',
    regex: /Adds (\d+) to (\d+) Cold Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Critical Strike Multiplier with Elemental Skills',
    regex: /\+(\d+)% to Critical Strike Multiplier with Elemental Skills/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems Chain # additional times',
    regex: /Socketed Gems Chain (\d+) additional times/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Reflects # Physical Damage to Melee Attackers',
    regex: /Reflects (\d+) Physical Damage to Melee Attackers/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% of Physical Damage Leeched as Life',
    regex: /(\d+)% of Physical Damage Leeched as Life/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Regenerate #% of Energy Shield per second',
    regex: /Regenerate (\d+)% of Energy Shield per second/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Damage over Time while holding a Shield',
    regex: /(\d+)% increased Damage over Time while holding a Shield/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Blind',
    regex: /Socketed Gems are Supported by Level (\d+) Blind/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased maximum Life',
    regex: /(\d+)% increased maximum Life/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Elemental Proliferation',
    regex: /Socketed Gems are Supported by Level (\d+) Elemental Proliferation/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Evasion Rating while moving',
    regex: /(\d+)% increased Evasion Rating while moving/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Critical Strike Multiplier with Daggers',
    regex: /\+(\d+)% to Critical Strike Multiplier with Daggers/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to Chill Attackers for 4 seconds on Block',
    regex: /(\d+)% chance to Chill Attackers for 4 seconds on Block/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Minions deal # to # additional Cold Damage',
    regex: /Minions deal (\d+) to (\d+) additional Cold Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Critical Strike Multiplier with Chaos Skills',
    regex: /\+(\d+)% to Critical Strike Multiplier with Chaos Skills/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% reduced Mana Cost of Skills',
    regex: /(\d+)% reduced Mana Cost of Skills/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% of Physical Damage Converted to Fire Damage',
    regex: /(\d+)% of Physical Damage Converted to Fire Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Ignite Duration on Enemies',
    regex: /(\d+)% increased Ignite Duration on Enemies/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Weapon range',
    regex: /\+(\d+) to Weapon range/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Faster Projectiles',
    regex: /Socketed Gems are Supported by Level (\d+) Faster Projectiles/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Minions Leech #% of Damage as Life',
    regex: /Minions Leech (\d+)% of Damage as Life/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Chaos Damage',
    regex: /(\d+)% increased Chaos Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Cast Speed while wielding a Staff',
    regex: /(\d+)% increased Cast Speed while wielding a Staff/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Grants Level # Vitality Skill',
    regex: /Grants Level (\d+) Vitality Skill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Flasks applied to you have #% increased Effect',
    regex: /Flasks applied to you have (\d+)% increased Effect/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Grants Level # Clarity Skill',
    regex: /Grants Level (\d+) Clarity Skill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Hypothermia',
    regex: /Socketed Gems are Supported by Level (\d+) Hypothermia/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Spell Cascade',
    regex: /Socketed Gems are Supported by Level (\d+) Spell Cascade/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Effect of your Curses',
    regex: /(\d+)% increased Effect of your Curses/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Physical Damage against Poisoned Enemies',
    regex: /Adds (\d+) to (\d+) Physical Damage against Poisoned Enemies/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Attack Speed with Unarmed Attacks',
    regex: /(\d+)% increased Attack Speed with Unarmed Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Critical Strike Chance with Claws',
    regex: /(\d+)% increased Critical Strike Chance with Claws/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Increased Critical Damage',
    regex: /Socketed Gems are Supported by Level (\d+) Increased Critical Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Cast Speed during any Flask Effect',
    regex: /(\d+)% increased Cast Speed during any Flask Effect/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Gain #% of Physical Damage as Extra Fire Damage if you\'ve dealt a Critical Strike Recently',
    regex: /Gain (\d+)% of Physical Damage as Extra Fire Damage if you've dealt a Critical Strike Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Cast Speed with Chaos Skills',
    regex: /(\d+)% increased Cast Speed with Chaos Skills/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Energy Shield Recharge Rate',
    regex: /(\d+)% increased Energy Shield Recharge Rate/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Physical Damage to Spells while Dual Wielding',
    regex: /Adds (\d+) to (\d+) Physical Damage to Spells while Dual Wielding/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Critical Strike Multiplier for Spells',
    regex: /\+(\d+)% to Critical Strike Multiplier for Spells/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Fire Damage',
    regex: /Adds (\d+) to (\d+) Fire Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Chaos Damage to Attacks',
    regex: /Adds (\d+) to (\d+) Chaos Damage to Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% of Physical Damage from Hits taken as Fire Damage',
    regex: /(\d+)% of Physical Damage from Hits taken as Fire Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Faster Casting',
    regex: /Socketed Gems are Supported by Level (\d+) Faster Casting/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% additional Physical Damage Reduction while moving',
    regex: /(\d+)% additional Physical Damage Reduction while moving/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Critical Strike Multiplier with Two Handed Melee Weapons',
    regex: /\+(\d+)% to Critical Strike Multiplier with Two Handed Melee Weapons/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Critical Strike Chance with Daggers',
    regex: /(\d+)% increased Critical Strike Chance with Daggers/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Elemental Damage',
    regex: /(\d+)% increased Elemental Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Critical Strike Multiplier if you haven\'t dealt a Critical Strike Recently',
    regex: /\+(\d+)% to Critical Strike Multiplier if you haven't dealt a Critical Strike Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to Avoid being Shocked',
    regex: /(\d+)% chance to Avoid being Shocked/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Fire Damage to Spells while holding a Shield',
    regex: /Adds (\d+) to (\d+) Fire Damage to Spells while holding a Shield/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to Blind Enemies on Hit with Attacks',
    regex: /(\d+)% chance to Blind Enemies on Hit with Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% Chance to Block Attack Damage per Endurance Charge',
    regex: /\+(\d+)% Chance to Block Attack Damage per Endurance Charge/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% Chance to Block Attack Damage while wielding a Staff',
    regex: /\+(\d+)% Chance to Block Attack Damage while wielding a Staff/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems deal #% more Damage over Time',
    regex: /Socketed Gems deal (\d+)% more Damage over Time/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to gain an Endurance Charge when you Hit a Bleeding Enemy',
    regex: /(\d+)% chance to gain an Endurance Charge when you Hit a Bleeding Enemy/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# Mana gained when you Block',
    regex: /\+(\d+) Mana gained when you Block/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Attacks have +#% to Critical Strike Multiplier',
    regex: /Socketed Attacks have \+(\d+)% to Critical Strike Multiplier/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems deal # to # additional Fire Damage',
    regex: /Socketed Gems deal (\d+) to (\d+) additional Fire Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Area of Effect if you have Stunned an Enemy Recently',
    regex: /(\d+)% increased Area of Effect if you have Stunned an Enemy Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Minions deal # to # additional Lightning Damage',
    regex: /Minions deal (\d+) to (\d+) additional Lightning Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to Avoid being Chilled',
    regex: /(\d+)% chance to Avoid being Chilled/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Critical Strike Multiplier with Wands',
    regex: /\+(\d+)% to Critical Strike Multiplier with Wands/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% chance to Evade Attacks',
    regex: /\+(\d+)% chance to Evade Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Recover #% of Energy Shield on Kill',
    regex: /Recover (\d+)% of Energy Shield on Kill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% reduced Chaos Damage taken',
    regex: /(\d+)% reduced Chaos Damage taken/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Global Physical Damage',
    regex: /(\d+)% increased Global Physical Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Cold Damage to Claw Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Claw Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Gain #% of Physical Damage as Extra Lightning Damage',
    regex: /Gain (\d+)% of Physical Damage as Extra Lightning Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Critical Strike Multiplier with Cold Skills',
    regex: /\+(\d+)% to Critical Strike Multiplier with Cold Skills/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% additional Physical Damage Reduction against Abyssal Monsters',
    regex: /(\d+)% additional Physical Damage Reduction against Abyssal Monsters/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# Armour if you\'ve Blocked Recently',
    regex: /\+(\d+) Armour if you've Blocked Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Critical Strike Chance with Axes',
    regex: /(\d+)% increased Critical Strike Chance with Axes/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Grants Level # Decoy Totem Skill',
    regex: /Grants Level (\d+) Decoy Totem Skill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Gain #% of Lightning Damage as Extra Chaos Damage',
    regex: /Gain (\d+)% of Lightning Damage as Extra Chaos Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% reduced Fire Damage taken',
    regex: /(\d+)% reduced Fire Damage taken/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to Avoid Elemental Ailments',
    regex: /(\d+)% chance to Avoid Elemental Ailments/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Physical Damage to Claw Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Claw Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Grants Level # Aspect of the Cat Skill',
    regex: /Grants Level (\d+) Aspect of the Cat Skill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Fire Damage to Claw Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Claw Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Attack Speed with Claws',
    regex: /(\d+)% increased Attack Speed with Claws/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Spell Damage per 16 Strength',
    regex: /(\d+)% increased Spell Damage per 16 Strength/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Mana Leech',
    regex: /Socketed Gems are Supported by Level (\d+) Mana Leech/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Chaos Resistance during any Flask Effect',
    regex: /\+(\d+)% to Chaos Resistance during any Flask Effect/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Fire Damage to Sword Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Sword Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Flask Mana Recovery rate',
    regex: /(\d+)% increased Flask Mana Recovery rate/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems have #% chance to Ignite',
    regex: /Socketed Gems have (\d+)% chance to Ignite/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% of Cold Damage Leeched as Life',
    regex: /(\d+)% of Cold Damage Leeched as Life/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% reduced Elemental Damage Taken while stationary',
    regex: /(\d+)% reduced Elemental Damage Taken while stationary/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% Chaos Resistance against Damage Over Time',
    regex: /\+(\d+)% Chaos Resistance against Damage Over Time/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to gain a Frenzy Charge when you Block',
    regex: /(\d+)% chance to gain a Frenzy Charge when you Block/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Endurance Charge Duration',
    regex: /(\d+)% increased Endurance Charge Duration/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Projectile Damage',
    regex: /(\d+)% increased Projectile Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Grants Level # Herald of Ice Skill',
    regex: /Grants Level (\d+) Herald of Ice Skill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Damage over Time while wielding a Two Handed Weapon',
    regex: /(\d+)% increased Damage over Time while wielding a Two Handed Weapon/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Minions have +#% to all Elemental Resistances',
    regex: /Minions have \+(\d+)% to all Elemental Resistances/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Critical Strike Chance with Maces and Sceptres',
    regex: /(\d+)% increased Critical Strike Chance with Maces and Sceptres/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Lightning Damage to Axe Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Axe Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# Life gained for each Enemy hit by your Spells',
    regex: /\+(\d+) Life gained for each Enemy hit by your Spells/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Cold and Lightning Resistances',
    regex: /\+(\d+)% to Cold and Lightning Resistances/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Damage with Bleeding',
    regex: /(\d+)% increased Damage with Bleeding/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Projectiles Pierce # additional Targets',
    regex: /Projectiles Pierce (\d+) additional Targets/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to maximum number of Skeletons',
    regex: /\+(\d+) to maximum number of Skeletons/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% reduced Attribute Requirements',
    regex: /(\d+)% reduced Attribute Requirements/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Minions have #% chance to Taunt on Hit with Attacks',
    regex: /Minions have (\d+)% chance to Taunt on Hit with Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Curse Enemies with Level # Assassin\'s Mark on Hit',
    regex: /Curse Enemies with Level (\d+) Assassin's Mark on Hit/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to Recover 10% of Mana when you use a Skill',
    regex: /(\d+)% chance to Recover 10% of Mana when you use a Skill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '# Physical Damage taken from Attack Hits',
    regex: /(\d+) Physical Damage taken from Attack Hits/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% Chance to Block Projectile Attack Damage',
    regex: /\+(\d+)% Chance to Block Projectile Attack Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% reduced Reflected Damage taken',
    regex: /(\d+)% reduced Reflected Damage taken/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Immolate',
    regex: /Socketed Gems are Supported by Level (\d+) Immolate/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Area of Effect',
    regex: /(\d+)% increased Area of Effect/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Minions have #% chance to Blind on Hit with Attacks',
    regex: /Minions have (\d+)% chance to Blind on Hit with Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% Chance to Block Attack Damage if you were Damaged by a Hit Recently',
    regex: /\+(\d+)% Chance to Block Attack Damage if you were Damaged by a Hit Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Shock Duration on Enemies',
    regex: /(\d+)% increased Shock Duration on Enemies/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Damage against Abyssal Monsters',
    regex: /(\d+)% increased Damage against Abyssal Monsters/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Cold Damage to Spells while Dual Wielding',
    regex: /Adds (\d+) to (\d+) Cold Damage to Spells while Dual Wielding/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Critical Strike Chance with Wands',
    regex: /(\d+)% increased Critical Strike Chance with Wands/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased maximum Mana',
    regex: /(\d+)% increased maximum Mana/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Non-Channelling Skills have -# to Total Mana Cost',
    regex: /Non-Channelling Skills have -(\d+) to Total Mana Cost/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Spell Damage per 10 Strength',
    regex: /(\d+)% increased Spell Damage per 10 Strength/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Cold Damage to Bow Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Bow Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Critical Strike Chance while holding a Shield',
    regex: /(\d+)% increased Critical Strike Chance while holding a Shield/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Life Recovery from Flasks',
    regex: /(\d+)% increased Life Recovery from Flasks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Damage with Wands',
    regex: /(\d+)% increased Damage with Wands/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Flask Charges gained',
    regex: /(\d+)% increased Flask Charges gained/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Minions Regenerate #% of Life per second',
    regex: /Minions Regenerate (\d+)% of Life per second/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Fire Damage over Time Multiplier',
    regex: /\+(\d+)% to Fire Damage over Time Multiplier/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Faster Attacks',
    regex: /Socketed Gems are Supported by Level (\d+) Faster Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Poison',
    regex: /Socketed Gems are Supported by Level (\d+) Poison/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Physical Damage',
    regex: /Adds (\d+) to (\d+) Physical Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Level of Socketed Support Gems',
    regex: /\+(\d+) to Level of Socketed Support Gems/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Minions deal # to # additional Fire Damage',
    regex: /Minions deal (\d+) to (\d+) additional Fire Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Lightning Damage against Shocked Enemies',
    regex: /Adds (\d+) to (\d+) Lightning Damage against Shocked Enemies/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Increased Area of Effect',
    regex: /Socketed Gems are Supported by Level (\d+) Increased Area of Effect/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Melee Movement Skills have #% chance to Fortify on Hit',
    regex: /Melee Movement Skills have (\d+)% chance to Fortify on Hit/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Regenerate #% of Life per second',
    regex: /Regenerate (\d+)% of Life per second/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% reduced Reflected Physical Damage taken',
    regex: /(\d+)% reduced Reflected Physical Damage taken/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to gain a Power, Frenzy or Endurance Charge on Kill',
    regex: /(\d+)% chance to gain a Power, Frenzy or Endurance Charge on Kill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Spell Totem',
    regex: /Socketed Gems are Supported by Level (\d+) Spell Totem/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Light Radius',
    regex: /(\d+)% increased Light Radius/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Grants Level # Discipline Skill',
    regex: /Grants Level (\d+) Discipline Skill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems deal #% more Elemental Damage',
    regex: /Socketed Gems deal (\d+)% more Elemental Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% Chance to Block Spell Damage while Dual Wielding',
    regex: /\+(\d+)% Chance to Block Spell Damage while Dual Wielding/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to Avoid being Stunned',
    regex: /(\d+)% chance to Avoid being Stunned/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Fire Damage to Spells and Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Spells and Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Recover #% of Energy Shield when you Block',
    regex: /Recover (\d+)% of Energy Shield when you Block/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Power Charge On Critical Strike',
    regex: /Socketed Gems are Supported by Level (\d+) Power Charge On Critical Strike/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Area of Effect per Endurance Charge',
    regex: /(\d+)% increased Area of Effect per Endurance Charge/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Attack Speed while Dual Wielding',
    regex: /(\d+)% increased Attack Speed while Dual Wielding/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to gain a Frenzy Charge on Kill',
    regex: /(\d+)% chance to gain a Frenzy Charge on Kill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Vaal Skill Critical Strike Chance',
    regex: /(\d+)% increased Vaal Skill Critical Strike Chance/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Fire Damage',
    regex: /(\d+)% increased Fire Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Level of Socketed Dexterity Gems',
    regex: /\+(\d+) to Level of Socketed Dexterity Gems/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Evasion Rating',
    regex: /\+(\d+) to Evasion Rating/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% of Physical Damage from Hits taken as Chaos Damage',
    regex: /(\d+)% of Physical Damage from Hits taken as Chaos Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Critical Strike Chance if you have Killed Recently',
    regex: /(\d+)% increased Critical Strike Chance if you have Killed Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Physical Damage to Axe Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Axe Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Maximum Power Charges',
    regex: /\+(\d+) to Maximum Power Charges/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to gain an additional Vaal Soul on Kill',
    regex: /(\d+)% chance to gain an additional Vaal Soul on Kill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% of Spell Damage Leeched as Mana',
    regex: /(\d+)% of Spell Damage Leeched as Mana/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Damage Penetrates #% Elemental Resistance if you haven\'t Killed Recently',
    regex: /Damage Penetrates (\d+)% Elemental Resistance if you haven't Killed Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Critical Strike Chance with Chaos Skills',
    regex: /(\d+)% increased Critical Strike Chance with Chaos Skills/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Nearby Enemies have #% to Cold Resistance',
    regex: /Nearby Enemies have (\d+)% to Cold Resistance/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Cold Damage to Dagger Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Dagger Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Spells have +#% to Critical Strike Chance',
    regex: /Spells have \+(\d+)% to Critical Strike Chance/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Grants Level # Herald of Ash Skill',
    regex: /Grants Level (\d+) Herald of Ash Skill/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to gain a Power Charge when you Block',
    regex: /(\d+)% chance to gain a Power Charge when you Block/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Effect of Auras on you',
    regex: /(\d+)% increased Effect of Auras on you/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Lightning Damage to Spells while holding a Shield',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Spells while holding a Shield/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Curse Skills have #% increased Skill Effect Duration',
    regex: /Curse Skills have (\d+)% increased Skill Effect Duration/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Cast when Damage Taken',
    regex: /Socketed Gems are Supported by Level (\d+) Cast when Damage Taken/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Damage during any Flask Effect',
    regex: /(\d+)% increased Damage during any Flask Effect/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Attack Damage while holding a Shield',
    regex: /(\d+)% increased Attack Damage while holding a Shield/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Melee Weapon Range if you have Killed Recently',
    regex: /\+(\d+) to Melee Weapon Range if you have Killed Recently/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Level of Socketed Trap or Mine Gems',
    regex: /\+(\d+) to Level of Socketed Trap or Mine Gems/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Stun and Block Recovery',
    regex: /(\d+)% increased Stun and Block Recovery/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Melee Critical Strike Chance',
    regex: /(\d+)% increased Melee Critical Strike Chance/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Curse Enemies with Level # Flammability on Hit',
    regex: /Curse Enemies with Level (\d+) Flammability on Hit/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Gain #% of Non-Chaos Damage as extra Chaos Damage',
    regex: /Gain (\d+)% of Non-Chaos Damage as extra Chaos Damage/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Fortify',
    regex: /Socketed Gems are Supported by Level (\d+) Fortify/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Critical Strike Multiplier with Lightning Skills',
    regex: /\+(\d+)% to Critical Strike Multiplier with Lightning Skills/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+# to Level of all Chaos Spell Skill Gems',
    regex: /\+(\d+) to Level of all Chaos Spell Skill Gems/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems are Supported by Level # Ancestral Call',
    regex: /Socketed Gems are Supported by Level (\d+) Ancestral Call/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% chance to Poison on Hit',
    regex: /(\d+)% chance to Poison on Hit/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Attacks with this Weapon Penetrate #% Elemental Resistances',
    regex: /Attacks with this Weapon Penetrate (\d+)% Elemental Resistances/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Recover #% of Life when you Block',
    regex: /Recover (\d+)% of Life when you Block/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Critical Strike Multiplier against Enemies that are on Full Life',
    regex: /\+(\d+)% to Critical Strike Multiplier against Enemies that are on Full Life/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Damage with Poison',
    regex: /(\d+)% increased Damage with Poison/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Physical Damage to Spells while holding a Shield',
    regex: /Adds (\d+) to (\d+) Physical Damage to Spells while holding a Shield/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Lightning Damage to Claw Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Claw Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Lightning Damage to Spells while Dual Wielding',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Spells while Dual Wielding/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Damage with Ailments',
    regex: /(\d+)% increased Damage with Ailments/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Physical Damage to Mace and Sceptre Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Mace and Sceptre Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Weapon Damage while Dual Wielding',
    regex: /(\d+)% increased Weapon Damage while Dual Wielding/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Curse Enemies with Level # Vulnerability on Hit',
    regex: /Curse Enemies with Level (\d+) Vulnerability on Hit/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Cold Damage to Spells',
    regex: /Adds (\d+) to (\d+) Cold Damage to Spells/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Socketed Gems have #% more Attack and Cast Speed',
    regex: /Socketed Gems have (\d+)% more Attack and Cast Speed/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Melee Critical Strike Multiplier while holding a Shield',
    regex: /\+(\d+)% to Melee Critical Strike Multiplier while holding a Shield/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Trap Duration',
    regex: /(\d+)% increased Trap Duration/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '+#% to Critical Strike Multiplier with Swords',
    regex: /\+(\d+)% to Critical Strike Multiplier with Swords/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Physical Damage to Dagger Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Dagger Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Critical Strike Chance against Poisoned Enemies',
    regex: /(\d+)% increased Critical Strike Chance against Poisoned Enemies/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Adds # to # Lightning Damage to Sword Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Sword Attacks/,
    type: ModFilterType.TOTAL,
  },
  {
    label: '#% increased Damage per Power Charge',
    regex: /(\d+)% increased Damage per Power Charge/,
    type: ModFilterType.TOTAL,
  },
  {
    label: 'Totems gain +#% to all Elemental Resistances',
    regex: /Totems gain \+(\d+)% to all Elemental Resistances/,
    type: ModFilterType.TOTAL,
  },
];
/* [pseudo] mods */
export const pseudoModRegexes: IMod[] = [
  // sum of armour and evasion
  {
    label: '# Armour + Evasion',
    regex: /(\d+) Armour \+ Evasion/,
    type: ModFilterType.PSEUDO,
  },
  // number fractured mods
  {
    label: '# Fractured Modifiers',
    regex: /(\d+) Fractured Modifiers/,
    type: ModFilterType.PSEUDO,
  },
  // total elemental resistance
  {
    label: '+#% total Elemental Resistance',
    regex: /\+(\d+)% total Elemental Resistance/,
    type: ModFilterType.PSEUDO,
  },
  // total resistance
  {
    label: '+#% total Resistance',
    regex: /\+(\d+)% total Resistance/,
    type: ModFilterType.PSEUDO,
  },
];
/* explicit */
export const explicitModRegexes: IMod[] = [
  {
    label: '# Enemy Writhing Worms escape the Flask when used Writhing Worms are destroyed when Hit',
    regex: /(\d+) Enemy Writhing Worms escape the Flask when used Writhing Worms are destroyed when Hit/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '# Physical Damage taken from Attack Hits',
    regex: /(\d+) Physical Damage taken from Attack Hits/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '# Physical Damage taken from Hits',
    regex: /(\d+) Physical Damage taken from Hits/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '# to # added Fire Damage against Burning Enemies',
    regex: /(\d+) to (\d+) added Fire Damage against Burning Enemies/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '# to # Cold Damage per Frenzy Charge',
    regex: /(\d+) to (\d+) Cold Damage per Frenzy Charge/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% additional Elemental Resistances during Flask effect',
    regex: /(\d+)% additional Elemental Resistances during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% additional Physical Damage Reduction',
    regex: /(\d+)% additional Physical Damage Reduction/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% additional Physical Damage Reduction against Abyssal Monsters',
    regex: /(\d+)% additional Physical Damage Reduction against Abyssal Monsters/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% additional Physical Damage Reduction during any Flask Effect',
    regex: /(\d+)% additional Physical Damage Reduction during any Flask Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% additional Physical Damage Reduction during Flask Effect',
    regex: /(\d+)% additional Physical Damage Reduction during Flask Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% additional Physical Damage Reduction if you weren\'t Damaged by a Hit Recently',
    regex: /(\d+)% additional Physical Damage Reduction if you weren't Damaged by a Hit Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% additional Physical Damage Reduction while moving',
    regex: /(\d+)% additional Physical Damage Reduction while moving/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance for Bleeding inflicted with this Weapon to deal 100% more Damage',
    regex: /(\d+)% chance for Bleeding inflicted with this Weapon to deal 100% more Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance for Poisons inflicted with this Weapon to deal 100% more Damage',
    regex: /(\d+)% chance for Poisons inflicted with this Weapon to deal 100% more Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance for your Flasks to not consume Charges',
    regex: /(\d+)% chance for your Flasks to not consume Charges/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Avoid being Chilled',
    regex: /(\d+)% chance to Avoid being Chilled/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Avoid being Chilled during Flask effect',
    regex: /(\d+)% chance to Avoid being Chilled during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Avoid being Frozen',
    regex: /(\d+)% chance to Avoid being Frozen/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Avoid being Frozen during Flask effect',
    regex: /(\d+)% chance to Avoid being Frozen during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Avoid being Ignited',
    regex: /(\d+)% chance to Avoid being Ignited/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Avoid being Poisoned',
    regex: /(\d+)% chance to Avoid being Poisoned/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Avoid being Shocked',
    regex: /(\d+)% chance to Avoid being Shocked/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Avoid being Stunned',
    regex: /(\d+)% chance to Avoid being Stunned/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to avoid Bleeding',
    regex: /(\d+)% chance to avoid Bleeding/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Avoid Cold Damage from Hits',
    regex: /(\d+)% chance to Avoid Cold Damage from Hits/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Avoid Elemental Ailments',
    regex: /(\d+)% chance to Avoid Elemental Ailments/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Avoid Fire Damage from Hits',
    regex: /(\d+)% chance to Avoid Fire Damage from Hits/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Avoid interruption from Stuns while Casting',
    regex: /(\d+)% chance to Avoid interruption from Stuns while Casting/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Avoid Lightning Damage from Hits',
    regex: /(\d+)% chance to Avoid Lightning Damage from Hits/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to avoid Projectiles',
    regex: /(\d+)% chance to avoid Projectiles/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Blind Enemies on Hit with Attacks',
    regex: /(\d+)% chance to Blind Enemies on Hit with Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Blind Enemies when they Hit you',
    regex: /(\d+)% chance to Blind Enemies when they Hit you/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% Chance to Block Attack Damage',
    regex: /(\d+)% Chance to Block Attack Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% Chance to Block Spell Damage',
    regex: /(\d+)% Chance to Block Spell Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Cast Level 20 Fire Burst on Hit',
    regex: /(\d+)% chance to Cast Level 20 Fire Burst on Hit/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to cause Bleeding on Hit',
    regex: /(\d+)% chance to cause Bleeding on Hit/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to cause Enemies to Flee on use',
    regex: /(\d+)% chance to cause Enemies to Flee on use/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Chill Attackers for 4 seconds on Block',
    regex: /(\d+)% chance to Chill Attackers for 4 seconds on Block/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to deal Double Damage',
    regex: /(\d+)% chance to deal Double Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Dodge Attack and Spell Hits if you\'ve been Hit Recently',
    regex: /(\d+)% chance to Dodge Attack and Spell Hits if you've been Hit Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Dodge Attack Hits',
    regex: /(\d+)% chance to Dodge Attack Hits/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Dodge Attack Hits if you have Blocked Recently',
    regex: /(\d+)% chance to Dodge Attack Hits if you have Blocked Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Dodge Spell Hits',
    regex: /(\d+)% chance to Dodge Spell Hits/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Freeze',
    regex: /(\d+)% chance to Freeze/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Freeze, Shock and Ignite',
    regex: /(\d+)% chance to Freeze, Shock and Ignite/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Freeze, Shock and Ignite during Flask effect',
    regex: /(\d+)% chance to Freeze, Shock and Ignite during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to gain a Flask Charge when you deal a Critical Strike',
    regex: /(\d+)% chance to gain a Flask Charge when you deal a Critical Strike/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to gain a Frenzy Charge on Kill',
    regex: /(\d+)% chance to gain a Frenzy Charge on Kill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to gain a Frenzy Charge when Hit',
    regex: /(\d+)% chance to gain a Frenzy Charge when Hit/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to gain a Frenzy Charge when you Block',
    regex: /(\d+)% chance to gain a Frenzy Charge when you Block/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to gain a Frenzy Charge when you Hit a Rare or Unique Enemy',
    regex: /(\d+)% chance to gain a Frenzy Charge when you Hit a Rare or Unique Enemy/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to gain a Power Charge on Critical Strike',
    regex: /(\d+)% chance to gain a Power Charge on Critical Strike/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to gain a Power Charge on Kill',
    regex: /(\d+)% chance to gain a Power Charge on Kill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to gain a Power Charge when you Block',
    regex: /(\d+)% chance to gain a Power Charge when you Block/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to gain a Power, Frenzy or Endurance Charge on Kill',
    regex: /(\d+)% chance to gain a Power, Frenzy or Endurance Charge on Kill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to gain an additional Vaal Soul on Kill',
    regex: /(\d+)% chance to gain an additional Vaal Soul on Kill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to gain an Endurance Charge on Critical Strike',
    regex: /(\d+)% chance to gain an Endurance Charge on Critical Strike/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to gain an Endurance Charge on Kill',
    regex: /(\d+)% chance to gain an Endurance Charge on Kill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to gain an Endurance Charge when you Block',
    regex: /(\d+)% chance to gain an Endurance Charge when you Block/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to gain an Endurance Charge when you Hit a Bleeding Enemy',
    regex: /(\d+)% chance to gain an Endurance Charge when you Hit a Bleeding Enemy/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to gain an Endurance Charge when you Stun an Enemy',
    regex: /(\d+)% chance to gain an Endurance Charge when you Stun an Enemy/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to gain an Endurance Charge when you Taunt an Enemy',
    regex: /(\d+)% chance to gain an Endurance Charge when you Taunt an Enemy/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to gain Fortify when you Stun an Enemy with Melee Damage',
    regex: /(\d+)% chance to gain Fortify when you Stun an Enemy with Melee Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to gain Onslaught for 4 seconds on Kill',
    regex: /(\d+)% chance to gain Onslaught for 4 seconds on Kill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to gain Onslaught when you use a Flask',
    regex: /(\d+)% chance to gain Onslaught when you use a Flask/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to gain Phasing for 4 seconds on Kill',
    regex: /(\d+)% chance to gain Phasing for 4 seconds on Kill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to gain Unholy Might for 3 seconds on Kill',
    regex: /(\d+)% chance to gain Unholy Might for 3 seconds on Kill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Gain Unholy Might for 4 seconds on Melee Kill',
    regex: /(\d+)% chance to Gain Unholy Might for 4 seconds on Melee Kill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Hinder Enemies on Hit with Spells, with 30% reduced Movement Speed',
    regex: /(\d+)% chance to Hinder Enemies on Hit with Spells, with 30% reduced Movement Speed/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Ignite',
    regex: /(\d+)% chance to Ignite/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to inflict Bleeding on Hit with Attacks against Taunted Enemies',
    regex: /(\d+)% chance to inflict Bleeding on Hit with Attacks against Taunted Enemies/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Intimidate Enemies for 4 seconds on Hit',
    regex: /(\d+)% chance to Intimidate Enemies for 4 seconds on Hit/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Knock Enemies Back on hit',
    regex: /(\d+)% chance to Knock Enemies Back on hit/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Maim on Hit',
    regex: /(\d+)% chance to Maim on Hit/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Poison on Hit',
    regex: /(\d+)% chance to Poison on Hit/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Poison on Hit during Flask effect',
    regex: /(\d+)% chance to Poison on Hit during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Recover 10% of Mana when you use a Skill',
    regex: /(\d+)% chance to Recover 10% of Mana when you use a Skill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Shock',
    regex: /(\d+)% chance to Shock/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Shock Attackers for 4 seconds on Block',
    regex: /(\d+)% chance to Shock Attackers for 4 seconds on Block/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance to Taunt Enemies on Hit with Attacks',
    regex: /(\d+)% chance to Taunt Enemies on Hit with Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% chance when Hit for double Armour effect',
    regex: /(\d+)% chance when Hit for double Armour effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% faster start of Energy Shield Recharge',
    regex: /(\d+)% faster start of Energy Shield Recharge/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% Global chance to Blind Enemies on hit',
    regex: /(\d+)% Global chance to Blind Enemies on hit/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Accuracy Rating if you haven\'t Killed Recently',
    regex: /(\d+)% increased Accuracy Rating if you haven't Killed Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Accuracy Rating per Frenzy Charge',
    regex: /(\d+)% increased Accuracy Rating per Frenzy Charge/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Amount Recovered',
    regex: /(\d+)% increased Amount Recovered/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Area Damage',
    regex: /(\d+)% increased Area Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Area Damage per 12 Strength',
    regex: /(\d+)% increased Area Damage per 12 Strength/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Area of Effect',
    regex: /(\d+)% increased Area of Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Area of Effect during Flask Effect',
    regex: /(\d+)% increased Area of Effect during Flask Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Area of Effect if you have at least 500 Strength',
    regex: /(\d+)% increased Area of Effect if you have at least 500 Strength/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Area of Effect if you have Blocked Recently',
    regex: /(\d+)% increased Area of Effect if you have Blocked Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Area of Effect if you have Stunned an Enemy Recently',
    regex: /(\d+)% increased Area of Effect if you have Stunned an Enemy Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Area of Effect of Aura Skills',
    regex: /(\d+)% increased Area of Effect of Aura Skills/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Area of Effect of Curse Skills',
    regex: /(\d+)% increased Area of Effect of Curse Skills/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Area of Effect per 50 Strength',
    regex: /(\d+)% increased Area of Effect per 50 Strength/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Area of Effect per Endurance Charge',
    regex: /(\d+)% increased Area of Effect per Endurance Charge/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Area of Effect per Power Charge',
    regex: /(\d+)% increased Area of Effect per Power Charge/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Area of Effect while Fortified',
    regex: /(\d+)% increased Area of Effect while Fortified/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Armour',
    regex: /(\d+)% increased Armour/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Armour and Energy Shield',
    regex: /(\d+)% increased Armour and Energy Shield/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Armour and Evasion',
    regex: /(\d+)% increased Armour and Evasion/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Armour during Flask effect',
    regex: /(\d+)% increased Armour during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Armour if you haven\'t Killed Recently',
    regex: /(\d+)% increased Armour if you haven't Killed Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Armour, Evasion and Energy Shield',
    regex: /(\d+)% increased Armour, Evasion and Energy Shield/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Attack and Cast Speed',
    regex: /(\d+)% increased Attack and Cast Speed/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Attack and Cast Speed during any Flask Effect',
    regex: /(\d+)% increased Attack and Cast Speed during any Flask Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Attack and Cast Speed if you\'ve Hit an Enemy Recently',
    regex: /(\d+)% increased Attack and Cast Speed if you've Hit an Enemy Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Attack Damage',
    regex: /(\d+)% increased Attack Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Attack Damage while holding a Shield',
    regex: /(\d+)% increased Attack Damage while holding a Shield/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Attack Speed',
    regex: /(\d+)% increased Attack Speed/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Attack Speed during any Flask Effect',
    regex: /(\d+)% increased Attack Speed during any Flask Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Attack Speed during Flask effect',
    regex: /(\d+)% increased Attack Speed during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Attack Speed if you have Blocked Recently',
    regex: /(\d+)% increased Attack Speed if you have Blocked Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Attack Speed if you\'ve dealt a Critical Strike Recently',
    regex: /(\d+)% increased Attack Speed if you've dealt a Critical Strike Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Attack Speed if you\'ve Killed Recently',
    regex: /(\d+)% increased Attack Speed if you've Killed Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Attack Speed while Dual Wielding',
    regex: /(\d+)% increased Attack Speed while Dual Wielding/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Attack Speed while holding a Shield',
    regex: /(\d+)% increased Attack Speed while holding a Shield/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Attack Speed with Axes',
    regex: /(\d+)% increased Attack Speed with Axes/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Attack Speed with Bows',
    regex: /(\d+)% increased Attack Speed with Bows/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Attack Speed with Claws',
    regex: /(\d+)% increased Attack Speed with Claws/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Attack Speed with Daggers',
    regex: /(\d+)% increased Attack Speed with Daggers/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Attack Speed with Maces and Sceptres',
    regex: /(\d+)% increased Attack Speed with Maces and Sceptres/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Attack Speed with One Handed Melee Weapons',
    regex: /(\d+)% increased Attack Speed with One Handed Melee Weapons/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Attack Speed with Staves',
    regex: /(\d+)% increased Attack Speed with Staves/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Attack Speed with Swords',
    regex: /(\d+)% increased Attack Speed with Swords/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Attack Speed with Two Handed Melee Weapons',
    regex: /(\d+)% increased Attack Speed with Two Handed Melee Weapons/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Attack Speed with Unarmed Attacks',
    regex: /(\d+)% increased Attack Speed with Unarmed Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Attack Speed with Wands',
    regex: /(\d+)% increased Attack Speed with Wands/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Attack, Cast and Movement Speed during Flask Effect',
    regex: /(\d+)% increased Attack, Cast and Movement Speed during Flask Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Attributes',
    regex: /(\d+)% increased Attributes/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Bleeding Duration',
    regex: /(\d+)% increased Bleeding Duration/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Block and Stun Recovery during Flask effect',
    regex: /(\d+)% increased Block and Stun Recovery during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Burning Damage',
    regex: /(\d+)% increased Burning Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Cast Speed',
    regex: /(\d+)% increased Cast Speed/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Cast Speed during any Flask Effect',
    regex: /(\d+)% increased Cast Speed during any Flask Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Cast Speed during Flask effect',
    regex: /(\d+)% increased Cast Speed during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Cast Speed if a Minion has been Killed Recently',
    regex: /(\d+)% increased Cast Speed if a Minion has been Killed Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Cast Speed if you\'ve dealt a Critical Strike Recently',
    regex: /(\d+)% increased Cast Speed if you've dealt a Critical Strike Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Cast Speed if you\'ve Killed Recently',
    regex: /(\d+)% increased Cast Speed if you've Killed Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Cast Speed while Dual Wielding',
    regex: /(\d+)% increased Cast Speed while Dual Wielding/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Cast Speed while holding a Shield',
    regex: /(\d+)% increased Cast Speed while holding a Shield/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Cast Speed while wielding a Staff',
    regex: /(\d+)% increased Cast Speed while wielding a Staff/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Cast Speed with Chaos Skills',
    regex: /(\d+)% increased Cast Speed with Chaos Skills/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Cast Speed with Cold Skills',
    regex: /(\d+)% increased Cast Speed with Cold Skills/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Cast Speed with Fire Skills',
    regex: /(\d+)% increased Cast Speed with Fire Skills/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Cast Speed with Lightning Skills',
    regex: /(\d+)% increased Cast Speed with Lightning Skills/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Chaos Damage',
    regex: /(\d+)% increased Chaos Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Charge Recovery',
    regex: /(\d+)% increased Charge Recovery/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Charges gained by Other Flasks during Flask Effect',
    regex: /(\d+)% increased Charges gained by Other Flasks during Flask Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Charges used',
    regex: /(\d+)% increased Charges used/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Chill and Freeze Duration on Enemies',
    regex: /(\d+)% increased Chill and Freeze Duration on Enemies/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Cold Damage',
    regex: /(\d+)% increased Cold Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Cooldown Recovery Speed',
    regex: /(\d+)% increased Cooldown Recovery Speed/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Cooldown Recovery Speed for throwing Traps',
    regex: /(\d+)% increased Cooldown Recovery Speed for throwing Traps/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Critical Strike Chance',
    regex: /(\d+)% increased Critical Strike Chance/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Critical Strike Chance against Bleeding Enemies',
    regex: /(\d+)% increased Critical Strike Chance against Bleeding Enemies/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Critical Strike Chance against Blinded Enemies',
    regex: /(\d+)% increased Critical Strike Chance against Blinded Enemies/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Critical Strike Chance against Poisoned Enemies',
    regex: /(\d+)% increased Critical Strike Chance against Poisoned Enemies/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Critical Strike Chance against Shocked Enemies',
    regex: /(\d+)% increased Critical Strike Chance against Shocked Enemies/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Critical Strike Chance for Spells',
    regex: /(\d+)% increased Critical Strike Chance for Spells/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Critical Strike Chance if you have Killed Recently',
    regex: /(\d+)% increased Critical Strike Chance if you have Killed Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Critical Strike Chance if you haven\'t dealt a Critical Strike Recently',
    regex: /(\d+)% increased Critical Strike Chance if you haven't dealt a Critical Strike Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Critical Strike Chance while holding a Shield',
    regex: /(\d+)% increased Critical Strike Chance while holding a Shield/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Critical Strike Chance with Axes',
    regex: /(\d+)% increased Critical Strike Chance with Axes/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Critical Strike Chance with Bows',
    regex: /(\d+)% increased Critical Strike Chance with Bows/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Critical Strike Chance with Chaos Skills',
    regex: /(\d+)% increased Critical Strike Chance with Chaos Skills/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Critical Strike Chance with Claws',
    regex: /(\d+)% increased Critical Strike Chance with Claws/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Critical Strike Chance with Cold Skills',
    regex: /(\d+)% increased Critical Strike Chance with Cold Skills/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Critical Strike Chance with Daggers',
    regex: /(\d+)% increased Critical Strike Chance with Daggers/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Critical Strike Chance with Elemental Skills',
    regex: /(\d+)% increased Critical Strike Chance with Elemental Skills/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Critical Strike Chance with Fire Skills',
    regex: /(\d+)% increased Critical Strike Chance with Fire Skills/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Critical Strike Chance with Lightning Skills',
    regex: /(\d+)% increased Critical Strike Chance with Lightning Skills/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Critical Strike Chance with Maces and Sceptres',
    regex: /(\d+)% increased Critical Strike Chance with Maces and Sceptres/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Critical Strike Chance with Mines',
    regex: /(\d+)% increased Critical Strike Chance with Mines/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Critical Strike Chance with One Handed Melee Weapons',
    regex: /(\d+)% increased Critical Strike Chance with One Handed Melee Weapons/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Critical Strike Chance with Staves',
    regex: /(\d+)% increased Critical Strike Chance with Staves/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Critical Strike Chance with Swords',
    regex: /(\d+)% increased Critical Strike Chance with Swords/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Critical Strike Chance with Traps',
    regex: /(\d+)% increased Critical Strike Chance with Traps/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Critical Strike Chance with Two Handed Melee Weapons',
    regex: /(\d+)% increased Critical Strike Chance with Two Handed Melee Weapons/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Critical Strike Chance with Wands',
    regex: /(\d+)% increased Critical Strike Chance with Wands/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage',
    regex: /(\d+)% increased Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage against Abyssal Monsters',
    regex: /(\d+)% increased Damage against Abyssal Monsters/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage against Taunted Enemies',
    regex: /(\d+)% increased Damage against Taunted Enemies/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage during any Flask Effect',
    regex: /(\d+)% increased Damage during any Flask Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage if you\'ve Killed Recently',
    regex: /(\d+)% increased Damage if you've Killed Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage over Time',
    regex: /(\d+)% increased Damage over Time/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage Over Time during Flask Effect',
    regex: /(\d+)% increased Damage Over Time during Flask Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage over Time while Dual Wielding',
    regex: /(\d+)% increased Damage over Time while Dual Wielding/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage over Time while holding a Shield',
    regex: /(\d+)% increased Damage over Time while holding a Shield/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage over Time while wielding a Two Handed Weapon',
    regex: /(\d+)% increased Damage over Time while wielding a Two Handed Weapon/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage per 1% Chance to Block Attack Damage',
    regex: /(\d+)% increased Damage per 1% Chance to Block Attack Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage per 15 Dexterity',
    regex: /(\d+)% increased Damage per 15 Dexterity/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage per 15 Intelligence',
    regex: /(\d+)% increased Damage per 15 Intelligence/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage per 15 Strength',
    regex: /(\d+)% increased Damage per 15 Strength/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage per Power Charge',
    regex: /(\d+)% increased Damage per Power Charge/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage when on Full Life',
    regex: /(\d+)% increased Damage when on Full Life/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage with Ailments',
    regex: /(\d+)% increased Damage with Ailments/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage with Axes',
    regex: /(\d+)% increased Damage with Axes/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage with Bleeding',
    regex: /(\d+)% increased Damage with Bleeding/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage with Bleeding inflicted on Poisoned Enemies',
    regex: /(\d+)% increased Damage with Bleeding inflicted on Poisoned Enemies/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage with Bleeding per Endurance Charge',
    regex: /(\d+)% increased Damage with Bleeding per Endurance Charge/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage with Bows',
    regex: /(\d+)% increased Damage with Bows/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage with Claws',
    regex: /(\d+)% increased Damage with Claws/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage with Daggers',
    regex: /(\d+)% increased Damage with Daggers/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage with Hits against Chilled Enemies',
    regex: /(\d+)% increased Damage with Hits against Chilled Enemies/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage with Hits and Ailments per Curse on Enemy',
    regex: /(\d+)% increased Damage with Hits and Ailments per Curse on Enemy/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage with Maces and Sceptres',
    regex: /(\d+)% increased Damage with Maces and Sceptres/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage with One Handed Weapons',
    regex: /(\d+)% increased Damage with One Handed Weapons/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage with Poison',
    regex: /(\d+)% increased Damage with Poison/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage with Poison inflicted on Bleeding Enemies',
    regex: /(\d+)% increased Damage with Poison inflicted on Bleeding Enemies/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage with Staves',
    regex: /(\d+)% increased Damage with Staves/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage with Swords',
    regex: /(\d+)% increased Damage with Swords/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage with Two Handed Weapons',
    regex: /(\d+)% increased Damage with Two Handed Weapons/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Damage with Wands',
    regex: /(\d+)% increased Damage with Wands/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Dexterity',
    regex: /(\d+)% increased Dexterity/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Duration',
    regex: /(\d+)% increased Duration/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Duration of Poisons you inflict during Flask effect',
    regex: /(\d+)% increased Duration of Poisons you inflict during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased effect',
    regex: /(\d+)% increased effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Effect of Auras on you',
    regex: /(\d+)% increased Effect of Auras on you/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Effect of Chill',
    regex: /(\d+)% increased Effect of Chill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Effect of Fortify on you',
    regex: /(\d+)% increased Effect of Fortify on you/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Effect of Fortify on you while Stationary',
    regex: /(\d+)% increased Effect of Fortify on you while Stationary/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Effect of Shock',
    regex: /(\d+)% increased Effect of Shock/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Effect of your Curses',
    regex: /(\d+)% increased Effect of your Curses/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Elemental Damage',
    regex: /(\d+)% increased Elemental Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Elemental Damage per 12 Intelligence',
    regex: /(\d+)% increased Elemental Damage per 12 Intelligence/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Elemental Damage per 12 Strength',
    regex: /(\d+)% increased Elemental Damage per 12 Strength/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Elemental Damage per Power charge',
    regex: /(\d+)% increased Elemental Damage per Power charge/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Elemental Damage with Attack Skills',
    regex: /(\d+)% increased Elemental Damage with Attack Skills/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Endurance Charge Duration',
    regex: /(\d+)% increased Endurance Charge Duration/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Energy Shield',
    regex: /(\d+)% increased Energy Shield/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Energy Shield from Body Armour',
    regex: /(\d+)% increased Energy Shield from Body Armour/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Energy Shield Recharge Rate',
    regex: /(\d+)% increased Energy Shield Recharge Rate/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Energy Shield Recovery rate',
    regex: /(\d+)% increased Energy Shield Recovery rate/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Evasion and Energy Shield',
    regex: /(\d+)% increased Evasion and Energy Shield/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Evasion if you have Hit an Enemy Recently',
    regex: /(\d+)% increased Evasion if you have Hit an Enemy Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Evasion Rating',
    regex: /(\d+)% increased Evasion Rating/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Evasion Rating during Flask effect',
    regex: /(\d+)% increased Evasion Rating during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Evasion Rating while moving',
    regex: /(\d+)% increased Evasion Rating while moving/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Evasion while Leeching',
    regex: /(\d+)% increased Evasion while Leeching/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Experience gain',
    regex: /(\d+)% increased Experience gain/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Fire Damage',
    regex: /(\d+)% increased Fire Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Fishing Line Strength',
    regex: /(\d+)% increased Fishing Line Strength/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Fishing Range',
    regex: /(\d+)% increased Fishing Range/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Flask Charges gained',
    regex: /(\d+)% increased Flask Charges gained/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Flask Effect Duration',
    regex: /(\d+)% increased Flask Effect Duration/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Flask Life Recovery rate',
    regex: /(\d+)% increased Flask Life Recovery rate/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Flask Mana Recovery rate',
    regex: /(\d+)% increased Flask Mana Recovery rate/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Fortify Duration per 10 Strength',
    regex: /(\d+)% increased Fortify Duration per 10 Strength/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Freeze Duration on Enemies',
    regex: /(\d+)% increased Freeze Duration on Enemies/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Frenzy Charge Duration',
    regex: /(\d+)% increased Frenzy Charge Duration/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Global Accuracy Rating',
    regex: /(\d+)% increased Global Accuracy Rating/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Global Critical Strike Chance',
    regex: /(\d+)% increased Global Critical Strike Chance/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Global Defences',
    regex: /(\d+)% increased Global Defences/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Global Evasion Rating when on Full Life',
    regex: /(\d+)% increased Global Evasion Rating when on Full Life/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Global Physical Damage',
    regex: /(\d+)% increased Global Physical Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Ignite Duration on Enemies',
    regex: /(\d+)% increased Ignite Duration on Enemies/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Intelligence',
    regex: /(\d+)% increased Intelligence/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Life Recovered',
    regex: /(\d+)% increased Life Recovered/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Life Recovery from Flasks',
    regex: /(\d+)% increased Life Recovery from Flasks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Life Recovery rate',
    regex: /(\d+)% increased Life Recovery rate/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Light Radius',
    regex: /(\d+)% increased Light Radius/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Light Radius during Flask effect',
    regex: /(\d+)% increased Light Radius during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Lightning Damage',
    regex: /(\d+)% increased Lightning Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Mana Recovered',
    regex: /(\d+)% increased Mana Recovered/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Mana Recovery rate',
    regex: /(\d+)% increased Mana Recovery rate/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Mana Regeneration Rate',
    regex: /(\d+)% increased Mana Regeneration Rate/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Mana Regeneration Rate while moving',
    regex: /(\d+)% increased Mana Regeneration Rate while moving/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased maximum Energy Shield',
    regex: /(\d+)% increased maximum Energy Shield/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased maximum Life',
    regex: /(\d+)% increased maximum Life/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased maximum Mana',
    regex: /(\d+)% increased maximum Mana/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Maximum total Recovery per second from Life Leech',
    regex: /(\d+)% increased Maximum total Recovery per second from Life Leech/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Melee Critical Strike Chance',
    regex: /(\d+)% increased Melee Critical Strike Chance/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Melee Damage',
    regex: /(\d+)% increased Melee Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Melee Damage during any Flask Effect',
    regex: /(\d+)% increased Melee Damage during any Flask Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Melee Physical Damage per 10 Strength while Fortified',
    regex: /(\d+)% increased Melee Physical Damage per 10 Strength while Fortified/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Melee Physical Damage with Unarmed Attacks',
    regex: /(\d+)% increased Melee Physical Damage with Unarmed Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Mine Damage',
    regex: /(\d+)% increased Mine Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Mine Duration',
    regex: /(\d+)% increased Mine Duration/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Mine Throwing Speed',
    regex: /(\d+)% increased Mine Throwing Speed/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Minion Accuracy Rating',
    regex: /(\d+)% increased Minion Accuracy Rating/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Minion Duration',
    regex: /(\d+)% increased Minion Duration/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Movement Speed',
    regex: /(\d+)% increased Movement Speed/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Movement Speed during any Flask Effect',
    regex: /(\d+)% increased Movement Speed during any Flask Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Movement Speed during Flask effect',
    regex: /(\d+)% increased Movement Speed during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Movement Speed if you haven\'t been Hit Recently',
    regex: /(\d+)% increased Movement Speed if you haven't been Hit Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Movement Speed if you haven\'t taken Damage Recently',
    regex: /(\d+)% increased Movement Speed if you haven't taken Damage Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Movement Speed if you\'ve Hit an Enemy Recently',
    regex: /(\d+)% increased Movement Speed if you've Hit an Enemy Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Movement Speed if you\'ve Killed Recently',
    regex: /(\d+)% increased Movement Speed if you've Killed Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Movement speed while on Burning, Chilled or Shocked ground',
    regex: /(\d+)% increased Movement speed while on Burning, Chilled or Shocked ground/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Movement Speed while you have Fortify',
    regex: /(\d+)% increased Movement Speed while you have Fortify/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Physical Damage',
    regex: /(\d+)% increased Physical Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Physical Damage taken',
    regex: /(\d+)% increased Physical Damage taken/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Physical Weapon Damage while Dual Wielding',
    regex: /(\d+)% increased Physical Weapon Damage while Dual Wielding/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Poison Duration',
    regex: /(\d+)% increased Poison Duration/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Power Charge Duration',
    regex: /(\d+)% increased Power Charge Duration/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Projectile Attack Damage',
    regex: /(\d+)% increased Projectile Attack Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Projectile Attack Damage during any Flask Effect',
    regex: /(\d+)% increased Projectile Attack Damage during any Flask Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Projectile Attack Damage per 200 Accuracy Rating',
    regex: /(\d+)% increased Projectile Attack Damage per 200 Accuracy Rating/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Projectile Damage',
    regex: /(\d+)% increased Projectile Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Projectile Speed',
    regex: /(\d+)% increased Projectile Speed/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Quantity of Fish Caught',
    regex: /(\d+)% increased Quantity of Fish Caught/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Quantity of Items found',
    regex: /(\d+)% increased Quantity of Items found/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Quantity of Items found during Flask effect',
    regex: /(\d+)% increased Quantity of Items found during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Rarity of Fish Caught',
    regex: /(\d+)% increased Rarity of Fish Caught/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Rarity of Items found',
    regex: /(\d+)% increased Rarity of Items found/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Rarity of Items found during any Flask Effect',
    regex: /(\d+)% increased Rarity of Items found during any Flask Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Rarity of Items found during Flask effect',
    regex: /(\d+)% increased Rarity of Items found during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Rarity of Items found from Slain Unique Enemies',
    regex: /(\d+)% increased Rarity of Items found from Slain Unique Enemies/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Recovery rate',
    regex: /(\d+)% increased Recovery rate/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Recovery when on Low Life',
    regex: /(\d+)% increased Recovery when on Low Life/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Shock Duration on Enemies',
    regex: /(\d+)% increased Shock Duration on Enemies/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Skill Effect Duration',
    regex: /(\d+)% increased Skill Effect Duration/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Spell Damage',
    regex: /(\d+)% increased Spell Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Spell Damage during any Flask Effect',
    regex: /(\d+)% increased Spell Damage during any Flask Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Spell Damage per 10 Intelligence',
    regex: /(\d+)% increased Spell Damage per 10 Intelligence/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Spell Damage per 10 Strength',
    regex: /(\d+)% increased Spell Damage per 10 Strength/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Spell Damage per 16 Dexterity',
    regex: /(\d+)% increased Spell Damage per 16 Dexterity/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Spell Damage per 16 Intelligence',
    regex: /(\d+)% increased Spell Damage per 16 Intelligence/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Spell Damage per 16 Strength',
    regex: /(\d+)% increased Spell Damage per 16 Strength/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Spell Damage while Dual Wielding',
    regex: /(\d+)% increased Spell Damage while Dual Wielding/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Spell Damage while holding a Shield',
    regex: /(\d+)% increased Spell Damage while holding a Shield/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Spell Damage while wielding a Staff',
    regex: /(\d+)% increased Spell Damage while wielding a Staff/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Strength',
    regex: /(\d+)% increased Strength/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Stun and Block Recovery',
    regex: /(\d+)% increased Stun and Block Recovery/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Stun Duration on Enemies',
    regex: /(\d+)% increased Stun Duration on Enemies/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Stun Duration per 15 Strength',
    regex: /(\d+)% increased Stun Duration per 15 Strength/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased total Recovery per second from Life Leech',
    regex: /(\d+)% increased total Recovery per second from Life Leech/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Totem Damage',
    regex: /(\d+)% increased Totem Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Totem Life',
    regex: /(\d+)% increased Totem Life/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Totem Placement speed',
    regex: /(\d+)% increased Totem Placement speed/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Trap and Mine Throwing Speed',
    regex: /(\d+)% increased Trap and Mine Throwing Speed/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Trap Damage',
    regex: /(\d+)% increased Trap Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Trap Duration',
    regex: /(\d+)% increased Trap Duration/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Trap Throwing Speed',
    regex: /(\d+)% increased Trap Throwing Speed/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Vaal Skill Critical Strike Chance',
    regex: /(\d+)% increased Vaal Skill Critical Strike Chance/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Vaal Skill Effect Duration',
    regex: /(\d+)% increased Vaal Skill Effect Duration/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Weapon Critical Strike Chance while Dual Wielding',
    regex: /(\d+)% increased Weapon Critical Strike Chance while Dual Wielding/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% increased Weapon Damage while Dual Wielding',
    regex: /(\d+)% increased Weapon Damage while Dual Wielding/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% more Melee Physical Damage during effect',
    regex: /(\d+)% more Melee Physical Damage during effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% of Attack Damage Leeched as Life',
    regex: /(\d+)% of Attack Damage Leeched as Life/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% of Attack Damage Leeched as Life during Flask effect',
    regex: /(\d+)% of Attack Damage Leeched as Life during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% of Chaos Damage Leeched as Life',
    regex: /(\d+)% of Chaos Damage Leeched as Life/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% of Chaos Damage Leeched as Life during Flask effect',
    regex: /(\d+)% of Chaos Damage Leeched as Life during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% of Cold Damage Leeched as Life',
    regex: /(\d+)% of Cold Damage Leeched as Life/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% of Damage is taken from Mana before Life',
    regex: /(\d+)% of Damage is taken from Mana before Life/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% of Damage taken gained as Mana over 4 seconds when Hit',
    regex: /(\d+)% of Damage taken gained as Mana over 4 seconds when Hit/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% of Fire Damage Leeched as Life',
    regex: /(\d+)% of Fire Damage Leeched as Life/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% of Lightning Damage Leeched as Life',
    regex: /(\d+)% of Lightning Damage Leeched as Life/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% of Lightning Damage Leeched as Life during Flask effect',
    regex: /(\d+)% of Lightning Damage Leeched as Life during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% of Lightning Damage Leeched as Mana during Flask effect',
    regex: /(\d+)% of Lightning Damage Leeched as Mana during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% of Maximum Life taken as Chaos Damage per second',
    regex: /(\d+)% of Maximum Life taken as Chaos Damage per second/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% of Physical Attack Damage Leeched as Life',
    regex: /(\d+)% of Physical Attack Damage Leeched as Life/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% of Physical Attack Damage Leeched as Life during Flask effect',
    regex: /(\d+)% of Physical Attack Damage Leeched as Life during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% of Physical Attack Damage Leeched as Mana',
    regex: /(\d+)% of Physical Attack Damage Leeched as Mana/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% of Physical Attack Damage Leeched as Mana during Flask effect',
    regex: /(\d+)% of Physical Attack Damage Leeched as Mana during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% of Physical Damage Converted to Chaos Damage',
    regex: /(\d+)% of Physical Damage Converted to Chaos Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% of Physical Damage Converted to Cold Damage',
    regex: /(\d+)% of Physical Damage Converted to Cold Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% of Physical Damage Converted to Fire Damage',
    regex: /(\d+)% of Physical Damage Converted to Fire Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% of Physical Damage Converted to Lightning Damage',
    regex: /(\d+)% of Physical Damage Converted to Lightning Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% of Physical Damage Converted to Lightning during Flask effect',
    regex: /(\d+)% of Physical Damage Converted to Lightning during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% of Physical Damage from Hits taken as Chaos Damage',
    regex: /(\d+)% of Physical Damage from Hits taken as Chaos Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% of Physical Damage from Hits taken as Cold Damage',
    regex: /(\d+)% of Physical Damage from Hits taken as Cold Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% of Physical Damage from Hits taken as Cold Damage during Flask effect',
    regex: /(\d+)% of Physical Damage from Hits taken as Cold Damage during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% of Physical Damage from Hits taken as Fire Damage',
    regex: /(\d+)% of Physical Damage from Hits taken as Fire Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% of Physical Damage from Hits taken as Lightning Damage',
    regex: /(\d+)% of Physical Damage from Hits taken as Lightning Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% of Physical Damage Leeched as Life',
    regex: /(\d+)% of Physical Damage Leeched as Life/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% of Recovery applied Instantly',
    regex: /(\d+)% of Recovery applied Instantly/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% of Spell Damage Leeched as Energy Shield',
    regex: /(\d+)% of Spell Damage Leeched as Energy Shield/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% of Spell Damage Leeched as Energy Shield during Flask effect',
    regex: /(\d+)% of Spell Damage Leeched as Energy Shield during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% of Spell Damage Leeched as Life',
    regex: /(\d+)% of Spell Damage Leeched as Life/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% of Spell Damage Leeched as Mana',
    regex: /(\d+)% of Spell Damage Leeched as Mana/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% reduced Amount Recovered',
    regex: /(\d+)% reduced Amount Recovered/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% reduced Attribute Requirements',
    regex: /(\d+)% reduced Attribute Requirements/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% reduced Chaos Damage taken',
    regex: /(\d+)% reduced Chaos Damage taken/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% reduced Chaos Damage taken over time',
    regex: /(\d+)% reduced Chaos Damage taken over time/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% reduced Charges used',
    regex: /(\d+)% reduced Charges used/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% reduced Cold Damage taken',
    regex: /(\d+)% reduced Cold Damage taken/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% reduced Duration',
    regex: /(\d+)% reduced Duration/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% reduced Effect of Curses on you',
    regex: /(\d+)% reduced Effect of Curses on you/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% reduced Elemental Ailment Duration on you',
    regex: /(\d+)% reduced Elemental Ailment Duration on you/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% reduced Elemental Damage taken per Endurance Charge',
    regex: /(\d+)% reduced Elemental Damage taken per Endurance Charge/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% reduced Elemental Damage Taken while stationary',
    regex: /(\d+)% reduced Elemental Damage Taken while stationary/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% reduced Enemy Stun Threshold',
    regex: /(\d+)% reduced Enemy Stun Threshold/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% reduced Enemy Stun Threshold while you have at least 500 Strength',
    regex: /(\d+)% reduced Enemy Stun Threshold while you have at least 500 Strength/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% reduced Fire Damage taken',
    regex: /(\d+)% reduced Fire Damage taken/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% reduced Fishing Pool Consumption',
    regex: /(\d+)% reduced Fishing Pool Consumption/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% reduced Flask Charges used',
    regex: /(\d+)% reduced Flask Charges used/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% reduced Lightning Damage taken',
    regex: /(\d+)% reduced Lightning Damage taken/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% reduced Mana Cost of Skills',
    regex: /(\d+)% reduced Mana Cost of Skills/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% reduced Mana Cost of Skills during Flask Effect',
    regex: /(\d+)% reduced Mana Cost of Skills during Flask Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% reduced Mana Reserved',
    regex: /(\d+)% reduced Mana Reserved/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% reduced Physical Damage taken over time',
    regex: /(\d+)% reduced Physical Damage taken over time/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% reduced Recovery rate',
    regex: /(\d+)% reduced Recovery rate/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% reduced Reflected Damage taken',
    regex: /(\d+)% reduced Reflected Damage taken/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% reduced Reflected Elemental Damage taken',
    regex: /(\d+)% reduced Reflected Elemental Damage taken/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% reduced Reflected Physical Damage taken',
    regex: /(\d+)% reduced Reflected Physical Damage taken/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '#% reduced Soul Cost of Vaal Skills',
    regex: /(\d+)% reduced Soul Cost of Vaal Skills/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# Armour if you\'ve Blocked Recently',
    regex: /\+(\d+) Armour if you've Blocked Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# Energy Shield gained for each Enemy hit by your Attacks',
    regex: /\+(\d+) Energy Shield gained for each Enemy hit by your Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# Life gained for each Blinded Enemy Hit by this Weapon',
    regex: /\+(\d+) Life gained for each Blinded Enemy Hit by this Weapon/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# Life gained for each Enemy hit by Attacks',
    regex: /\+(\d+) Life gained for each Enemy hit by Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# Life gained for each Enemy Hit by this Weapon while you are Leeching',
    regex: /\+(\d+) Life gained for each Enemy Hit by this Weapon while you are Leeching/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# Life gained for each Enemy hit by your Attacks',
    regex: /\+(\d+) Life gained for each Enemy hit by your Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# Life gained for each Enemy hit by your Spells',
    regex: /\+(\d+) Life gained for each Enemy hit by your Spells/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# Life gained on Kill',
    regex: /\+(\d+) Life gained on Kill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# Life gained when you Block',
    regex: /\+(\d+) Life gained when you Block/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# Mana gained for each Enemy hit by your Attacks',
    regex: /\+(\d+) Mana gained for each Enemy hit by your Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# Mana gained for each Enemy Hit by your Spells',
    regex: /\+(\d+) Mana gained for each Enemy Hit by your Spells/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# Mana gained on Kill',
    regex: /\+(\d+) Mana gained on Kill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# Mana gained when you Block',
    regex: /\+(\d+) Mana gained when you Block/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Accuracy Rating',
    regex: /\+(\d+) to Accuracy Rating/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to all Attributes',
    regex: /\+(\d+) to all Attributes/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Armour',
    regex: /\+(\d+) to Armour/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Armour if you\'ve Hit an Enemy Recently',
    regex: /\+(\d+) to Armour if you've Hit an Enemy Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Dexterity',
    regex: /\+(\d+) to Dexterity/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Dexterity and Intelligence',
    regex: /\+(\d+) to Dexterity and Intelligence/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Evasion Rating',
    regex: /\+(\d+) to Evasion Rating/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Evasion Rating if Hit an Enemy Recently',
    regex: /\+(\d+) to Evasion Rating if Hit an Enemy Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Intelligence',
    regex: /\+(\d+) to Intelligence/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Level of all Chaos Spell Skill Gems',
    regex: /\+(\d+) to Level of all Chaos Spell Skill Gems/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Level of all Cold Spell Skill Gems',
    regex: /\+(\d+) to Level of all Cold Spell Skill Gems/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Level of all Fire Spell Skill Gems',
    regex: /\+(\d+) to Level of all Fire Spell Skill Gems/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Level of all Lightning Spell Skill Gems',
    regex: /\+(\d+) to Level of all Lightning Spell Skill Gems/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Level of all Minion Skill Gems',
    regex: /\+(\d+) to Level of all Minion Skill Gems/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Level of all Physical Spell Skill Gems',
    regex: /\+(\d+) to Level of all Physical Spell Skill Gems/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Level of all Raise Spectre Gems',
    regex: /\+(\d+) to Level of all Raise Spectre Gems/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Level of all Spell Skill Gems',
    regex: /\+(\d+) to Level of all Spell Skill Gems/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Level of Socketed Active Skill Gems',
    regex: /\+(\d+) to Level of Socketed Active Skill Gems/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Level of Socketed Aura Gems',
    regex: /\+(\d+) to Level of Socketed Aura Gems/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Level of Socketed Bow Gems',
    regex: /\+(\d+) to Level of Socketed Bow Gems/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Level of Socketed Chaos Gems',
    regex: /\+(\d+) to Level of Socketed Chaos Gems/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Level of Socketed Cold Gems',
    regex: /\+(\d+) to Level of Socketed Cold Gems/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Level of Socketed Curse Gems',
    regex: /\+(\d+) to Level of Socketed Curse Gems/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Level of Socketed Dexterity Gems',
    regex: /\+(\d+) to Level of Socketed Dexterity Gems/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Level of Socketed Fire Gems',
    regex: /\+(\d+) to Level of Socketed Fire Gems/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Level of Socketed Gems',
    regex: /\+(\d+) to Level of Socketed Gems/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Level of Socketed Intelligence Gems',
    regex: /\+(\d+) to Level of Socketed Intelligence Gems/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Level of Socketed Lightning Gems',
    regex: /\+(\d+) to Level of Socketed Lightning Gems/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Level of Socketed Melee Gems',
    regex: /\+(\d+) to Level of Socketed Melee Gems/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Level of Socketed Minion Gems',
    regex: /\+(\d+) to Level of Socketed Minion Gems/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Level of Socketed Spell Gems',
    regex: /\+(\d+) to Level of Socketed Spell Gems/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Level of Socketed Strength Gems',
    regex: /\+(\d+) to Level of Socketed Strength Gems/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Level of Socketed Support Gems',
    regex: /\+(\d+) to Level of Socketed Support Gems/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Level of Socketed Trap Gems',
    regex: /\+(\d+) to Level of Socketed Trap Gems/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Level of Socketed Trap or Mine Gems',
    regex: /\+(\d+) to Level of Socketed Trap or Mine Gems/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Maximum Charges',
    regex: /\+(\d+) to Maximum Charges/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Maximum Endurance Charges',
    regex: /\+(\d+) to Maximum Endurance Charges/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to maximum Energy Shield',
    regex: /\+(\d+) to maximum Energy Shield/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Maximum Frenzy Charges',
    regex: /\+(\d+) to Maximum Frenzy Charges/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to maximum Life',
    regex: /\+(\d+) to maximum Life/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to maximum Mana',
    regex: /\+(\d+) to maximum Mana/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to maximum number of Raised Zombies',
    regex: /\+(\d+) to maximum number of Raised Zombies/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to maximum number of Skeletons',
    regex: /\+(\d+) to maximum number of Skeletons/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to maximum number of Spectres',
    regex: /\+(\d+) to maximum number of Spectres/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to maximum number of Summoned Totems',
    regex: /\+(\d+) to maximum number of Summoned Totems/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Maximum Power Charges',
    regex: /\+(\d+) to Maximum Power Charges/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Melee Weapon and Unarmed Attack range',
    regex: /\+(\d+) to Melee Weapon and Unarmed Attack range/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Melee Weapon Range if you have Killed Recently',
    regex: /\+(\d+) to Melee Weapon Range if you have Killed Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Melee Weapon Range while at Maximum Frenzy Charges',
    regex: /\+(\d+) to Melee Weapon Range while at Maximum Frenzy Charges/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Melee Weapon Range while Fortified',
    regex: /\+(\d+) to Melee Weapon Range while Fortified/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Strength',
    regex: /\+(\d+) to Strength/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Strength and Dexterity',
    regex: /\+(\d+) to Strength and Dexterity/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Strength and Intelligence',
    regex: /\+(\d+) to Strength and Intelligence/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+# to Weapon range',
    regex: /\+(\d+) to Weapon range/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% Chance to Block',
    regex: /\+(\d+)% Chance to Block/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% Chance to Block Attack Damage during Flask effect',
    regex: /\+(\d+)% Chance to Block Attack Damage during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% Chance to Block Attack Damage if there are at least 5 nearby Enemies',
    regex: /\+(\d+)% Chance to Block Attack Damage if there are at least 5 nearby Enemies/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% Chance to Block Attack Damage if you were Damaged by a Hit Recently',
    regex: /\+(\d+)% Chance to Block Attack Damage if you were Damaged by a Hit Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% Chance to Block Attack Damage if you\'ve dealt a Critical Strike Recently',
    regex: /\+(\d+)% Chance to Block Attack Damage if you've dealt a Critical Strike Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% Chance to Block Attack Damage per Endurance Charge',
    regex: /\+(\d+)% Chance to Block Attack Damage per Endurance Charge/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% Chance to Block Attack Damage while Dual Wielding',
    regex: /\+(\d+)% Chance to Block Attack Damage while Dual Wielding/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% Chance to Block Attack Damage while holding a Shield',
    regex: /\+(\d+)% Chance to Block Attack Damage while holding a Shield/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% Chance to Block Attack Damage while wielding a Staff',
    regex: /\+(\d+)% Chance to Block Attack Damage while wielding a Staff/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% Chance to Block Projectile Attack Damage',
    regex: /\+(\d+)% Chance to Block Projectile Attack Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% Chance to Block Spell Damage during Flask effect',
    regex: /\+(\d+)% Chance to Block Spell Damage during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% Chance to Block Spell Damage if you were Damaged by a Hit Recently',
    regex: /\+(\d+)% Chance to Block Spell Damage if you were Damaged by a Hit Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% Chance to Block Spell Damage while Dual Wielding',
    regex: /\+(\d+)% Chance to Block Spell Damage while Dual Wielding/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% Chance to Block Spell Damage while holding a Shield',
    regex: /\+(\d+)% Chance to Block Spell Damage while holding a Shield/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% Chance to Block Spell Damage while wielding a Staff',
    regex: /\+(\d+)% Chance to Block Spell Damage while wielding a Staff/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% chance to Evade Attacks',
    regex: /\+(\d+)% chance to Evade Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% Chaos Resistance against Damage Over Time',
    regex: /\+(\d+)% Chaos Resistance against Damage Over Time/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to all Elemental Resistances',
    regex: /\+(\d+)% to all Elemental Resistances/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to all maximum Elemental Resistances during Flask effect',
    regex: /\+(\d+)% to all maximum Elemental Resistances during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to all maximum Resistances',
    regex: /\+(\d+)% to all maximum Resistances/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Chaos Damage over Time Multiplier',
    regex: /\+(\d+)% to Chaos Damage over Time Multiplier/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Chaos Resistance',
    regex: /\+(\d+)% to Chaos Resistance/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Chaos Resistance during any Flask Effect',
    regex: /\+(\d+)% to Chaos Resistance during any Flask Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Cold and Lightning Resistances',
    regex: /\+(\d+)% to Cold and Lightning Resistances/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Cold Damage over Time Multiplier',
    regex: /\+(\d+)% to Cold Damage over Time Multiplier/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Cold Resistance',
    regex: /\+(\d+)% to Cold Resistance/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier against Enemies that are on Full Life',
    regex: /\+(\d+)% to Critical Strike Multiplier against Enemies that are on Full Life/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier for Spells',
    regex: /\+(\d+)% to Critical Strike Multiplier for Spells/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier if you have Blocked Recently',
    regex: /\+(\d+)% to Critical Strike Multiplier if you have Blocked Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier if you haven\'t dealt a Critical Strike Recently',
    regex: /\+(\d+)% to Critical Strike Multiplier if you haven't dealt a Critical Strike Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier if you\'ve Killed Recently',
    regex: /\+(\d+)% to Critical Strike Multiplier if you've Killed Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier while Dual Wielding',
    regex: /\+(\d+)% to Critical Strike Multiplier while Dual Wielding/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier with Axes',
    regex: /\+(\d+)% to Critical Strike Multiplier with Axes/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier with Bows',
    regex: /\+(\d+)% to Critical Strike Multiplier with Bows/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier with Chaos Skills',
    regex: /\+(\d+)% to Critical Strike Multiplier with Chaos Skills/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier with Claws',
    regex: /\+(\d+)% to Critical Strike Multiplier with Claws/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier with Cold Skills',
    regex: /\+(\d+)% to Critical Strike Multiplier with Cold Skills/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier with Daggers',
    regex: /\+(\d+)% to Critical Strike Multiplier with Daggers/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier with Elemental Skills',
    regex: /\+(\d+)% to Critical Strike Multiplier with Elemental Skills/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier with Fire Skills',
    regex: /\+(\d+)% to Critical Strike Multiplier with Fire Skills/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier with Lightning Skills',
    regex: /\+(\d+)% to Critical Strike Multiplier with Lightning Skills/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier with Maces and Sceptres',
    regex: /\+(\d+)% to Critical Strike Multiplier with Maces and Sceptres/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier with Mines',
    regex: /\+(\d+)% to Critical Strike Multiplier with Mines/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier with One Handed Melee Weapons',
    regex: /\+(\d+)% to Critical Strike Multiplier with One Handed Melee Weapons/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier with Staves',
    regex: /\+(\d+)% to Critical Strike Multiplier with Staves/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier with Swords',
    regex: /\+(\d+)% to Critical Strike Multiplier with Swords/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier with Traps',
    regex: /\+(\d+)% to Critical Strike Multiplier with Traps/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier with Two Handed Melee Weapons',
    regex: /\+(\d+)% to Critical Strike Multiplier with Two Handed Melee Weapons/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier with Wands',
    regex: /\+(\d+)% to Critical Strike Multiplier with Wands/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Elemental Resistances during Flask Effect',
    regex: /\+(\d+)% to Elemental Resistances during Flask Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Fire and Cold Resistances',
    regex: /\+(\d+)% to Fire and Cold Resistances/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Fire and Lightning Resistances',
    regex: /\+(\d+)% to Fire and Lightning Resistances/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Fire Damage over Time Multiplier',
    regex: /\+(\d+)% to Fire Damage over Time Multiplier/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Fire Resistance',
    regex: /\+(\d+)% to Fire Resistance/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Global Critical Strike Multiplier',
    regex: /\+(\d+)% to Global Critical Strike Multiplier/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Lightning Resistance',
    regex: /\+(\d+)% to Lightning Resistance/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to maximum Chance to Block Attack Damage',
    regex: /\+(\d+)% to maximum Chance to Block Attack Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to maximum Chaos Resistance',
    regex: /\+(\d+)% to maximum Chaos Resistance/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to maximum Cold Resistance',
    regex: /\+(\d+)% to maximum Cold Resistance/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to maximum Fire Resistance',
    regex: /\+(\d+)% to maximum Fire Resistance/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to maximum Lightning Resistance',
    regex: /\+(\d+)% to maximum Lightning Resistance/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Melee Critical Strike Multiplier',
    regex: /\+(\d+)% to Melee Critical Strike Multiplier/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Melee Critical Strike Multiplier while holding a Shield',
    regex: /\+(\d+)% to Melee Critical Strike Multiplier while holding a Shield/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Physical Damage over Time Multiplier',
    regex: /\+(\d+)% to Physical Damage over Time Multiplier/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Quality',
    regex: /\+(\d+)% to Quality/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '+#% to Quality of Socketed Support Gems',
    regex: /\+(\d+)% to Quality of Socketed Support Gems/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '-# to Total Mana Cost of Skills',
    regex: /-(\d+) to Total Mana Cost of Skills/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: '50% more Global Accuracy Rating',
    regex: /50% more Global Accuracy Rating/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Chaos Damage',
    regex: /Adds (\d+) to (\d+) Chaos Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Chaos Damage to Attacks',
    regex: /Adds (\d+) to (\d+) Chaos Damage to Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Chaos Damage to Spells',
    regex: /Adds (\d+) to (\d+) Chaos Damage to Spells/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Chaos Damage to Spells while Dual Wielding',
    regex: /Adds (\d+) to (\d+) Chaos Damage to Spells while Dual Wielding/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Chaos Damage to Spells while holding a Shield',
    regex: /Adds (\d+) to (\d+) Chaos Damage to Spells while holding a Shield/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Chaos Damage to Spells while wielding a Two Handed Weapon',
    regex: /Adds (\d+) to (\d+) Chaos Damage to Spells while wielding a Two Handed Weapon/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Cold Damage',
    regex: /Adds (\d+) to (\d+) Cold Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Cold Damage against Chilled or Frozen Enemies',
    regex: /Adds (\d+) to (\d+) Cold Damage against Chilled or Frozen Enemies/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Cold Damage to Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Cold Damage to Attacks with this Weapon per 10 Dexterity',
    regex: /Adds (\d+) to (\d+) Cold Damage to Attacks with this Weapon per 10 Dexterity/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Cold Damage to Axe Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Axe Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Cold Damage to Bow Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Bow Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Cold Damage to Claw Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Claw Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Cold Damage to Dagger Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Dagger Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Cold Damage to Mace and Sceptre Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Mace and Sceptre Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Cold Damage to Spells',
    regex: /Adds (\d+) to (\d+) Cold Damage to Spells/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Cold Damage to Spells and Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Spells and Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Cold Damage to Spells while Dual Wielding',
    regex: /Adds (\d+) to (\d+) Cold Damage to Spells while Dual Wielding/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Cold Damage to Spells while holding a Shield',
    regex: /Adds (\d+) to (\d+) Cold Damage to Spells while holding a Shield/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Cold Damage to Spells while wielding a Two Handed Weapon',
    regex: /Adds (\d+) to (\d+) Cold Damage to Spells while wielding a Two Handed Weapon/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Cold Damage to Staff Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Staff Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Cold Damage to Sword Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Sword Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Cold Damage to Wand Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Wand Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Fire Damage',
    regex: /Adds (\d+) to (\d+) Fire Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Fire Damage against Ignited Enemies',
    regex: /Adds (\d+) to (\d+) Fire Damage against Ignited Enemies/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Fire Damage if you\'ve Blocked Recently',
    regex: /Adds (\d+) to (\d+) Fire Damage if you've Blocked Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Fire Damage to Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Fire Damage to Attacks with this Weapon per 10 Strength',
    regex: /Adds (\d+) to (\d+) Fire Damage to Attacks with this Weapon per 10 Strength/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Fire Damage to Axe Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Axe Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Fire Damage to Bow Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Bow Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Fire Damage to Claw Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Claw Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Fire Damage to Dagger Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Dagger Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Fire Damage to Mace and Sceptre Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Mace and Sceptre Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Fire Damage to Spells',
    regex: /Adds (\d+) to (\d+) Fire Damage to Spells/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Fire Damage to Spells and Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Spells and Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Fire Damage to Spells while Dual Wielding',
    regex: /Adds (\d+) to (\d+) Fire Damage to Spells while Dual Wielding/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Fire Damage to Spells while holding a Shield',
    regex: /Adds (\d+) to (\d+) Fire Damage to Spells while holding a Shield/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Fire Damage to Spells while wielding a Two Handed Weapon',
    regex: /Adds (\d+) to (\d+) Fire Damage to Spells while wielding a Two Handed Weapon/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Fire Damage to Staff Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Staff Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Fire Damage to Sword Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Sword Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Fire Damage to Wand Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Wand Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Lightning Damage',
    regex: /Adds (\d+) to (\d+) Lightning Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Lightning Damage against Shocked Enemies',
    regex: /Adds (\d+) to (\d+) Lightning Damage against Shocked Enemies/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Lightning Damage to Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Lightning Damage to Attacks during Flask effect',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Attacks during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Lightning Damage to Attacks with this Weapon per 10 Intelligence',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Attacks with this Weapon per 10 Intelligence/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Lightning Damage to Axe Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Axe Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Lightning Damage to Bow Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Bow Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Lightning Damage to Claw Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Claw Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Lightning Damage to Dagger Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Dagger Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Lightning Damage to Mace and Sceptre Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Mace and Sceptre Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Lightning Damage to Spells',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Spells/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Lightning Damage to Spells and Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Spells and Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Lightning Damage to Spells during Flask effect',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Spells during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Lightning Damage to Spells while Dual Wielding',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Spells while Dual Wielding/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Lightning Damage to Spells while holding a Shield',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Spells while holding a Shield/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Lightning Damage to Spells while wielding a Two Handed Weapon',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Spells while wielding a Two Handed Weapon/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Lightning Damage to Staff Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Staff Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Lightning Damage to Sword Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Sword Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Lightning Damage to Wand Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Wand Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Physical Damage',
    regex: /Adds (\d+) to (\d+) Physical Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Physical Damage against Bleeding Enemies',
    regex: /Adds (\d+) to (\d+) Physical Damage against Bleeding Enemies/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Physical Damage against Poisoned Enemies',
    regex: /Adds (\d+) to (\d+) Physical Damage against Poisoned Enemies/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Physical Damage to Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Physical Damage to Axe Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Axe Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Physical Damage to Bow Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Bow Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Physical Damage to Claw Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Claw Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Physical Damage to Dagger Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Dagger Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Physical Damage to Mace and Sceptre Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Mace and Sceptre Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Physical Damage to Spells',
    regex: /Adds (\d+) to (\d+) Physical Damage to Spells/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Physical Damage to Spells while Dual Wielding',
    regex: /Adds (\d+) to (\d+) Physical Damage to Spells while Dual Wielding/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Physical Damage to Spells while holding a Shield',
    regex: /Adds (\d+) to (\d+) Physical Damage to Spells while holding a Shield/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Physical Damage to Spells while wielding a Two Handed Weapon',
    regex: /Adds (\d+) to (\d+) Physical Damage to Spells while wielding a Two Handed Weapon/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Physical Damage to Staff Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Staff Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Physical Damage to Sword Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Sword Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds # to # Physical Damage to Wand Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Wand Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Adds Knockback to Melee Attacks during Flask effect',
    regex: /Adds Knockback to Melee Attacks during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Area is inhabited by an additional Invasion Boss',
    regex: /Area is inhabited by an additional Invasion Boss/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Area is inhabited by the Vaal',
    regex: /Area is inhabited by the Vaal/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Areas contain Alva',
    regex: /Areas contain Alva/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Areas contain Einhar',
    regex: /Areas contain Einhar/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Areas contain Jun',
    regex: /Areas contain Jun/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Areas contain Niko',
    regex: /Areas contain Niko/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Areas contain Zana',
    regex: /Areas contain Zana/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Attacks have #% chance to cause Bleeding',
    regex: /Attacks have (\d+)% chance to cause Bleeding/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Attacks have #% chance to Maim on Hit',
    regex: /Attacks have (\d+)% chance to Maim on Hit/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Attacks have +#% to Critical Strike Chance',
    regex: /Attacks have \+(\d+)% to Critical Strike Chance/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Attacks with this Weapon Penetrate #% Elemental Resistances',
    regex: /Attacks with this Weapon Penetrate (\d+)% Elemental Resistances/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Auras from your Skills grant #% increased Damage to you and Allies',
    regex: /Auras from your Skills grant (\d+)% increased Damage to you and Allies/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Bow Attacks fire an additional Arrow',
    regex: /Bow Attacks fire an additional Arrow/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Bow Attacks fire an additional Arrow while Main Hand Accuracy Rating is at least #',
    regex: /Bow Attacks fire an additional Arrow while Main Hand Accuracy Rating is at least (\d+)/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Cannot be Chilled or Frozen while moving',
    regex: /Cannot be Chilled or Frozen while moving/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Cannot be Frozen',
    regex: /Cannot be Frozen/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Cannot be Poisoned',
    regex: /Cannot be Poisoned/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Cannot be Shocked or Ignited while moving',
    regex: /Cannot be Shocked or Ignited while moving/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Cannot be Stunned during Flask Effect',
    regex: /Cannot be Stunned during Flask Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Cannot gain Mana during effect',
    regex: /Cannot gain Mana during effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Chaos Damage does not bypass Energy Shield during effect',
    regex: /Chaos Damage does not bypass Energy Shield during effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Chill Nearby Enemies when you Block',
    regex: /Chill Nearby Enemies when you Block/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Consumes Frenzy Charges on use',
    regex: /Consumes Frenzy Charges on use/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Corrupted Blood cannot be inflicted on you',
    regex: /Corrupted Blood cannot be inflicted on you/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Creates a Smoke Cloud on Use',
    regex: /Creates a Smoke Cloud on Use/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Creates Chilled Ground on Use',
    regex: /Creates Chilled Ground on Use/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Creates Consecrated Ground on Use',
    regex: /Creates Consecrated Ground on Use/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Critical Strikes with this Weapon have Culling Strike',
    regex: /Critical Strikes with this Weapon have Culling Strike/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Culling Strike',
    regex: /Culling Strike/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Curse Enemies with Level # Assassin\'s Mark on Hit',
    regex: /Curse Enemies with Level (\d+) Assassin's Mark on Hit/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Curse Enemies with Level # Conductivity on Hit',
    regex: /Curse Enemies with Level (\d+) Conductivity on Hit/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Curse Enemies with Level # Despair on Hit',
    regex: /Curse Enemies with Level (\d+) Despair on Hit/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Curse Enemies with Level # Flammability on Hit',
    regex: /Curse Enemies with Level (\d+) Flammability on Hit/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Curse Enemies with Level # Frostbite on Hit',
    regex: /Curse Enemies with Level (\d+) Frostbite on Hit/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Curse Enemies with Level # Poacher\'s Mark on Hit',
    regex: /Curse Enemies with Level (\d+) Poacher's Mark on Hit/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Curse Enemies with Level # Vulnerability on Hit',
    regex: /Curse Enemies with Level (\d+) Vulnerability on Hit/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Curse Enemies with Level # Warlord\'s Mark on Hit',
    regex: /Curse Enemies with Level (\d+) Warlord's Mark on Hit/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Curse Skills have #% increased Cast Speed',
    regex: /Curse Skills have (\d+)% increased Cast Speed/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Curse Skills have #% increased Skill Effect Duration',
    regex: /Curse Skills have (\d+)% increased Skill Effect Duration/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Damage Penetrates #% Cold Resistance',
    regex: /Damage Penetrates (\d+)% Cold Resistance/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Damage Penetrates #% Elemental Resistance if you haven\'t Killed Recently',
    regex: /Damage Penetrates (\d+)% Elemental Resistance if you haven't Killed Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Damage Penetrates #% Elemental Resistances',
    regex: /Damage Penetrates (\d+)% Elemental Resistances/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Damage Penetrates #% Elemental Resistances during any Flask Effect',
    regex: /Damage Penetrates (\d+)% Elemental Resistances during any Flask Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Damage Penetrates #% Fire Resistance',
    regex: /Damage Penetrates (\d+)% Fire Resistance/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Damage Penetrates #% Lightning Resistance',
    regex: /Damage Penetrates (\d+)% Lightning Resistance/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Damage Penetrates #% Lightning Resistance during Flask effect',
    regex: /Damage Penetrates (\d+)% Lightning Resistance during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Drops Burning Ground while moving, dealing # Fire Damage per second',
    regex: /Drops Burning Ground while moving, dealing (\d+) Fire Damage per second/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'During Flask Effect, #% reduced Damage taken of each Element for which your Uncapped Elemental Resistance is lowest',
    regex: /During Flask Effect, (\d+)% reduced Damage taken of each Element for which your Uncapped Elemental Resistance is lowest/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'During Flask Effect, Damage Penetrates #% Resistance of each Element for which your Uncapped Elemental Resistance is highest',
    regex: /During Flask Effect, Damage Penetrates (\d+)% Resistance of each Element for which your Uncapped Elemental Resistance is highest/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Enemies have #% reduced Evasion if you have Hit them Recently',
    regex: /Enemies have (\d+)% reduced Evasion if you have Hit them Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Enemies Ignited by you during Flask Effect take #% increased Damage',
    regex: /Enemies Ignited by you during Flask Effect take (\d+)% increased Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Enemies killed explode dealing #% of their Life as Fire Damage',
    regex: /Enemies killed explode dealing (\d+)% of their Life as Fire Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Eternal Iron Hook',
    regex: /Eternal Iron Hook/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Flask Effect is not removed at Full Mana',
    regex: /Flask Effect is not removed at Full Mana/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Flasks applied to you have #% increased Effect',
    regex: /Flasks applied to you have (\d+)% increased Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Found Items have a #% chance to drop Corrupted in Area',
    regex: /Found Items have a (\d+)% chance to drop Corrupted in Area/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Gain # Charge when you are Hit by an Enemy',
    regex: /Gain (\d+) Charge when you are Hit by an Enemy/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Gain # Vaal Souls on use',
    regex: /Gain (\d+) Vaal Souls on use/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Gain # Vaal Souls Per Second during effect',
    regex: /Gain (\d+) Vaal Souls Per Second during effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Gain #% of Cold Damage as Extra Chaos Damage',
    regex: /Gain (\d+)% of Cold Damage as Extra Chaos Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Gain #% of Elemental Damage as Extra Chaos Damage',
    regex: /Gain (\d+)% of Elemental Damage as Extra Chaos Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Gain #% of Elemental Damage as Extra Chaos Damage during effect',
    regex: /Gain (\d+)% of Elemental Damage as Extra Chaos Damage during effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Gain #% of Fire Damage as Extra Chaos Damage',
    regex: /Gain (\d+)% of Fire Damage as Extra Chaos Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Gain #% of Lightning Damage as Extra Chaos Damage',
    regex: /Gain (\d+)% of Lightning Damage as Extra Chaos Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Gain #% of Non-Chaos Damage as extra Chaos Damage',
    regex: /Gain (\d+)% of Non-Chaos Damage as extra Chaos Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Gain #% of Physical Damage as Extra Chaos Damage',
    regex: /Gain (\d+)% of Physical Damage as Extra Chaos Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Gain #% of Physical Damage as Extra Chaos Damage during effect',
    regex: /Gain (\d+)% of Physical Damage as Extra Chaos Damage during effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Gain #% of Physical Damage as Extra Cold Damage',
    regex: /Gain (\d+)% of Physical Damage as Extra Cold Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Gain #% of Physical Damage as Extra Cold Damage during effect',
    regex: /Gain (\d+)% of Physical Damage as Extra Cold Damage during effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Gain #% of Physical Damage as Extra Damage of a random Element',
    regex: /Gain (\d+)% of Physical Damage as Extra Damage of a random Element/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Gain #% of Physical Damage as Extra Fire Damage',
    regex: /Gain (\d+)% of Physical Damage as Extra Fire Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Gain #% of Physical Damage as Extra Fire Damage if you\'ve dealt a Critical Strike Recently',
    regex: /Gain (\d+)% of Physical Damage as Extra Fire Damage if you've dealt a Critical Strike Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Gain #% of Physical Damage as Extra Lightning Damage',
    regex: /Gain (\d+)% of Physical Damage as Extra Lightning Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Gain a Power Charge after Spending a total of 200 Mana',
    regex: /Gain a Power Charge after Spending a total of 200 Mana/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Gain an Endurance Charge every # seconds while Stationary',
    regex: /Gain an Endurance Charge every (\d+) seconds while Stationary/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Gain an Endurance Charge when you lose Fortify',
    regex: /Gain an Endurance Charge when you lose Fortify/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Gain an Endurance, Frenzy or Power charge when you Block',
    regex: /Gain an Endurance, Frenzy or Power charge when you Block/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Gain Onslaught for # seconds per Frenzy Charge on use',
    regex: /Gain Onslaught for (\d+) seconds per Frenzy Charge on use/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Gain Onslaught for 3 seconds when Hit',
    regex: /Gain Onslaught for 3 seconds when Hit/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Gain Unholy Might during Flask Effect',
    regex: /Gain Unholy Might during Flask Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Gains no Charges during Effect of any Overflowing Chalice Flask',
    regex: /Gains no Charges during Effect of any Overflowing Chalice Flask/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Gains no Charges during effect of any Soul Ripper Flask',
    regex: /Gains no Charges during effect of any Soul Ripper Flask/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Grants #% of Life Recovery to Minions',
    regex: /Grants (\d+)% of Life Recovery to Minions/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Grants Last Breath when you Use a Skill during Flask Effect, for #% of Mana Cost',
    regex: /Grants Last Breath when you Use a Skill during Flask Effect, for (\d+)% of Mana Cost/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Grants Level # Abyssal Cry Skill',
    regex: /Grants Level (\d+) Abyssal Cry Skill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Grants Level # Anger Skill',
    regex: /Grants Level (\d+) Anger Skill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Grants Level # Aspect of the Avian Skill',
    regex: /Grants Level (\d+) Aspect of the Avian Skill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Grants Level # Aspect of the Cat Skill',
    regex: /Grants Level (\d+) Aspect of the Cat Skill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Grants Level # Aspect of the Crab Skill',
    regex: /Grants Level (\d+) Aspect of the Crab Skill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Grants Level # Aspect of the Spider Skill',
    regex: /Grants Level (\d+) Aspect of the Spider Skill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Grants Level # Clarity Skill',
    regex: /Grants Level (\d+) Clarity Skill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Grants Level # Decoy Totem Skill',
    regex: /Grants Level (\d+) Decoy Totem Skill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Grants Level # Despair Curse Aura during Flask Effect',
    regex: /Grants Level (\d+) Despair Curse Aura during Flask Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Grants Level # Determination Skill',
    regex: /Grants Level (\d+) Determination Skill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Grants Level # Discipline Skill',
    regex: /Grants Level (\d+) Discipline Skill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Grants Level # Enduring Cry Skill',
    regex: /Grants Level (\d+) Enduring Cry Skill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Grants Level # Envy Skill',
    regex: /Grants Level (\d+) Envy Skill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Grants Level # Grace Skill',
    regex: /Grants Level (\d+) Grace Skill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Grants Level # Haste Skill',
    regex: /Grants Level (\d+) Haste Skill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Grants Level # Hatred Skill',
    regex: /Grants Level (\d+) Hatred Skill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Grants Level # Herald of Ash Skill',
    regex: /Grants Level (\d+) Herald of Ash Skill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Grants Level # Herald of Ice Skill',
    regex: /Grants Level (\d+) Herald of Ice Skill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Grants Level # Herald of Thunder Skill',
    regex: /Grants Level (\d+) Herald of Thunder Skill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Grants Level # Rallying Cry Skill',
    regex: /Grants Level (\d+) Rallying Cry Skill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Grants Level # Vitality Skill',
    regex: /Grants Level (\d+) Vitality Skill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Grants Level # Wrath Skill',
    regex: /Grants Level (\d+) Wrath Skill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Grants Perfect Agony during Flask effect',
    regex: /Grants Perfect Agony during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Has 1 Abyssal Socket',
    regex: /Has 1 Abyssal Socket/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Hits can\'t be Evaded',
    regex: /Hits can't be Evaded/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Hits with this Weapon can\'t be Evaded if you have Blocked Recently',
    regex: /Hits with this Weapon can't be Evaded if you have Blocked Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Hits with this Weapon have Culling Strike against Bleeding Enemies',
    regex: /Hits with this Weapon have Culling Strike against Bleeding Enemies/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Hits with this Weapon have Culling Strike if you have dealt a Critical Strike Recently',
    regex: /Hits with this Weapon have Culling Strike if you have dealt a Critical Strike Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Ignore all Movement Penalties from Armour',
    regex: /Ignore all Movement Penalties from Armour/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Immune to Curses during Flask effect Removes Curses on use',
    regex: /Immune to Curses during Flask effect Removes Curses on use/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Immune to Freeze, Chill, Curses and Stuns during Flask Effect',
    regex: /Immune to Freeze, Chill, Curses and Stuns during Flask Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Immune to Poison during Flask Effect Removes Poison on use',
    regex: /Immune to Poison during Flask Effect Removes Poison on use/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Immunity to Bleeding during Flask effect Removes Bleeding on use',
    regex: /Immunity to Bleeding during Flask effect Removes Bleeding on use/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Immunity to Freeze and Chill during Flask effect Removes Freeze and Chill on use',
    regex: /Immunity to Freeze and Chill during Flask effect Removes Freeze and Chill on use/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Immunity to Ignite during Flask effect Removes Burning on use',
    regex: /Immunity to Ignite during Flask effect Removes Burning on use/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Immunity to Shock during Flask effect Removes Shock on use',
    regex: /Immunity to Shock during Flask effect Removes Shock on use/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Instant Recovery',
    regex: /Instant Recovery/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Instant Recovery when on Low Life',
    regex: /Instant Recovery when on Low Life/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Item sells for much more to vendors',
    regex: /Item sells for much more to vendors/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Items and Gems have #% reduced Attribute Requirements',
    regex: /Items and Gems have (\d+)% reduced Attribute Requirements/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Knocks Back Enemies in an Area when you use a Flask',
    regex: /Knocks Back Enemies in an Area when you use a Flask/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Life and Mana Leech are instant during effect',
    regex: /Life and Mana Leech are instant during effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Life Recovery from Flasks also applies to Energy Shield during Flask Effect',
    regex: /Life Recovery from Flasks also applies to Energy Shield during Flask Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Lose all Flask Charges on entering a new area',
    regex: /Lose all Flask Charges on entering a new area/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Mana Recovery occurs instantly at the end of the Flask effect',
    regex: /Mana Recovery occurs instantly at the end of the Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Melee Movement Skills have #% chance to Fortify on Hit',
    regex: /Melee Movement Skills have (\d+)% chance to Fortify on Hit/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Mines have #% increased Detonation Speed',
    regex: /Mines have (\d+)% increased Detonation Speed/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Minions deal # to # additional Chaos Damage',
    regex: /Minions deal (\d+) to (\d+) additional Chaos Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Minions deal # to # additional Cold Damage',
    regex: /Minions deal (\d+) to (\d+) additional Cold Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Minions deal # to # additional Fire Damage',
    regex: /Minions deal (\d+) to (\d+) additional Fire Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Minions deal # to # additional Lightning Damage',
    regex: /Minions deal (\d+) to (\d+) additional Lightning Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Minions deal # to # additional Physical Damage',
    regex: /Minions deal (\d+) to (\d+) additional Physical Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Minions deal #% increased Damage',
    regex: /Minions deal (\d+)% increased Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Minions deal #% increased Damage against Abyssal Monsters',
    regex: /Minions deal (\d+)% increased Damage against Abyssal Monsters/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Minions deal #% increased Damage if you\'ve used a Minion Skill Recently',
    regex: /Minions deal (\d+)% increased Damage if you've used a Minion Skill Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Minions have #% chance to Blind on Hit with Attacks',
    regex: /Minions have (\d+)% chance to Blind on Hit with Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Minions have #% chance to deal Double Damage',
    regex: /Minions have (\d+)% chance to deal Double Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Minions have #% chance to Hinder Enemies on Hit with Spells, with 30% reduced Movement Speed',
    regex: /Minions have (\d+)% chance to Hinder Enemies on Hit with Spells, with 30% reduced Movement Speed/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Minions have #% chance to Taunt on Hit with Attacks',
    regex: /Minions have (\d+)% chance to Taunt on Hit with Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Minions have #% increased Attack and Cast Speed if you or your Minions have Killed Recently',
    regex: /Minions have (\d+)% increased Attack and Cast Speed if you or your Minions have Killed Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Minions have #% increased Attack Speed',
    regex: /Minions have (\d+)% increased Attack Speed/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Minions have #% increased Cast Speed',
    regex: /Minions have (\d+)% increased Cast Speed/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Minions have #% increased maximum Life',
    regex: /Minions have (\d+)% increased maximum Life/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Minions have #% increased Movement Speed',
    regex: /Minions have (\d+)% increased Movement Speed/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Minions have +# to Accuracy Rating',
    regex: /Minions have \+(\d+) to Accuracy Rating/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Minions have +#% Chance to Block Attack Damage',
    regex: /Minions have \+(\d+)% Chance to Block Attack Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Minions have +#% to all Elemental Resistances',
    regex: /Minions have \+(\d+)% to all Elemental Resistances/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Minions have +#% to Chaos Resistance',
    regex: /Minions have \+(\d+)% to Chaos Resistance/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Minions Leech #% of Damage as Life',
    regex: /Minions Leech (\d+)% of Damage as Life/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Minions Regenerate # Life per second',
    regex: /Minions Regenerate (\d+) Life per second/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Minions Regenerate #% of Life per second',
    regex: /Minions Regenerate (\d+)% of Life per second/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Nearby Enemies have #% to Chaos Resistance',
    regex: /Nearby Enemies have (\d+)% to Chaos Resistance/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Nearby Enemies have #% to Cold Resistance',
    regex: /Nearby Enemies have (\d+)% to Cold Resistance/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Nearby Enemies have #% to Fire Resistance',
    regex: /Nearby Enemies have (\d+)% to Fire Resistance/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Nearby Enemies have #% to Lightning Resistance',
    regex: /Nearby Enemies have (\d+)% to Lightning Resistance/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Nearby Enemies have -#% to Chaos Resistance',
    regex: /Nearby Enemies have -(\d+)% to Chaos Resistance/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Nearby Enemies have -#% to Cold Resistance',
    regex: /Nearby Enemies have -(\d+)% to Cold Resistance/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Nearby Enemies have -#% to Fire Resistance',
    regex: /Nearby Enemies have -(\d+)% to Fire Resistance/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Nearby Enemies have -#% to Lightning Resistance',
    regex: /Nearby Enemies have -(\d+)% to Lightning Resistance/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Nearby Enemies take #% increased Physical Damage',
    regex: /Nearby Enemies take (\d+)% increased Physical Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Non-Channelling Skills have -# to Total Mana Cost',
    regex: /Non-Channelling Skills have -(\d+) to Total Mana Cost/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Petrified during Flask Effect',
    regex: /Petrified during Flask Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Projectiles deal #% increased Damage for each Enemy Pierced',
    regex: /Projectiles deal (\d+)% increased Damage for each Enemy Pierced/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Projectiles Pierce # additional Targets',
    regex: /Projectiles Pierce (\d+) additional Targets/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Projectiles Pierce an additional Target',
    regex: /Projectiles Pierce an additional Target/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Recharges # Charge when you Consume an Ignited corpse',
    regex: /Recharges (\d+) Charge when you Consume an Ignited corpse/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Recharges # Charge when you deal a Critical Strike',
    regex: /Recharges (\d+) Charge when you deal a Critical Strike/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Recharges # Charges when you take a Critical Strike',
    regex: /Recharges (\d+) Charges when you take a Critical Strike/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Recover #% of Energy Shield on Kill',
    regex: /Recover (\d+)% of Energy Shield on Kill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Recover #% of Energy Shield when you Block',
    regex: /Recover (\d+)% of Energy Shield when you Block/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Recover #% of Energy Shield when you Kill an Enemy during Flask Effect',
    regex: /Recover (\d+)% of Energy Shield when you Kill an Enemy during Flask Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Recover #% of Life on Kill',
    regex: /Recover (\d+)% of Life on Kill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Recover #% of Life when you Block',
    regex: /Recover (\d+)% of Life when you Block/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Recover #% of Life when you Kill an Enemy during Flask Effect',
    regex: /Recover (\d+)% of Life when you Kill an Enemy during Flask Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Recover #% of Mana on Kill',
    regex: /Recover (\d+)% of Mana on Kill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Recover #% of Mana when you Kill an Enemy during Flask Effect',
    regex: /Recover (\d+)% of Mana when you Kill an Enemy during Flask Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Recover #% of your maximum Mana when you Block',
    regex: /Recover (\d+)% of your maximum Mana when you Block/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Recover Full Life at the end of the Flask Effect',
    regex: /Recover Full Life at the end of the Flask Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Recover Full Life on use',
    regex: /Recover Full Life on use/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Reduce Attack, Cast and Movement Speed #% every second during Flask Effect',
    regex: /Reduce Attack, Cast and Movement Speed (\d+)% every second during Flask Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Reflects # Physical Damage to Melee Attackers',
    regex: /Reflects (\d+) Physical Damage to Melee Attackers/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Regenerate # Energy Shield per second',
    regex: /Regenerate (\d+) Energy Shield per second/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Regenerate # Life per second',
    regex: /Regenerate (\d+) Life per second/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Regenerate # Mana per second',
    regex: /Regenerate (\d+) Mana per second/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Regenerate #% of Energy Shield per second',
    regex: /Regenerate (\d+)% of Energy Shield per second/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Regenerate #% of Energy Shield per second if you\'ve Hit an Enemy Recently',
    regex: /Regenerate (\d+)% of Energy Shield per second if you've Hit an Enemy Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Regenerate #% of Life per second',
    regex: /Regenerate (\d+)% of Life per second/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Regenerate #% of Life per second while moving',
    regex: /Regenerate (\d+)% of Life per second while moving/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Regenerate #% of Mana per second',
    regex: /Regenerate (\d+)% of Mana per second/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Regenerate #% of Mana per second if you\'ve Hit an Enemy Recently',
    regex: /Regenerate (\d+)% of Mana per second if you've Hit an Enemy Recently/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Remove Chill and Freeze when you use a Flask',
    regex: /Remove Chill and Freeze when you use a Flask/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Remove Ignite and Burning when you use a Flask',
    regex: /Remove Ignite and Burning when you use a Flask/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Remove Shock when you use a Flask',
    regex: /Remove Shock when you use a Flask/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Removes #% of Life Recovered from Mana when used',
    regex: /Removes (\d+)% of Life Recovered from Mana when used/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Removes #% of Mana Recovered from Life when used',
    regex: /Removes (\d+)% of Mana Recovered from Life when used/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Removes #% of your maximum Energy Shield on use',
    regex: /Removes (\d+)% of your maximum Energy Shield on use/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Removes all but one Life on use Removed life is Regenerated as Energy Shield over # seconds',
    regex: /Removes all but one Life on use Removed life is Regenerated as Energy Shield over (\d+) seconds/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Removes Bleeding when you use a Warcry',
    regex: /Removes Bleeding when you use a Warcry/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Shocks nearby Enemies during Flask effect, causing 10% increased Damage taken',
    regex: /Shocks nearby Enemies during Flask effect, causing 10% increased Damage taken/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Skills fire # additional Projectiles during Flask Effect',
    regex: /Skills fire (\d+) additional Projectiles during Flask Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Skills used by Mines have #% increased Area of Effect',
    regex: /Skills used by Mines have (\d+)% increased Area of Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Skills used by Traps have #% increased Area of Effect',
    regex: /Skills used by Traps have (\d+)% increased Area of Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Skills which Throw Traps throw up to 1 additional Trap',
    regex: /Skills which Throw Traps throw up to 1 additional Trap/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Attacks have +#% to Critical Strike Chance',
    regex: /Socketed Attacks have \+(\d+)% to Critical Strike Chance/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Attacks have +#% to Critical Strike Multiplier',
    regex: /Socketed Attacks have \+(\d+)% to Critical Strike Multiplier/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Attacks have -# to Total Mana Cost',
    regex: /Socketed Attacks have -(\d+) to Total Mana Cost/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Added Fire Damage',
    regex: /Socketed Gems are Supported by Level (\d+) Added Fire Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Additional Accuracy',
    regex: /Socketed Gems are Supported by Level (\d+) Additional Accuracy/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Advanced Traps',
    regex: /Socketed Gems are Supported by Level (\d+) Advanced Traps/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Ancestral Call',
    regex: /Socketed Gems are Supported by Level (\d+) Ancestral Call/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Arcane Surge',
    regex: /Socketed Gems are Supported by Level (\d+) Arcane Surge/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Blastchain Mine',
    regex: /Socketed Gems are Supported by Level (\d+) Blastchain Mine/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Blind',
    regex: /Socketed Gems are Supported by Level (\d+) Blind/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Brutality',
    regex: /Socketed Gems are Supported by Level (\d+) Brutality/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Burning Damage',
    regex: /Socketed Gems are Supported by Level (\d+) Burning Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Cast On Critical Strike',
    regex: /Socketed Gems are Supported by Level (\d+) Cast On Critical Strike/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Cast On Melee Kill',
    regex: /Socketed Gems are Supported by Level (\d+) Cast On Melee Kill/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Cast when Damage Taken',
    regex: /Socketed Gems are Supported by Level (\d+) Cast when Damage Taken/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Cast While Channelling',
    regex: /Socketed Gems are Supported by Level (\d+) Cast While Channelling/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Chance To Bleed',
    regex: /Socketed Gems are Supported by Level (\d+) Chance To Bleed/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Cold Penetration',
    regex: /Socketed Gems are Supported by Level (\d+) Cold Penetration/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Concentrated Effect',
    regex: /Socketed Gems are Supported by Level (\d+) Concentrated Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Controlled Destruction',
    regex: /Socketed Gems are Supported by Level (\d+) Controlled Destruction/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Efficacy',
    regex: /Socketed Gems are Supported by Level (\d+) Efficacy/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Elemental Damage with Attacks',
    regex: /Socketed Gems are Supported by Level (\d+) Elemental Damage with Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Elemental Focus',
    regex: /Socketed Gems are Supported by Level (\d+) Elemental Focus/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Elemental Proliferation',
    regex: /Socketed Gems are Supported by Level (\d+) Elemental Proliferation/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Endurance Charge on Melee Stun',
    regex: /Socketed Gems are Supported by Level (\d+) Endurance Charge on Melee Stun/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Faster Attacks',
    regex: /Socketed Gems are Supported by Level (\d+) Faster Attacks/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Faster Casting',
    regex: /Socketed Gems are Supported by Level (\d+) Faster Casting/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Faster Projectiles',
    regex: /Socketed Gems are Supported by Level (\d+) Faster Projectiles/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Fire Penetration',
    regex: /Socketed Gems are Supported by Level (\d+) Fire Penetration/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Fortify',
    regex: /Socketed Gems are Supported by Level (\d+) Fortify/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Hypothermia',
    regex: /Socketed Gems are Supported by Level (\d+) Hypothermia/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Immolate',
    regex: /Socketed Gems are Supported by Level (\d+) Immolate/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Increased Area of Effect',
    regex: /Socketed Gems are Supported by Level (\d+) Increased Area of Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Increased Critical Damage',
    regex: /Socketed Gems are Supported by Level (\d+) Increased Critical Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Increased Critical Strikes',
    regex: /Socketed Gems are Supported by Level (\d+) Increased Critical Strikes/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Increased Duration',
    regex: /Socketed Gems are Supported by Level (\d+) Increased Duration/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Innervate',
    regex: /Socketed Gems are Supported by Level (\d+) Innervate/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Inspiration',
    regex: /Socketed Gems are Supported by Level (\d+) Inspiration/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Iron Grip',
    regex: /Socketed Gems are Supported by Level (\d+) Iron Grip/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Item Rarity',
    regex: /Socketed Gems are Supported by Level (\d+) Item Rarity/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Less Duration',
    regex: /Socketed Gems are Supported by Level (\d+) Less Duration/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Lesser Multiple Projectiles',
    regex: /Socketed Gems are Supported by Level (\d+) Lesser Multiple Projectiles/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Lesser Poison',
    regex: /Socketed Gems are Supported by Level (\d+) Lesser Poison/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Life Leech',
    regex: /Socketed Gems are Supported by Level (\d+) Life Leech/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Lightning Penetration',
    regex: /Socketed Gems are Supported by Level (\d+) Lightning Penetration/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Maim',
    regex: /Socketed Gems are Supported by Level (\d+) Maim/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Mana Leech',
    regex: /Socketed Gems are Supported by Level (\d+) Mana Leech/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Melee Physical Damage',
    regex: /Socketed Gems are Supported by Level (\d+) Melee Physical Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Melee Splash',
    regex: /Socketed Gems are Supported by Level (\d+) Melee Splash/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Minion Damage',
    regex: /Socketed Gems are Supported by Level (\d+) Minion Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Minion Life',
    regex: /Socketed Gems are Supported by Level (\d+) Minion Life/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Multistrike',
    regex: /Socketed Gems are Supported by Level (\d+) Multistrike/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Onslaught',
    regex: /Socketed Gems are Supported by Level (\d+) Onslaught/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Poison',
    regex: /Socketed Gems are Supported by Level (\d+) Poison/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Power Charge On Critical Strike',
    regex: /Socketed Gems are Supported by Level (\d+) Power Charge On Critical Strike/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Ranged Attack Totem',
    regex: /Socketed Gems are Supported by Level (\d+) Ranged Attack Totem/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Ruthless',
    regex: /Socketed Gems are Supported by Level (\d+) Ruthless/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Slower Projectiles',
    regex: /Socketed Gems are Supported by Level (\d+) Slower Projectiles/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Spell Cascade',
    regex: /Socketed Gems are Supported by Level (\d+) Spell Cascade/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Spell Echo',
    regex: /Socketed Gems are Supported by Level (\d+) Spell Echo/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Spell Totem',
    regex: /Socketed Gems are Supported by Level (\d+) Spell Totem/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Trap',
    regex: /Socketed Gems are Supported by Level (\d+) Trap/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Trap And Mine Damage',
    regex: /Socketed Gems are Supported by Level (\d+) Trap And Mine Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Unbound Ailments',
    regex: /Socketed Gems are Supported by Level (\d+) Unbound Ailments/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Vicious Projectiles',
    regex: /Socketed Gems are Supported by Level (\d+) Vicious Projectiles/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Volley',
    regex: /Socketed Gems are Supported by Level (\d+) Volley/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems Chain # additional times',
    regex: /Socketed Gems Chain (\d+) additional times/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems deal # to # additional Fire Damage',
    regex: /Socketed Gems deal (\d+) to (\d+) additional Fire Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems deal #% more Damage over Time',
    regex: /Socketed Gems deal (\d+)% more Damage over Time/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems deal #% more Elemental Damage',
    regex: /Socketed Gems deal (\d+)% more Elemental Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems gain #% of Physical Damage as extra Lightning Damage',
    regex: /Socketed Gems gain (\d+)% of Physical Damage as extra Lightning Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems have #% chance to Ignite',
    regex: /Socketed Gems have (\d+)% chance to Ignite/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems have #% more Attack and Cast Speed',
    regex: /Socketed Gems have (\d+)% more Attack and Cast Speed/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems have #% reduced Mana Reservation',
    regex: /Socketed Gems have (\d+)% reduced Mana Reservation/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Gems have +#% Critical Strike Chance',
    regex: /Socketed Gems have \+(\d+)% Critical Strike Chance/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Movement Skills have no Mana Cost',
    regex: /Socketed Movement Skills have no Mana Cost/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Non-Curse Aura Gems have #% increased Aura Effect',
    regex: /Socketed Non-Curse Aura Gems have (\d+)% increased Aura Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Skills deal #% more Attack Damage',
    regex: /Socketed Skills deal (\d+)% more Attack Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Skills deal #% more Spell Damage',
    regex: /Socketed Skills deal (\d+)% more Spell Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Skills have #% increased Attack Speed',
    regex: /Socketed Skills have (\d+)% increased Attack Speed/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Skills have #% increased Cast Speed',
    regex: /Socketed Skills have (\d+)% increased Cast Speed/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Spells have #% reduced Mana Cost',
    regex: /Socketed Spells have (\d+)% reduced Mana Cost/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Spells have +#% to Critical Strike Chance',
    regex: /Socketed Spells have \+(\d+)% to Critical Strike Chance/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Socketed Spells have +#% to Critical Strike Multiplier',
    regex: /Socketed Spells have \+(\d+)% to Critical Strike Multiplier/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Spells have +#% to Critical Strike Chance',
    regex: /Spells have \+(\d+)% to Critical Strike Chance/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Take # Chaos Damage per Second during Flask effect',
    regex: /Take (\d+) Chaos Damage per Second during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Throw an additional Mine',
    regex: /Throw an additional Mine/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Totemic Wood Lure',
    regex: /Totemic Wood Lure/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Totems gain +#% to all Elemental Resistances',
    regex: /Totems gain \+(\d+)% to all Elemental Resistances/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Triggers Level 20 Spectral Spirits when Equipped',
    regex: /Triggers Level 20 Spectral Spirits when Equipped/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Unaffected by Burning Ground',
    regex: /Unaffected by Burning Ground/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Unaffected by Chilled Ground',
    regex: /Unaffected by Chilled Ground/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Unaffected by Desecrated Ground',
    regex: /Unaffected by Desecrated Ground/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Unaffected by Shocked Ground',
    regex: /Unaffected by Shocked Ground/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Vaal Skills deal #% increased Damage',
    regex: /Vaal Skills deal (\d+)% increased Damage/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Vaal Skills deal #% increased Damage during effect',
    regex: /Vaal Skills deal (\d+)% increased Damage during effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Vaal Skills deal #% more Damage during Effect',
    regex: /Vaal Skills deal (\d+)% more Damage during Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Vaal Skills have #% reduced Soul Cost during effect',
    regex: /Vaal Skills have (\d+)% reduced Soul Cost during effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Vaal Skills used during effect do not apply Soul Gain Prevention',
    regex: /Vaal Skills used during effect do not apply Soul Gain Prevention/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Vaal Skills used during effect have #% reduced Soul Gain Prevention Duration',
    regex: /Vaal Skills used during effect have (\d+)% reduced Soul Gain Prevention Duration/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'When you Kill a Rare Monster, #% chance to gain one of its Modifiers for 10 seconds',
    regex: /When you Kill a Rare Monster, (\d+)% chance to gain one of its Modifiers for 10 seconds/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'You are Immune to Damage during Flask Effect',
    regex: /You are Immune to Damage during Flask Effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'You are Shocked during Flask effect, causing 50% increased Damage taken',
    regex: /You are Shocked during Flask effect, causing 50% increased Damage taken/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'You can apply an additional Curse',
    regex: /You can apply an additional Curse/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'You gain a Frenzy Charge on use',
    regex: /You gain a Frenzy Charge on use/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'You gain a Power Charge on use',
    regex: /You gain a Power Charge on use/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'You gain an Endurance Charge on use',
    regex: /You gain an Endurance Charge on use/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'You take #% of your maximum Life as Chaos Damage on use',
    regex: /You take (\d+)% of your maximum Life as Chaos Damage on use/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'You take #% reduced Extra Damage from Critical Strikes',
    regex: /You take (\d+)% reduced Extra Damage from Critical Strikes/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Your Critical Strikes do not deal extra Damage during Flask effect',
    regex: /Your Critical Strikes do not deal extra Damage during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Your Hits inflict Decay, dealing 500 Chaos Damage per second for 8 seconds',
    regex: /Your Hits inflict Decay, dealing 500 Chaos Damage per second for 8 seconds/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Your Skills have no Mana Cost during Flask effect',
    regex: /Your Skills have no Mana Cost during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
  {
    label: 'Zealot\'s Oath during Flask effect',
    regex: /Zealot's Oath during Flask effect/,
    type: ModFilterType.EXPLICIT,
  },
];
/* crafted */
export const craftedModRegexes: IMod[] = [
  {
    label: '#% additional Physical Damage Reduction while Focussed',
    regex: /(\d+)% additional Physical Damage Reduction while Focussed/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% chance for Flasks to gain a Charge when you take a Critical Strike',
    regex: /(\d+)% chance for Flasks to gain a Charge when you take a Critical Strike/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% chance for your Flasks to not consume Charges',
    regex: /(\d+)% chance for your Flasks to not consume Charges/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% chance to Avoid being Chilled',
    regex: /(\d+)% chance to Avoid being Chilled/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% chance to Avoid being Frozen',
    regex: /(\d+)% chance to Avoid being Frozen/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% chance to Avoid being Ignited',
    regex: /(\d+)% chance to Avoid being Ignited/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% chance to Avoid being Knocked Back',
    regex: /(\d+)% chance to Avoid being Knocked Back/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% chance to Avoid being Shocked',
    regex: /(\d+)% chance to Avoid being Shocked/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% chance to Avoid being Stunned',
    regex: /(\d+)% chance to Avoid being Stunned/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% Chance to avoid being Stunned during Flask Effect',
    regex: /(\d+)% Chance to avoid being Stunned during Flask Effect/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% chance to Avoid Elemental Ailments',
    regex: /(\d+)% chance to Avoid Elemental Ailments/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% chance to Avoid Elemental Damage from Hits during Soul Gain Prevention',
    regex: /(\d+)% chance to Avoid Elemental Damage from Hits during Soul Gain Prevention/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% chance to Blind Enemies on hit',
    regex: /(\d+)% chance to Blind Enemies on hit/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% Chance to Block Attack Damage',
    regex: /(\d+)% Chance to Block Attack Damage/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% Chance to Block Spell Damage',
    regex: /(\d+)% Chance to Block Spell Damage/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% chance to cause Bleeding on Hit',
    regex: /(\d+)% chance to cause Bleeding on Hit/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% chance to deal Double Damage',
    regex: /(\d+)% chance to deal Double Damage/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% chance to deal Double Damage while Focussed',
    regex: /(\d+)% chance to deal Double Damage while Focussed/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% chance to Dodge Spell Hits',
    regex: /(\d+)% chance to Dodge Spell Hits/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% chance to Freeze',
    regex: /(\d+)% chance to Freeze/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% chance to gain a Frenzy Charge on Critical Strike',
    regex: /(\d+)% chance to gain a Frenzy Charge on Critical Strike/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% chance to gain Arcane Surge when you Kill an Enemy',
    regex: /(\d+)% chance to gain Arcane Surge when you Kill an Enemy/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% chance to gain Onslaught for 4 seconds on Kill',
    regex: /(\d+)% chance to gain Onslaught for 4 seconds on Kill/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% chance to Ignite',
    regex: /(\d+)% chance to Ignite/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% chance to Impale Enemies on Hit with Attacks',
    regex: /(\d+)% chance to Impale Enemies on Hit with Attacks/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% chance to Poison on Hit',
    regex: /(\d+)% chance to Poison on Hit/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% chance to Shock',
    regex: /(\d+)% chance to Shock/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% chance to Trigger Level 1 Blood Rage when you Kill an Enemy',
    regex: /(\d+)% chance to Trigger Level 1 Blood Rage when you Kill an Enemy/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% Chance to Trigger Level 18 Summon Spectral Wolf on Kill',
    regex: /(\d+)% Chance to Trigger Level 18 Summon Spectral Wolf on Kill/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% faster start of Energy Shield Recharge',
    regex: /(\d+)% faster start of Energy Shield Recharge/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Area Damage',
    regex: /(\d+)% increased Area Damage/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Area of Effect',
    regex: /(\d+)% increased Area of Effect/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Armour',
    regex: /(\d+)% increased Armour/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Armour and Energy Shield',
    regex: /(\d+)% increased Armour and Energy Shield/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Armour and Evasion',
    regex: /(\d+)% increased Armour and Evasion/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Armour, Evasion and Energy Shield',
    regex: /(\d+)% increased Armour, Evasion and Energy Shield/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Attack and Cast Speed',
    regex: /(\d+)% increased Attack and Cast Speed/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Attack and Cast Speed while Focussed',
    regex: /(\d+)% increased Attack and Cast Speed while Focussed/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Attack Speed',
    regex: /(\d+)% increased Attack Speed/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Attack Speed while a Rare or Unique Enemy is Nearby',
    regex: /(\d+)% increased Attack Speed while a Rare or Unique Enemy is Nearby/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Attributes',
    regex: /(\d+)% increased Attributes/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Brand Attachment range',
    regex: /(\d+)% increased Brand Attachment range/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Cast Speed',
    regex: /(\d+)% increased Cast Speed/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Chaos Damage',
    regex: /(\d+)% increased Chaos Damage/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Chill Duration on Enemies',
    regex: /(\d+)% increased Chill Duration on Enemies/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Cold Damage',
    regex: /(\d+)% increased Cold Damage/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Cooldown Recovery Speed',
    regex: /(\d+)% increased Cooldown Recovery Speed/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Critical Strike Chance',
    regex: /(\d+)% increased Critical Strike Chance/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Critical Strike Chance during Flask Effect',
    regex: /(\d+)% increased Critical Strike Chance during Flask Effect/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Critical Strike Chance for Spells',
    regex: /(\d+)% increased Critical Strike Chance for Spells/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Damage',
    regex: /(\d+)% increased Damage/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Damage during any Flask Effect',
    regex: /(\d+)% increased Damage during any Flask Effect/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Damage over Time',
    regex: /(\d+)% increased Damage over Time/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Damage per Endurance Charge',
    regex: /(\d+)% increased Damage per Endurance Charge/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Damage per Frenzy Charge',
    regex: /(\d+)% increased Damage per Frenzy Charge/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Damage per Power Charge',
    regex: /(\d+)% increased Damage per Power Charge/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Damage while Leeching',
    regex: /(\d+)% increased Damage while Leeching/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Duration of Ailments you inflict while Focussed',
    regex: /(\d+)% increased Duration of Ailments you inflict while Focussed/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Effect of Fortify on you while Focussed',
    regex: /(\d+)% increased Effect of Fortify on you while Focussed/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Effect of non-Damaging Ailments on Enemies',
    regex: /(\d+)% increased Effect of non-Damaging Ailments on Enemies/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Effect of your Curses',
    regex: /(\d+)% increased Effect of your Curses/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Elemental Damage if you\'ve dealt a Critical Strike Recently',
    regex: /(\d+)% increased Elemental Damage if you've dealt a Critical Strike Recently/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Elemental Damage with Attack Skills',
    regex: /(\d+)% increased Elemental Damage with Attack Skills/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Energy Shield',
    regex: /(\d+)% increased Energy Shield/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Evasion and Energy Shield',
    regex: /(\d+)% increased Evasion and Energy Shield/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Evasion Rating',
    regex: /(\d+)% increased Evasion Rating/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Fire Damage',
    regex: /(\d+)% increased Fire Damage/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Flask Effect Duration',
    regex: /(\d+)% increased Flask Effect Duration/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Flask Life Recovery rate',
    regex: /(\d+)% increased Flask Life Recovery rate/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Flask Mana Recovery rate',
    regex: /(\d+)% increased Flask Mana Recovery rate/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Freeze Duration on Enemies',
    regex: /(\d+)% increased Freeze Duration on Enemies/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Global Critical Strike Chance',
    regex: /(\d+)% increased Global Critical Strike Chance/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Global Physical Damage',
    regex: /(\d+)% increased Global Physical Damage/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Ignite Duration on Enemies',
    regex: /(\d+)% increased Ignite Duration on Enemies/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Lightning Damage',
    regex: /(\d+)% increased Lightning Damage/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Mana Regeneration Rate',
    regex: /(\d+)% increased Mana Regeneration Rate/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased maximum Energy Shield',
    regex: /(\d+)% increased maximum Energy Shield/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased maximum Life',
    regex: /(\d+)% increased maximum Life/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased maximum Mana',
    regex: /(\d+)% increased maximum Mana/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Melee Damage',
    regex: /(\d+)% increased Melee Damage/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Mine Damage',
    regex: /(\d+)% increased Mine Damage/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Mine Throwing Speed',
    regex: /(\d+)% increased Mine Throwing Speed/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Movement Speed',
    regex: /(\d+)% increased Movement Speed/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Movement Speed during Flask effect',
    regex: /(\d+)% increased Movement Speed during Flask effect/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Movement Speed if you haven\'t been Hit Recently',
    regex: /(\d+)% increased Movement Speed if you haven't been Hit Recently/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Physical Damage',
    regex: /(\d+)% increased Physical Damage/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Projectile Damage',
    regex: /(\d+)% increased Projectile Damage/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Projectile Speed',
    regex: /(\d+)% increased Projectile Speed/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Quantity of Items found in this Area',
    regex: /(\d+)% increased Quantity of Items found in this Area/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Rarity of Items Dropped by Slain Rare or Unique Enemies',
    regex: /(\d+)% increased Rarity of Items Dropped by Slain Rare or Unique Enemies/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Rarity of Items found',
    regex: /(\d+)% increased Rarity of Items found/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Rarity of Items found during Flask Effect',
    regex: /(\d+)% increased Rarity of Items found during Flask Effect/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Shock Duration on Enemies',
    regex: /(\d+)% increased Shock Duration on Enemies/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Spell Damage',
    regex: /(\d+)% increased Spell Damage/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Stun Duration on Enemies',
    regex: /(\d+)% increased Stun Duration on Enemies/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Totem Placement speed',
    regex: /(\d+)% increased Totem Placement speed/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Trap Damage',
    regex: /(\d+)% increased Trap Damage/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% increased Trap Throwing Speed',
    regex: /(\d+)% increased Trap Throwing Speed/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% more Physical Damage with Unarmed Attacks',
    regex: /(\d+)% more Physical Damage with Unarmed Attacks/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% of Cold Damage Leeched as Life',
    regex: /(\d+)% of Cold Damage Leeched as Life/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% of Damage is taken from Mana before Life while Focussed',
    regex: /(\d+)% of Damage is taken from Mana before Life while Focussed/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% of Damage Leeched as Life while Focussed',
    regex: /(\d+)% of Damage Leeched as Life while Focussed/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% of Damage Taken from Hits is Leeched as Life during Flask Effect',
    regex: /(\d+)% of Damage Taken from Hits is Leeched as Life during Flask Effect/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% of Damage taken gained as Mana over 4 seconds when Hit',
    regex: /(\d+)% of Damage taken gained as Mana over 4 seconds when Hit/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% of Evasion Rating is Regenerated as Life per second while Focussed',
    regex: /(\d+)% of Evasion Rating is Regenerated as Life per second while Focussed/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% of Fire Damage Leeched as Life',
    regex: /(\d+)% of Fire Damage Leeched as Life/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% of Lightning Damage Leeched as Life',
    regex: /(\d+)% of Lightning Damage Leeched as Life/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% of Physical Attack Damage Leeched as Life',
    regex: /(\d+)% of Physical Attack Damage Leeched as Life/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% of Physical Attack Damage Leeched as Mana',
    regex: /(\d+)% of Physical Attack Damage Leeched as Mana/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% of Physical Damage Converted to Cold Damage',
    regex: /(\d+)% of Physical Damage Converted to Cold Damage/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% of Physical Damage Converted to Fire Damage',
    regex: /(\d+)% of Physical Damage Converted to Fire Damage/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% of Physical Damage Converted to Lightning Damage',
    regex: /(\d+)% of Physical Damage Converted to Lightning Damage/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% of Physical Damage from Hits taken as Fire Damage',
    regex: /(\d+)% of Physical Damage from Hits taken as Fire Damage/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% reduced Damage taken from Damage Over Time',
    regex: /(\d+)% reduced Damage taken from Damage Over Time/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% reduced Enemy Block Chance',
    regex: /(\d+)% reduced Enemy Block Chance/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% reduced Enemy Stun Threshold with this Weapon',
    regex: /(\d+)% reduced Enemy Stun Threshold with this Weapon/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% reduced Flask Charges gained',
    regex: /(\d+)% reduced Flask Charges gained/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% reduced Mana Cost of Skills',
    regex: /(\d+)% reduced Mana Cost of Skills/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '#% reduced Mana Cost of Skills during Flask Effect',
    regex: /(\d+)% reduced Mana Cost of Skills during Flask Effect/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+# Life gained for each Enemy hit by your Attacks',
    regex: /\+(\d+) Life gained for each Enemy hit by your Attacks/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+# to Accuracy Rating',
    regex: /\+(\d+) to Accuracy Rating/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+# to all Attributes',
    regex: /\+(\d+) to all Attributes/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+# to Armour',
    regex: /\+(\d+) to Armour/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+# to Armour and Evasion Rating',
    regex: /\+(\d+) to Armour and Evasion Rating/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+# to Armour during Soul Gain Prevention',
    regex: /\+(\d+) to Armour during Soul Gain Prevention/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+# to Dexterity',
    regex: /\+(\d+) to Dexterity/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+# to Dexterity and Intelligence',
    regex: /\+(\d+) to Dexterity and Intelligence/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+# to Evasion Rating',
    regex: /\+(\d+) to Evasion Rating/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+# to Intelligence',
    regex: /\+(\d+) to Intelligence/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+# to Level of Socketed AoE Gems',
    regex: /\+(\d+) to Level of Socketed AoE Gems/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+# to Level of Socketed Melee Gems',
    regex: /\+(\d+) to Level of Socketed Melee Gems/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+# to Level of Socketed Projectile Gems',
    regex: /\+(\d+) to Level of Socketed Projectile Gems/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+# to Level of Socketed Support Gems',
    regex: /\+(\d+) to Level of Socketed Support Gems/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+# to maximum Energy Shield',
    regex: /\+(\d+) to maximum Energy Shield/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+# to maximum Life',
    regex: /\+(\d+) to maximum Life/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+# to maximum Mana',
    regex: /\+(\d+) to maximum Mana/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+# to maximum number of Raised Zombies',
    regex: /\+(\d+) to maximum number of Raised Zombies/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+# to maximum number of Skeletons',
    regex: /\+(\d+) to maximum number of Skeletons/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+# to maximum number of Summoned Totems',
    regex: /\+(\d+) to maximum number of Summoned Totems/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+# to Melee Weapon and Unarmed Attack range',
    regex: /\+(\d+) to Melee Weapon and Unarmed Attack range/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+# to Minimum Endurance Charges',
    regex: /\+(\d+) to Minimum Endurance Charges/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+# to Minimum Frenzy Charges',
    regex: /\+(\d+) to Minimum Frenzy Charges/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+# to Minimum Power Charges',
    regex: /\+(\d+) to Minimum Power Charges/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+# to Strength',
    regex: /\+(\d+) to Strength/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+# to Strength and Dexterity',
    regex: /\+(\d+) to Strength and Dexterity/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+# to Strength and Intelligence',
    regex: /\+(\d+) to Strength and Intelligence/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+# to Weapon range',
    regex: /\+(\d+) to Weapon range/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+#% Chance to Block',
    regex: /\+(\d+)% Chance to Block/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+#% Chance to Block Attack Damage',
    regex: /\+(\d+)% Chance to Block Attack Damage/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+#% Chance to Block Attack Damage while Dual Wielding',
    regex: /\+(\d+)% Chance to Block Attack Damage while Dual Wielding/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+#% chance to Dodge Attack Hits while Focussed',
    regex: /\+(\d+)% chance to Dodge Attack Hits while Focussed/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+#% Critical Strike Multiplier while a Rare or Unique Enemy is Nearby',
    regex: /\+(\d+)% Critical Strike Multiplier while a Rare or Unique Enemy is Nearby/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+#% to all Elemental Resistances',
    regex: /\+(\d+)% to all Elemental Resistances/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+#% to Chaos Damage over Time Multiplier',
    regex: /\+(\d+)% to Chaos Damage over Time Multiplier/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+#% to Cold and Chaos Resistances',
    regex: /\+(\d+)% to Cold and Chaos Resistances/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+#% to Cold and Lightning Resistances',
    regex: /\+(\d+)% to Cold and Lightning Resistances/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+#% to Cold Damage over Time Multiplier',
    regex: /\+(\d+)% to Cold Damage over Time Multiplier/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+#% to Cold Resistance',
    regex: /\+(\d+)% to Cold Resistance/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+#% to Critical Strike Multiplier if you\'ve Shattered an Enemy Recently',
    regex: /\+(\d+)% to Critical Strike Multiplier if you've Shattered an Enemy Recently/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+#% to Fire and Chaos Resistances',
    regex: /\+(\d+)% to Fire and Chaos Resistances/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+#% to Fire and Cold Resistances',
    regex: /\+(\d+)% to Fire and Cold Resistances/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+#% to Fire and Lightning Resistances',
    regex: /\+(\d+)% to Fire and Lightning Resistances/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+#% to Fire Damage over Time Multiplier',
    regex: /\+(\d+)% to Fire Damage over Time Multiplier/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+#% to Fire Resistance',
    regex: /\+(\d+)% to Fire Resistance/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+#% to Global Critical Strike Multiplier',
    regex: /\+(\d+)% to Global Critical Strike Multiplier/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+#% to Lightning and Chaos Resistances',
    regex: /\+(\d+)% to Lightning and Chaos Resistances/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+#% to Lightning Resistance',
    regex: /\+(\d+)% to Lightning Resistance/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+#% to Quality',
    regex: /\+(\d+)% to Quality/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '+#% to Quality of Socketed Gems',
    regex: /\+(\d+)% to Quality of Socketed Gems/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: '-# to Total Mana Cost of Skills',
    regex: /-(\d+) to Total Mana Cost of Skills/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Adds # to # Chaos Damage if you\'ve dealt a Critical Strike Recently',
    regex: /Adds (\d+) to (\d+) Chaos Damage if you've dealt a Critical Strike Recently/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Adds # to # Chaos Damage to Attacks',
    regex: /Adds (\d+) to (\d+) Chaos Damage to Attacks/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Adds # to # Cold Damage',
    regex: /Adds (\d+) to (\d+) Cold Damage/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Adds # to # Cold Damage to Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Attacks/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Adds # to # Cold Damage to Spells',
    regex: /Adds (\d+) to (\d+) Cold Damage to Spells/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Adds # to # Fire Damage',
    regex: /Adds (\d+) to (\d+) Fire Damage/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Adds # to # Fire Damage to Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Attacks/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Adds # to # Fire Damage to Spells',
    regex: /Adds (\d+) to (\d+) Fire Damage to Spells/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Adds # to # Lightning Damage',
    regex: /Adds (\d+) to (\d+) Lightning Damage/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Adds # to # Lightning Damage to Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Attacks/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Adds # to # Lightning Damage to Spells',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Spells/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Adds # to # Physical Damage',
    regex: /Adds (\d+) to (\d+) Physical Damage/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Adds # to # Physical Damage to Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Attacks/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Attack Projectiles Return to you from final Target',
    regex: /Attack Projectiles Return to you from final Target/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Attacks with this Weapon Penetrate #% Chaos Resistance',
    regex: /Attacks with this Weapon Penetrate (\d+)% Chaos Resistance/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Attacks with this Weapon Penetrate #% Elemental Resistances',
    regex: /Attacks with this Weapon Penetrate (\d+)% Elemental Resistances/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Can have multiple Crafted Modifiers',
    regex: /Can have multiple Crafted Modifiers/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Cannot be Chilled',
    regex: /Cannot be Chilled/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Cannot be Frozen',
    regex: /Cannot be Frozen/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Cannot roll Attack Modifiers',
    regex: /Cannot roll Attack Modifiers/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Cannot roll Caster Modifiers',
    regex: /Cannot roll Caster Modifiers/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Cannot roll Modifiers with Required Level above #',
    regex: /Cannot roll Modifiers with Required Level above (\d+)/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Channelling Skills have -# to Total Mana Cost',
    regex: /Channelling Skills have -(\d+) to Total Mana Cost/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Chaos Skills have #% increased Skill Effect Duration',
    regex: /Chaos Skills have (\d+)% increased Skill Effect Duration/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Curse Skills have #% increased Skill Effect Duration',
    regex: /Curse Skills have (\d+)% increased Skill Effect Duration/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Flasks applied to you have #% increased Effect',
    regex: /Flasks applied to you have (\d+)% increased Effect/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Gain #% of Cold Damage as Extra Chaos Damage',
    regex: /Gain (\d+)% of Cold Damage as Extra Chaos Damage/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Gain #% of Fire Damage as Extra Chaos Damage',
    regex: /Gain (\d+)% of Fire Damage as Extra Chaos Damage/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Gain #% of Lightning Damage as Extra Chaos Damage',
    regex: /Gain (\d+)% of Lightning Damage as Extra Chaos Damage/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Gain #% of Maximum Life as Extra Maximum Energy Shield',
    regex: /Gain (\d+)% of Maximum Life as Extra Maximum Energy Shield/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Gain #% of Non-Chaos Damage as extra Chaos Damage',
    regex: /Gain (\d+)% of Non-Chaos Damage as extra Chaos Damage/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Gain #% of Physical Damage as Extra Chaos Damage',
    regex: /Gain (\d+)% of Physical Damage as Extra Chaos Damage/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Hits can\'t be Evaded',
    regex: /Hits can't be Evaded/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Item drops on Death if Equipped by an Animated Guardian',
    regex: /Item drops on Death if Equipped by an Animated Guardian/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Minions deal #% increased Damage',
    regex: /Minions deal (\d+)% increased Damage/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Minions have #% increased Attack Speed',
    regex: /Minions have (\d+)% increased Attack Speed/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Minions have #% increased Cast Speed',
    regex: /Minions have (\d+)% increased Cast Speed/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Minions have #% increased maximum Life',
    regex: /Minions have (\d+)% increased maximum Life/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Minions have #% increased Movement Speed',
    regex: /Minions have (\d+)% increased Movement Speed/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Minions have +#% to all Elemental Resistances',
    regex: /Minions have \+(\d+)% to all Elemental Resistances/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Minions Recover #% of their Life when you Focus',
    regex: /Minions Recover (\d+)% of their Life when you Focus/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Non-Channelling Skills have -# to Total Mana Cost',
    regex: /Non-Channelling Skills have -(\d+) to Total Mana Cost/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Non-Vaal Skills deal #% increased Damage during Soul Gain Prevention',
    regex: /Non-Vaal Skills deal (\d+)% increased Damage during Soul Gain Prevention/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Prefixes Cannot Be Changed',
    regex: /Prefixes Cannot Be Changed/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Projectiles Pierce an additional Target',
    regex: /Projectiles Pierce an additional Target/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Recover #% of Mana and Energy Shield when you Focus',
    regex: /Recover (\d+)% of Mana and Energy Shield when you Focus/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Reflects # Physical Damage to Melee Attackers',
    regex: /Reflects (\d+) Physical Damage to Melee Attackers/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Reflects # to # Physical Damage to Attackers on Block',
    regex: /Reflects (\d+) to (\d+) Physical Damage to Attackers on Block/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Regenerate # Energy Shield per second while a Rare or Unique Enemy is Nearby',
    regex: /Regenerate (\d+) Energy Shield per second while a Rare or Unique Enemy is Nearby/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Regenerate # Life per second',
    regex: /Regenerate (\d+) Life per second/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Regenerate # Mana per second',
    regex: /Regenerate (\d+) Mana per second/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Regenerate #% of Life per second',
    regex: /Regenerate (\d+)% of Life per second/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Regenerate #% of Life per second during any Flask Effect',
    regex: /Regenerate (\d+)% of Life per second during any Flask Effect/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Regenerate #% of Life per second during Flask Effect',
    regex: /Regenerate (\d+)% of Life per second during Flask Effect/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Shock nearby Enemies for # Seconds when you Focus',
    regex: /Shock nearby Enemies for (\d+) Seconds when you Focus/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Skills Cost no Mana while Focussed',
    regex: /Skills Cost no Mana while Focussed/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Blood Magic',
    regex: /Socketed Gems are Supported by Level (\d+) Blood Magic/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Suffixes Cannot Be Changed',
    regex: /Suffixes Cannot Be Changed/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Trigger a Socketed Spell when you Use a Skill',
    regex: /Trigger a Socketed Spell when you Use a Skill/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Trigger Socketed Spells when you Focus',
    regex: /Trigger Socketed Spells when you Focus/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'You are Immune to Ailments while Focussed',
    regex: /You are Immune to Ailments while Focussed/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'You can apply an additional Curse',
    regex: /You can apply an additional Curse/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'You have Onslaught during Soul Gain Prevention',
    regex: /You have Onslaught during Soul Gain Prevention/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'You have Vaal Pact while Focussed',
    regex: /You have Vaal Pact while Focussed/,
    type: ModFilterType.CRAFTED,
  },
  {
    label: 'Your Critical Strike Chance is Lucky while Focussed',
    regex: /Your Critical Strike Chance is Lucky while Focussed/,
    type: ModFilterType.CRAFTED,
  },
];
/* implicit */
export const implicitModRegexes: IMod[] = [
  {
    label: '# Cold Damage taken from Hits',
    regex: /(\d+) Cold Damage taken from Hits/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '# Fire Damage taken from Hits',
    regex: /(\d+) Fire Damage taken from Hits/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '# Lightning Damage taken from Hits',
    regex: /(\d+) Lightning Damage taken from Hits/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '# Physical Damage taken from Attack Hits',
    regex: /(\d+) Physical Damage taken from Attack Hits/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '# to # Cold Damage per Frenzy Charge',
    regex: /(\d+) to (\d+) Cold Damage per Frenzy Charge/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% additional Physical Damage Reduction',
    regex: /(\d+)% additional Physical Damage Reduction/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% additional Physical Damage Reduction against Abyssal Monsters',
    regex: /(\d+)% additional Physical Damage Reduction against Abyssal Monsters/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% additional Physical Damage Reduction while affected by Determination',
    regex: /(\d+)% additional Physical Damage Reduction while affected by Determination/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% additional Physical Damage Reduction while stationary',
    regex: /(\d+)% additional Physical Damage Reduction while stationary/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to Avoid being Chilled',
    regex: /(\d+)% chance to Avoid being Chilled/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to Avoid being Frozen',
    regex: /(\d+)% chance to Avoid being Frozen/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to Avoid being Ignited',
    regex: /(\d+)% chance to Avoid being Ignited/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to Avoid being Poisoned',
    regex: /(\d+)% chance to Avoid being Poisoned/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to Avoid being Shocked',
    regex: /(\d+)% chance to Avoid being Shocked/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to Avoid being Stunned',
    regex: /(\d+)% chance to Avoid being Stunned/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to avoid Bleeding',
    regex: /(\d+)% chance to avoid Bleeding/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to Avoid Cold Damage from Hits',
    regex: /(\d+)% chance to Avoid Cold Damage from Hits/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to Avoid Elemental Ailments',
    regex: /(\d+)% chance to Avoid Elemental Ailments/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to Avoid Fire Damage from Hits',
    regex: /(\d+)% chance to Avoid Fire Damage from Hits/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to Avoid interruption from Stuns while Casting',
    regex: /(\d+)% chance to Avoid interruption from Stuns while Casting/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to Avoid Lightning Damage from Hits',
    regex: /(\d+)% chance to Avoid Lightning Damage from Hits/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to Blind Enemies on Hit with Attacks',
    regex: /(\d+)% chance to Blind Enemies on Hit with Attacks/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% Chance to Block Attack Damage',
    regex: /(\d+)% Chance to Block Attack Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% Chance to Block Spell Damage',
    regex: /(\d+)% Chance to Block Spell Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to cause Bleeding on Hit',
    regex: /(\d+)% chance to cause Bleeding on Hit/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to Cause Monsters to Flee',
    regex: /(\d+)% chance to Cause Monsters to Flee/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to deal Double Damage',
    regex: /(\d+)% chance to deal Double Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to Dodge Attack Hits',
    regex: /(\d+)% chance to Dodge Attack Hits/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to Dodge Attack Hits while moving',
    regex: /(\d+)% chance to Dodge Attack Hits while moving/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to Dodge Spell Hits',
    regex: /(\d+)% chance to Dodge Spell Hits/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to Dodge Spell Hits while moving',
    regex: /(\d+)% chance to Dodge Spell Hits while moving/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to Fortify on Melee hit',
    regex: /(\d+)% chance to Fortify on Melee hit/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to Freeze',
    regex: /(\d+)% chance to Freeze/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to Freeze, Shock and Ignite',
    regex: /(\d+)% chance to Freeze, Shock and Ignite/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to gain a Frenzy Charge on Hit',
    regex: /(\d+)% chance to gain a Frenzy Charge on Hit/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to gain a Frenzy Charge on Kill',
    regex: /(\d+)% chance to gain a Frenzy Charge on Kill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to gain a Power Charge on Critical Strike',
    regex: /(\d+)% chance to gain a Power Charge on Critical Strike/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to gain a Power Charge on Kill',
    regex: /(\d+)% chance to gain a Power Charge on Kill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to gain an additional Vaal Soul on Kill',
    regex: /(\d+)% chance to gain an additional Vaal Soul on Kill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to gain an Endurance Charge on Kill',
    regex: /(\d+)% chance to gain an Endurance Charge on Kill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to gain an Endurance Charge when you Stun an Enemy',
    regex: /(\d+)% chance to gain an Endurance Charge when you Stun an Enemy/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to gain Onslaught for 4 seconds on Kill',
    regex: /(\d+)% chance to gain Onslaught for 4 seconds on Kill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to gain Phasing for 4 seconds on Kill',
    regex: /(\d+)% chance to gain Phasing for 4 seconds on Kill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to gain Unholy Might for 3 seconds on Kill',
    regex: /(\d+)% chance to gain Unholy Might for 3 seconds on Kill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to Hinder Enemies on Hit with Spells, with #% reduced Movement Speed',
    regex: /(\d+)% chance to Hinder Enemies on Hit with Spells, with (\d+)% reduced Movement Speed/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to Ignite',
    regex: /(\d+)% chance to Ignite/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to Impale Enemies on Hit with Attacks',
    regex: /(\d+)% chance to Impale Enemies on Hit with Attacks/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to Intimidate Enemies for 4 seconds on Hit',
    regex: /(\d+)% chance to Intimidate Enemies for 4 seconds on Hit/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to Knock Enemies Back on hit',
    regex: /(\d+)% chance to Knock Enemies Back on hit/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to Poison on Hit',
    regex: /(\d+)% chance to Poison on Hit/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to Shock',
    regex: /(\d+)% chance to Shock/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance to Taunt Enemies on Hit with Attacks',
    regex: /(\d+)% chance to Taunt Enemies on Hit with Attacks/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% chance when Hit for double Armour effect',
    regex: /(\d+)% chance when Hit for double Armour effect/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% faster start of Energy Shield Recharge',
    regex: /(\d+)% faster start of Energy Shield Recharge/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% Global chance to Blind Enemies on hit',
    regex: /(\d+)% Global chance to Blind Enemies on hit/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Accuracy Rating with Axes',
    regex: /(\d+)% increased Accuracy Rating with Axes/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Accuracy Rating with Bows',
    regex: /(\d+)% increased Accuracy Rating with Bows/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Accuracy Rating with Claws',
    regex: /(\d+)% increased Accuracy Rating with Claws/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Accuracy Rating with Daggers',
    regex: /(\d+)% increased Accuracy Rating with Daggers/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Accuracy Rating with Maces and Sceptres',
    regex: /(\d+)% increased Accuracy Rating with Maces and Sceptres/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Accuracy Rating with Staves',
    regex: /(\d+)% increased Accuracy Rating with Staves/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Accuracy Rating with Swords',
    regex: /(\d+)% increased Accuracy Rating with Swords/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Accuracy Rating with Wands',
    regex: /(\d+)% increased Accuracy Rating with Wands/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Area Damage',
    regex: /(\d+)% increased Area Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Area of Effect',
    regex: /(\d+)% increased Area of Effect/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Area of Effect if you have Stunned an Enemy Recently',
    regex: /(\d+)% increased Area of Effect if you have Stunned an Enemy Recently/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Armour',
    regex: /(\d+)% increased Armour/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Attack and Cast Speed',
    regex: /(\d+)% increased Attack and Cast Speed/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Attack and Cast Speed during Onslaught',
    regex: /(\d+)% increased Attack and Cast Speed during Onslaught/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Attack and Cast Speed if Corrupted',
    regex: /(\d+)% increased Attack and Cast Speed if Corrupted/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Attack Damage',
    regex: /(\d+)% increased Attack Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Attack Damage against Bleeding Enemies',
    regex: /(\d+)% increased Attack Damage against Bleeding Enemies/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Attack Damage if Corrupted',
    regex: /(\d+)% increased Attack Damage if Corrupted/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Attack Damage per 500 Maximum Mana',
    regex: /(\d+)% increased Attack Damage per 500 Maximum Mana/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Attack Speed',
    regex: /(\d+)% increased Attack Speed/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Attack Speed during any Flask Effect',
    regex: /(\d+)% increased Attack Speed during any Flask Effect/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Attack Speed with Axes',
    regex: /(\d+)% increased Attack Speed with Axes/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Attack Speed with Bows',
    regex: /(\d+)% increased Attack Speed with Bows/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Attack Speed with Claws',
    regex: /(\d+)% increased Attack Speed with Claws/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Attack Speed with Daggers',
    regex: /(\d+)% increased Attack Speed with Daggers/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Attack Speed with Maces and Sceptres',
    regex: /(\d+)% increased Attack Speed with Maces and Sceptres/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Attack Speed with Staves',
    regex: /(\d+)% increased Attack Speed with Staves/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Attack Speed with Swords',
    regex: /(\d+)% increased Attack Speed with Swords/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Attack Speed with Wands',
    regex: /(\d+)% increased Attack Speed with Wands/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Attributes',
    regex: /(\d+)% increased Attributes/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Bleeding Duration',
    regex: /(\d+)% increased Bleeding Duration/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Block Recovery',
    regex: /(\d+)% increased Block Recovery/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Brand Attachment range',
    regex: /(\d+)% increased Brand Attachment range/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Burning Damage',
    regex: /(\d+)% increased Burning Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Cast Speed',
    regex: /(\d+)% increased Cast Speed/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Cast Speed during any Flask Effect',
    regex: /(\d+)% increased Cast Speed during any Flask Effect/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Cast Speed while Dual Wielding',
    regex: /(\d+)% increased Cast Speed while Dual Wielding/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Cast Speed while holding a Shield',
    regex: /(\d+)% increased Cast Speed while holding a Shield/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Cast Speed while wielding a Staff',
    regex: /(\d+)% increased Cast Speed while wielding a Staff/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Chaos Damage',
    regex: /(\d+)% increased Chaos Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Chaos Damage for each Corrupted Item Equipped',
    regex: /(\d+)% increased Chaos Damage for each Corrupted Item Equipped/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Chaos Damage with Attack Skills',
    regex: /(\d+)% increased Chaos Damage with Attack Skills/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Chaos Damage with Spell Skills',
    regex: /(\d+)% increased Chaos Damage with Spell Skills/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Chill Duration on Enemies',
    regex: /(\d+)% increased Chill Duration on Enemies/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Cold Damage',
    regex: /(\d+)% increased Cold Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Cold Damage with Attack Skills',
    regex: /(\d+)% increased Cold Damage with Attack Skills/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Cold Damage with Spell Skills',
    regex: /(\d+)% increased Cold Damage with Spell Skills/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Conductivity Curse Effect',
    regex: /(\d+)% increased Conductivity Curse Effect/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Critical Strike Chance',
    regex: /(\d+)% increased Critical Strike Chance/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Critical Strike Chance during any Flask Effect',
    regex: /(\d+)% increased Critical Strike Chance during any Flask Effect/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Critical Strike Chance for Spells',
    regex: /(\d+)% increased Critical Strike Chance for Spells/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Critical Strike Chance for Spells while Dual Wielding',
    regex: /(\d+)% increased Critical Strike Chance for Spells while Dual Wielding/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Critical Strike Chance for Spells while holding a Shield',
    regex: /(\d+)% increased Critical Strike Chance for Spells while holding a Shield/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Critical Strike Chance for Spells while wielding a Staff',
    regex: /(\d+)% increased Critical Strike Chance for Spells while wielding a Staff/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Damage',
    regex: /(\d+)% increased Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Damage against Abyssal Monsters',
    regex: /(\d+)% increased Damage against Abyssal Monsters/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Damage during any Flask Effect',
    regex: /(\d+)% increased Damage during any Flask Effect/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Damage if Corrupted',
    regex: /(\d+)% increased Damage if Corrupted/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Damage over Time',
    regex: /(\d+)% increased Damage over Time/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Damage per 15 Dexterity',
    regex: /(\d+)% increased Damage per 15 Dexterity/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Damage per 15 Intelligence',
    regex: /(\d+)% increased Damage per 15 Intelligence/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Damage per 15 Strength',
    regex: /(\d+)% increased Damage per 15 Strength/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Damage per Endurance Charge',
    regex: /(\d+)% increased Damage per Endurance Charge/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Damage per Frenzy Charge',
    regex: /(\d+)% increased Damage per Frenzy Charge/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Damage per Power Charge',
    regex: /(\d+)% increased Damage per Power Charge/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Damage while Dead',
    regex: /(\d+)% increased Damage while Dead/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Damage while Leeching',
    regex: /(\d+)% increased Damage while Leeching/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Damage while Leeching Life',
    regex: /(\d+)% increased Damage while Leeching Life/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Damage while Leeching Mana',
    regex: /(\d+)% increased Damage while Leeching Mana/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Damage with Ailments',
    regex: /(\d+)% increased Damage with Ailments/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Damage with Bleeding',
    regex: /(\d+)% increased Damage with Bleeding/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Damage with Poison',
    regex: /(\d+)% increased Damage with Poison/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Dexterity',
    regex: /(\d+)% increased Dexterity/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Effect of Auras on you',
    regex: /(\d+)% increased Effect of Auras on you/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Effect of Chill',
    regex: /(\d+)% increased Effect of Chill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Effect of Fortify on you',
    regex: /(\d+)% increased Effect of Fortify on you/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Effect of non-Damaging Ailments on Enemies',
    regex: /(\d+)% increased Effect of non-Damaging Ailments on Enemies/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Effect of Shock',
    regex: /(\d+)% increased Effect of Shock/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Effect of Socketed Jewels',
    regex: /(\d+)% increased Effect of Socketed Jewels/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Effect of your Curses',
    regex: /(\d+)% increased Effect of your Curses/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Elemental Damage',
    regex: /(\d+)% increased Elemental Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Elemental Damage with Attack Skills',
    regex: /(\d+)% increased Elemental Damage with Attack Skills/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Elemental Weakness Curse Effect',
    regex: /(\d+)% increased Elemental Weakness Curse Effect/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Endurance Charge Duration',
    regex: /(\d+)% increased Endurance Charge Duration/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Endurance, Frenzy and Power Charge Duration',
    regex: /(\d+)% increased Endurance, Frenzy and Power Charge Duration/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Energy Shield',
    regex: /(\d+)% increased Energy Shield/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Energy Shield Recharge Rate',
    regex: /(\d+)% increased Energy Shield Recharge Rate/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Energy Shield Recovery rate',
    regex: /(\d+)% increased Energy Shield Recovery rate/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Evasion Rating',
    regex: /(\d+)% increased Evasion Rating/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Evasion Rating per Frenzy Charge',
    regex: /(\d+)% increased Evasion Rating per Frenzy Charge/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Experience gain',
    regex: /(\d+)% increased Experience gain/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Fire Damage',
    regex: /(\d+)% increased Fire Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Fire Damage per 20 Strength',
    regex: /(\d+)% increased Fire Damage per 20 Strength/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Fire Damage with Attack Skills',
    regex: /(\d+)% increased Fire Damage with Attack Skills/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Fire Damage with Spell Skills',
    regex: /(\d+)% increased Fire Damage with Spell Skills/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Fish Bite Sensitivity',
    regex: /(\d+)% increased Fish Bite Sensitivity/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Flammability Curse Effect',
    regex: /(\d+)% increased Flammability Curse Effect/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Flask Charges gained',
    regex: /(\d+)% increased Flask Charges gained/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Flask Effect Duration',
    regex: /(\d+)% increased Flask Effect Duration/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Freeze Duration on Enemies',
    regex: /(\d+)% increased Freeze Duration on Enemies/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Frenzy Charge Duration',
    regex: /(\d+)% increased Frenzy Charge Duration/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Frostbite Curse Effect',
    regex: /(\d+)% increased Frostbite Curse Effect/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Global Accuracy Rating',
    regex: /(\d+)% increased Global Accuracy Rating/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Global Critical Strike Chance',
    regex: /(\d+)% increased Global Critical Strike Chance/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Global Critical Strike Chance if Corrupted',
    regex: /(\d+)% increased Global Critical Strike Chance if Corrupted/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Global Defences',
    regex: /(\d+)% increased Global Defences/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Global Physical Damage',
    regex: /(\d+)% increased Global Physical Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Ignite Duration on Enemies',
    regex: /(\d+)% increased Ignite Duration on Enemies/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Intelligence',
    regex: /(\d+)% increased Intelligence/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Life Recovery from Flasks',
    regex: /(\d+)% increased Life Recovery from Flasks/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Life Recovery rate',
    regex: /(\d+)% increased Life Recovery rate/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Light Radius',
    regex: /(\d+)% increased Light Radius/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Lightning Damage',
    regex: /(\d+)% increased Lightning Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Lightning Damage with Attack Skills',
    regex: /(\d+)% increased Lightning Damage with Attack Skills/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Lightning Damage with Spell Skills',
    regex: /(\d+)% increased Lightning Damage with Spell Skills/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Mana Recovery rate',
    regex: /(\d+)% increased Mana Recovery rate/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Mana Regeneration Rate',
    regex: /(\d+)% increased Mana Regeneration Rate/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased maximum Energy Shield',
    regex: /(\d+)% increased maximum Energy Shield/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased maximum Energy Shield if Corrupted',
    regex: /(\d+)% increased maximum Energy Shield if Corrupted/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased maximum Life',
    regex: /(\d+)% increased maximum Life/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased maximum Life if Corrupted',
    regex: /(\d+)% increased maximum Life if Corrupted/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased maximum Mana',
    regex: /(\d+)% increased maximum Mana/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Maximum total Recovery per second from Energy Shield Leech',
    regex: /(\d+)% increased Maximum total Recovery per second from Energy Shield Leech/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Maximum total Recovery per second from Life Leech',
    regex: /(\d+)% increased Maximum total Recovery per second from Life Leech/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Maximum total Recovery per second from Mana Leech',
    regex: /(\d+)% increased Maximum total Recovery per second from Mana Leech/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Melee Damage',
    regex: /(\d+)% increased Melee Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Mine Throwing Speed',
    regex: /(\d+)% increased Mine Throwing Speed/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Minion Accuracy Rating',
    regex: /(\d+)% increased Minion Accuracy Rating/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Movement Speed',
    regex: /(\d+)% increased Movement Speed/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Movement Speed during any Flask Effect',
    regex: /(\d+)% increased Movement Speed during any Flask Effect/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Movement Speed if Corrupted',
    regex: /(\d+)% increased Movement Speed if Corrupted/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Movement Speed while Phasing',
    regex: /(\d+)% increased Movement Speed while Phasing/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Physical Damage',
    regex: /(\d+)% increased Physical Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Physical Damage while you have Unholy Might',
    regex: /(\d+)% increased Physical Damage while you have Unholy Might/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Physical Damage with Attack Skills',
    regex: /(\d+)% increased Physical Damage with Attack Skills/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Physical Damage with Axes',
    regex: /(\d+)% increased Physical Damage with Axes/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Physical Damage with Bows',
    regex: /(\d+)% increased Physical Damage with Bows/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Physical Damage with Claws',
    regex: /(\d+)% increased Physical Damage with Claws/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Physical Damage with Daggers',
    regex: /(\d+)% increased Physical Damage with Daggers/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Physical Damage with Maces and Sceptres',
    regex: /(\d+)% increased Physical Damage with Maces and Sceptres/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Physical Damage with Spell Skills',
    regex: /(\d+)% increased Physical Damage with Spell Skills/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Physical Damage with Staves',
    regex: /(\d+)% increased Physical Damage with Staves/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Physical Damage with Swords',
    regex: /(\d+)% increased Physical Damage with Swords/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Physical Damage with Wands',
    regex: /(\d+)% increased Physical Damage with Wands/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Poison Duration',
    regex: /(\d+)% increased Poison Duration/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Power Charge Duration',
    regex: /(\d+)% increased Power Charge Duration/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Projectile Attack Damage',
    regex: /(\d+)% increased Projectile Attack Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Projectile Damage',
    regex: /(\d+)% increased Projectile Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Projectile Speed',
    regex: /(\d+)% increased Projectile Speed/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Quantity of Fish Caught',
    regex: /(\d+)% increased Quantity of Fish Caught/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Quantity of Items found',
    regex: /(\d+)% increased Quantity of Items found/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Rarity of Fish Caught',
    regex: /(\d+)% increased Rarity of Fish Caught/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Rarity of Items found',
    regex: /(\d+)% increased Rarity of Items found/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Shock Duration on Enemies',
    regex: /(\d+)% increased Shock Duration on Enemies/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Skill Effect Duration',
    regex: /(\d+)% increased Skill Effect Duration/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Spell Damage',
    regex: /(\d+)% increased Spell Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Spell Damage if Corrupted',
    regex: /(\d+)% increased Spell Damage if Corrupted/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Spell Damage per 10 Intelligence',
    regex: /(\d+)% increased Spell Damage per 10 Intelligence/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Spell Damage per 10 Strength',
    regex: /(\d+)% increased Spell Damage per 10 Strength/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Spell Damage per 16 Dexterity',
    regex: /(\d+)% increased Spell Damage per 16 Dexterity/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Spell Damage per 16 Intelligence',
    regex: /(\d+)% increased Spell Damage per 16 Intelligence/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Spell Damage per 16 Strength',
    regex: /(\d+)% increased Spell Damage per 16 Strength/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Spell Damage per 500 Maximum Mana',
    regex: /(\d+)% increased Spell Damage per 500 Maximum Mana/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Spell Damage per Power Charge',
    regex: /(\d+)% increased Spell Damage per Power Charge/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Spell Damage while Dual Wielding',
    regex: /(\d+)% increased Spell Damage while Dual Wielding/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Spell Damage while holding a Shield',
    regex: /(\d+)% increased Spell Damage while holding a Shield/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Spell Damage while wielding a Staff',
    regex: /(\d+)% increased Spell Damage while wielding a Staff/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Strength',
    regex: /(\d+)% increased Strength/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Stun and Block Recovery',
    regex: /(\d+)% increased Stun and Block Recovery/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Stun Duration on Enemies',
    regex: /(\d+)% increased Stun Duration on Enemies/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased total Recovery per second from Life Leech',
    regex: /(\d+)% increased total Recovery per second from Life Leech/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased total Recovery per second from Life Leech for each Corrupted Item Equipped',
    regex: /(\d+)% increased total Recovery per second from Life Leech for each Corrupted Item Equipped/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased total Recovery per second from Mana Leech',
    regex: /(\d+)% increased total Recovery per second from Mana Leech/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased total Recovery per second from Mana Leech for each Corrupted Item Equipped',
    regex: /(\d+)% increased total Recovery per second from Mana Leech for each Corrupted Item Equipped/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Totem Placement speed',
    regex: /(\d+)% increased Totem Placement speed/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Trap Throwing Speed',
    regex: /(\d+)% increased Trap Throwing Speed/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Vaal Skill Critical Strike Chance',
    regex: /(\d+)% increased Vaal Skill Critical Strike Chance/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Vaal Skill Effect Duration',
    regex: /(\d+)% increased Vaal Skill Effect Duration/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% increased Vulnerability Curse Effect',
    regex: /(\d+)% increased Vulnerability Curse Effect/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% of Attack Damage Leeched as Life',
    regex: /(\d+)% of Attack Damage Leeched as Life/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% of Attack Damage Leeched as Mana',
    regex: /(\d+)% of Attack Damage Leeched as Mana/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% of Chaos Damage Leeched as Life',
    regex: /(\d+)% of Chaos Damage Leeched as Life/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% of Cold Damage from Hits taken as Fire Damage',
    regex: /(\d+)% of Cold Damage from Hits taken as Fire Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% of Cold Damage from Hits taken as Lightning Damage',
    regex: /(\d+)% of Cold Damage from Hits taken as Lightning Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% of Cold Damage Leeched as Life',
    regex: /(\d+)% of Cold Damage Leeched as Life/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% of Damage is taken from Mana before Life',
    regex: /(\d+)% of Damage is taken from Mana before Life/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% of Damage taken gained as Mana over 4 seconds when Hit',
    regex: /(\d+)% of Damage taken gained as Mana over 4 seconds when Hit/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% of Elemental Damage Leeched as Life',
    regex: /(\d+)% of Elemental Damage Leeched as Life/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% of Fire Damage from Hits taken as Cold Damage',
    regex: /(\d+)% of Fire Damage from Hits taken as Cold Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% of Fire Damage from Hits taken as Lightning Damage',
    regex: /(\d+)% of Fire Damage from Hits taken as Lightning Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% of Fire Damage Leeched as Life',
    regex: /(\d+)% of Fire Damage Leeched as Life/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% of Lightning Damage from Hits taken as Cold Damage',
    regex: /(\d+)% of Lightning Damage from Hits taken as Cold Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% of Lightning Damage from Hits taken as Fire Damage',
    regex: /(\d+)% of Lightning Damage from Hits taken as Fire Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% of Lightning Damage Leeched as Life',
    regex: /(\d+)% of Lightning Damage Leeched as Life/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% of Physical Attack Damage Leeched as Life',
    regex: /(\d+)% of Physical Attack Damage Leeched as Life/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% of Physical Attack Damage Leeched as Life and Mana',
    regex: /(\d+)% of Physical Attack Damage Leeched as Life and Mana/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% of Physical Attack Damage Leeched as Mana',
    regex: /(\d+)% of Physical Attack Damage Leeched as Mana/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% of Physical Damage Converted to Chaos Damage',
    regex: /(\d+)% of Physical Damage Converted to Chaos Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% of Physical Damage Converted to Cold Damage',
    regex: /(\d+)% of Physical Damage Converted to Cold Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% of Physical Damage Converted to Fire Damage',
    regex: /(\d+)% of Physical Damage Converted to Fire Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% of Physical Damage Converted to Lightning Damage',
    regex: /(\d+)% of Physical Damage Converted to Lightning Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% of Physical Damage from Hits taken as Chaos Damage',
    regex: /(\d+)% of Physical Damage from Hits taken as Chaos Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% of Physical Damage from Hits taken as Cold Damage',
    regex: /(\d+)% of Physical Damage from Hits taken as Cold Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% of Physical Damage from Hits taken as Fire Damage',
    regex: /(\d+)% of Physical Damage from Hits taken as Fire Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% of Physical Damage from Hits taken as Lightning Damage',
    regex: /(\d+)% of Physical Damage from Hits taken as Lightning Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% of Physical Damage is taken from Mana before Life',
    regex: /(\d+)% of Physical Damage is taken from Mana before Life/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% of Physical Damage Leeched as Life',
    regex: /(\d+)% of Physical Damage Leeched as Life/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% of Spell Damage Leeched as Energy Shield',
    regex: /(\d+)% of Spell Damage Leeched as Energy Shield/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% reduced Area Damage taken from Hits',
    regex: /(\d+)% reduced Area Damage taken from Hits/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% reduced Chaos Damage taken',
    regex: /(\d+)% reduced Chaos Damage taken/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% reduced Character Size',
    regex: /(\d+)% reduced Character Size/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% reduced Chill Duration on you',
    regex: /(\d+)% reduced Chill Duration on you/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% reduced Cold Damage taken',
    regex: /(\d+)% reduced Cold Damage taken/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% reduced Damage taken',
    regex: /(\d+)% reduced Damage taken/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% reduced Damage taken from Damage Over Time',
    regex: /(\d+)% reduced Damage taken from Damage Over Time/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% reduced Damage taken from Projectiles',
    regex: /(\d+)% reduced Damage taken from Projectiles/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% reduced Damage taken if Corrupted',
    regex: /(\d+)% reduced Damage taken if Corrupted/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% reduced Damage taken per 250 Dexterity',
    regex: /(\d+)% reduced Damage taken per 250 Dexterity/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% reduced Damage taken per 250 Intelligence',
    regex: /(\d+)% reduced Damage taken per 250 Intelligence/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% reduced Damage taken per 250 Strength',
    regex: /(\d+)% reduced Damage taken per 250 Strength/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% reduced Elemental Ailment Duration on you',
    regex: /(\d+)% reduced Elemental Ailment Duration on you/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% reduced Enemy Stun Threshold',
    regex: /(\d+)% reduced Enemy Stun Threshold/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% reduced Fire Damage taken',
    regex: /(\d+)% reduced Fire Damage taken/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% reduced Flask Charges used',
    regex: /(\d+)% reduced Flask Charges used/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% reduced Freeze Duration on you',
    regex: /(\d+)% reduced Freeze Duration on you/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% reduced Ignite Duration on you',
    regex: /(\d+)% reduced Ignite Duration on you/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% reduced Lightning Damage taken',
    regex: /(\d+)% reduced Lightning Damage taken/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% reduced Mana Cost of Skills',
    regex: /(\d+)% reduced Mana Cost of Skills/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% reduced Mana Reserved',
    regex: /(\d+)% reduced Mana Reserved/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% reduced Reflected Damage taken',
    regex: /(\d+)% reduced Reflected Damage taken/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '#% reduced Shock Duration on you',
    regex: /(\d+)% reduced Shock Duration on you/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# Armour while stationary',
    regex: /\+(\d+) Armour while stationary/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# Energy Shield gained for each Enemy hit by your Attacks',
    regex: /\+(\d+) Energy Shield gained for each Enemy hit by your Attacks/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# Life and Mana gained for each Enemy hit',
    regex: /\+(\d+) Life and Mana gained for each Enemy hit/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# Life gained for each Enemy hit by Attacks',
    regex: /\+(\d+) Life gained for each Enemy hit by Attacks/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# Life gained for each Enemy hit by your Attacks',
    regex: /\+(\d+) Life gained for each Enemy hit by your Attacks/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# Life gained on Kill',
    regex: /\+(\d+) Life gained on Kill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# Life gained when you Block',
    regex: /\+(\d+) Life gained when you Block/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# Mana gained for each Enemy hit by Attacks',
    regex: /\+(\d+) Mana gained for each Enemy hit by Attacks/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# Mana gained for each Enemy hit by your Attacks',
    regex: /\+(\d+) Mana gained for each Enemy hit by your Attacks/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# Mana gained on Kill',
    regex: /\+(\d+) Mana gained on Kill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# Mana gained when you Block',
    regex: /\+(\d+) Mana gained when you Block/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Accuracy Rating',
    regex: /\+(\d+) to Accuracy Rating/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to all Attributes',
    regex: /\+(\d+) to all Attributes/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Armour',
    regex: /\+(\d+) to Armour/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Armour and Evasion Rating',
    regex: /\+(\d+) to Armour and Evasion Rating/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Armour and Evasion Rating while you have Fortify',
    regex: /\+(\d+) to Armour and Evasion Rating while you have Fortify/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Dexterity',
    regex: /\+(\d+) to Dexterity/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Dexterity and Intelligence',
    regex: /\+(\d+) to Dexterity and Intelligence/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Evasion Rating',
    regex: /\+(\d+) to Evasion Rating/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Global Evasion Rating while moving',
    regex: /\+(\d+) to Global Evasion Rating while moving/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Intelligence',
    regex: /\+(\d+) to Intelligence/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Level of Socketed AoE Gems',
    regex: /\+(\d+) to Level of Socketed AoE Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Level of Socketed Aura Gems',
    regex: /\+(\d+) to Level of Socketed Aura Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Level of Socketed Bow Gems',
    regex: /\+(\d+) to Level of Socketed Bow Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Level of Socketed Chaos Gems',
    regex: /\+(\d+) to Level of Socketed Chaos Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Level of Socketed Cold Gems',
    regex: /\+(\d+) to Level of Socketed Cold Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Level of Socketed Curse Gems',
    regex: /\+(\d+) to Level of Socketed Curse Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Level of Socketed Dexterity Gems',
    regex: /\+(\d+) to Level of Socketed Dexterity Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Level of Socketed Duration Gems',
    regex: /\+(\d+) to Level of Socketed Duration Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Level of Socketed Fire Gems',
    regex: /\+(\d+) to Level of Socketed Fire Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Level of Socketed Gems',
    regex: /\+(\d+) to Level of Socketed Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Level of Socketed Intelligence Gems',
    regex: /\+(\d+) to Level of Socketed Intelligence Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Level of Socketed Lightning Gems',
    regex: /\+(\d+) to Level of Socketed Lightning Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Level of Socketed Melee Gems',
    regex: /\+(\d+) to Level of Socketed Melee Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Level of Socketed Minion Gems',
    regex: /\+(\d+) to Level of Socketed Minion Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Level of Socketed Projectile Gems',
    regex: /\+(\d+) to Level of Socketed Projectile Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Level of Socketed Strength Gems',
    regex: /\+(\d+) to Level of Socketed Strength Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Level of Socketed Support Gems',
    regex: /\+(\d+) to Level of Socketed Support Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Level of Socketed Trap or Mine Gems',
    regex: /\+(\d+) to Level of Socketed Trap or Mine Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Level of Socketed Vaal Gems',
    regex: /\+(\d+) to Level of Socketed Vaal Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Level of Socketed Warcry Gems',
    regex: /\+(\d+) to Level of Socketed Warcry Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Maximum Endurance Charges',
    regex: /\+(\d+) to Maximum Endurance Charges/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to maximum Energy Shield',
    regex: /\+(\d+) to maximum Energy Shield/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Maximum Frenzy Charges',
    regex: /\+(\d+) to Maximum Frenzy Charges/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to maximum Life',
    regex: /\+(\d+) to maximum Life/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to maximum Mana',
    regex: /\+(\d+) to maximum Mana/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to maximum number of Raised Zombies',
    regex: /\+(\d+) to maximum number of Raised Zombies/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Maximum Power Charges',
    regex: /\+(\d+) to Maximum Power Charges/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Melee Weapon and Unarmed Attack range',
    regex: /\+(\d+) to Melee Weapon and Unarmed Attack range/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Minimum Endurance Charges',
    regex: /\+(\d+) to Minimum Endurance Charges/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Minimum Frenzy Charges',
    regex: /\+(\d+) to Minimum Frenzy Charges/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Minimum Power Charges',
    regex: /\+(\d+) to Minimum Power Charges/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Strength',
    regex: /\+(\d+) to Strength/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Strength and Dexterity',
    regex: /\+(\d+) to Strength and Dexterity/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Strength and Intelligence',
    regex: /\+(\d+) to Strength and Intelligence/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+# to Weapon range',
    regex: /\+(\d+) to Weapon range/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% Chance to Block',
    regex: /\+(\d+)% Chance to Block/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% Chance to Block Attack Damage',
    regex: /\+(\d+)% Chance to Block Attack Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% Chance to Block Attack Damage while Dual Wielding',
    regex: /\+(\d+)% Chance to Block Attack Damage while Dual Wielding/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% Chance to Block Attack Damage while wielding a Staff',
    regex: /\+(\d+)% Chance to Block Attack Damage while wielding a Staff/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% chance to Evade Attacks',
    regex: /\+(\d+)% chance to Evade Attacks/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% chance to Evade Attacks while affected by Grace',
    regex: /\+(\d+)% chance to Evade Attacks while affected by Grace/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to all Elemental Resistances',
    regex: /\+(\d+)% to all Elemental Resistances/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to all Elemental Resistances if Corrupted',
    regex: /\+(\d+)% to all Elemental Resistances if Corrupted/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to all maximum Resistances',
    regex: /\+(\d+)% to all maximum Resistances/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Animated Guardian Elemental Resistances',
    regex: /\+(\d+)% to Animated Guardian Elemental Resistances/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Chaos Damage over Time Multiplier',
    regex: /\+(\d+)% to Chaos Damage over Time Multiplier/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Chaos Resistance',
    regex: /\+(\d+)% to Chaos Resistance/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Cold and Lightning Resistances',
    regex: /\+(\d+)% to Cold and Lightning Resistances/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Cold Damage over Time Multiplier',
    regex: /\+(\d+)% to Cold Damage over Time Multiplier/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Cold Resistance',
    regex: /\+(\d+)% to Cold Resistance/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier during any Flask Effect',
    regex: /\+(\d+)% to Critical Strike Multiplier during any Flask Effect/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier for Spells while Dual Wielding',
    regex: /\+(\d+)% to Critical Strike Multiplier for Spells while Dual Wielding/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier for Spells while holding a Shield',
    regex: /\+(\d+)% to Critical Strike Multiplier for Spells while holding a Shield/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier for Spells while wielding a Staff',
    regex: /\+(\d+)% to Critical Strike Multiplier for Spells while wielding a Staff/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier with Axes',
    regex: /\+(\d+)% to Critical Strike Multiplier with Axes/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier with Bows',
    regex: /\+(\d+)% to Critical Strike Multiplier with Bows/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier with Claws',
    regex: /\+(\d+)% to Critical Strike Multiplier with Claws/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier with Daggers',
    regex: /\+(\d+)% to Critical Strike Multiplier with Daggers/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier with Maces and Sceptres',
    regex: /\+(\d+)% to Critical Strike Multiplier with Maces and Sceptres/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier with Staves',
    regex: /\+(\d+)% to Critical Strike Multiplier with Staves/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier with Swords',
    regex: /\+(\d+)% to Critical Strike Multiplier with Swords/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Critical Strike Multiplier with Wands',
    regex: /\+(\d+)% to Critical Strike Multiplier with Wands/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Fire and Cold Resistances',
    regex: /\+(\d+)% to Fire and Cold Resistances/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Fire and Lightning Resistances',
    regex: /\+(\d+)% to Fire and Lightning Resistances/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Fire Resistance',
    regex: /\+(\d+)% to Fire Resistance/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Global Critical Strike Multiplier',
    regex: /\+(\d+)% to Global Critical Strike Multiplier/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Lightning Resistance',
    regex: /\+(\d+)% to Lightning Resistance/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to maximum Chance to Block Attack Damage',
    regex: /\+(\d+)% to maximum Chance to Block Attack Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to maximum Chance to Block Spell Damage',
    regex: /\+(\d+)% to maximum Chance to Block Spell Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to maximum Chance to Dodge Attack Hits',
    regex: /\+(\d+)% to maximum Chance to Dodge Attack Hits/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to maximum Chance to Dodge Spell Hits',
    regex: /\+(\d+)% to maximum Chance to Dodge Spell Hits/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to maximum Chaos Resistance',
    regex: /\+(\d+)% to maximum Chaos Resistance/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to maximum Cold Resistance',
    regex: /\+(\d+)% to maximum Cold Resistance/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to maximum Fire Resistance',
    regex: /\+(\d+)% to maximum Fire Resistance/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to maximum Lightning Resistance',
    regex: /\+(\d+)% to maximum Lightning Resistance/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Quality of Socketed AoE Gems',
    regex: /\+(\d+)% to Quality of Socketed AoE Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Quality of Socketed Aura Gems',
    regex: /\+(\d+)% to Quality of Socketed Aura Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Quality of Socketed Bow Gems',
    regex: /\+(\d+)% to Quality of Socketed Bow Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Quality of Socketed Chaos Gems',
    regex: /\+(\d+)% to Quality of Socketed Chaos Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Quality of Socketed Cold Gems',
    regex: /\+(\d+)% to Quality of Socketed Cold Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Quality of Socketed Dexterity Gems',
    regex: /\+(\d+)% to Quality of Socketed Dexterity Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Quality of Socketed Fire Gems',
    regex: /\+(\d+)% to Quality of Socketed Fire Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Quality of Socketed Gems',
    regex: /\+(\d+)% to Quality of Socketed Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Quality of Socketed Intelligence Gems',
    regex: /\+(\d+)% to Quality of Socketed Intelligence Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Quality of Socketed Lightning Gems',
    regex: /\+(\d+)% to Quality of Socketed Lightning Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Quality of Socketed Melee Gems',
    regex: /\+(\d+)% to Quality of Socketed Melee Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Quality of Socketed Minion Gems',
    regex: /\+(\d+)% to Quality of Socketed Minion Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Quality of Socketed Projectile Gems',
    regex: /\+(\d+)% to Quality of Socketed Projectile Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Quality of Socketed Strength Gems',
    regex: /\+(\d+)% to Quality of Socketed Strength Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '+#% to Quality of Socketed Support Gems',
    regex: /\+(\d+)% to Quality of Socketed Support Gems/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '-# Chaos Damage taken',
    regex: /-(\d+) Chaos Damage taken/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: '-# to Total Mana Cost of Skills',
    regex: /-(\d+) to Total Mana Cost of Skills/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Adds # to # Chaos Damage',
    regex: /Adds (\d+) to (\d+) Chaos Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Adds # to # Chaos Damage to Attacks',
    regex: /Adds (\d+) to (\d+) Chaos Damage to Attacks/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Adds # to # Cold Damage',
    regex: /Adds (\d+) to (\d+) Cold Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Adds # to # Cold Damage to Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Attacks/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Adds # to # Cold Damage to Attacks with this Weapon per 10 Dexterity',
    regex: /Adds (\d+) to (\d+) Cold Damage to Attacks with this Weapon per 10 Dexterity/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Adds # to # Cold Damage to Bow Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Bow Attacks/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Adds # to # Cold Damage to Spells',
    regex: /Adds (\d+) to (\d+) Cold Damage to Spells/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Adds # to # Cold Damage to Spells and Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Spells and Attacks/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Adds # to # Fire Damage',
    regex: /Adds (\d+) to (\d+) Fire Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Adds # to # Fire Damage to Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Attacks/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Adds # to # Fire Damage to Attacks with this Weapon per 10 Strength',
    regex: /Adds (\d+) to (\d+) Fire Damage to Attacks with this Weapon per 10 Strength/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Adds # to # Fire Damage to Bow Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Bow Attacks/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Adds # to # Fire Damage to Spells',
    regex: /Adds (\d+) to (\d+) Fire Damage to Spells/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Adds # to # Fire Damage to Spells and Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Spells and Attacks/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Adds # to # Lightning Damage',
    regex: /Adds (\d+) to (\d+) Lightning Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Adds # to # Lightning Damage to Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Attacks/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Adds # to # Lightning Damage to Attacks with this Weapon per 10 Intelligence',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Attacks with this Weapon per 10 Intelligence/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Adds # to # Lightning Damage to Bow Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Bow Attacks/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Adds # to # Lightning Damage to Spells',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Spells/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Adds # to # Lightning Damage to Spells and Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Spells and Attacks/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Adds # to # Physical Damage',
    regex: /Adds (\d+) to (\d+) Physical Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Adds # to # Physical Damage to Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Attacks/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Adds # to # Physical Damage to Bow Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Bow Attacks/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Anger has #% increased Aura Effect',
    regex: /Anger has (\d+)% increased Aura Effect/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Arrows Pierce # additional Targets',
    regex: /Arrows Pierce (\d+) additional Targets/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Arrows Pierce an additional Target',
    regex: /Arrows Pierce an additional Target/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Attacks have #% chance to cause Bleeding',
    regex: /Attacks have (\d+)% chance to cause Bleeding/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Attacks have +#% to Critical Strike Chance',
    regex: /Attacks have \+(\d+)% to Critical Strike Chance/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Attacks with this Weapon Penetrate #% Elemental Resistances',
    regex: /Attacks with this Weapon Penetrate (\d+)% Elemental Resistances/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Bleeding cannot be inflicted on you',
    regex: /Bleeding cannot be inflicted on you/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Bleeding you inflict deals Damage #% faster',
    regex: /Bleeding you inflict deals Damage (\d+)% faster/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Bow Attacks fire an additional Arrow',
    regex: /Bow Attacks fire an additional Arrow/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Can have up to # additional Trap placed at a time',
    regex: /Can have up to (\d+) additional Trap placed at a time/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Can roll Minion Modifiers',
    regex: /Can roll Minion Modifiers/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Cannot be Blinded',
    regex: /Cannot be Blinded/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Cannot be Frozen',
    regex: /Cannot be Frozen/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Cannot be Ignited',
    regex: /Cannot be Ignited/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Cannot be Knocked Back',
    regex: /Cannot be Knocked Back/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Cannot be Poisoned',
    regex: /Cannot be Poisoned/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Cannot be Shocked',
    regex: /Cannot be Shocked/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Causes Bleeding on Hit',
    regex: /Causes Bleeding on Hit/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Corrupted Blood cannot be inflicted on you',
    regex: /Corrupted Blood cannot be inflicted on you/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Culling Strike',
    regex: /Culling Strike/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Curse Enemies with Level # Conductivity on Hit',
    regex: /Curse Enemies with Level (\d+) Conductivity on Hit/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Curse Enemies with Level # Despair on Hit',
    regex: /Curse Enemies with Level (\d+) Despair on Hit/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Curse Enemies with Level # Elemental Weakness on Hit',
    regex: /Curse Enemies with Level (\d+) Elemental Weakness on Hit/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Curse Enemies with Level # Enfeeble on Hit',
    regex: /Curse Enemies with Level (\d+) Enfeeble on Hit/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Curse Enemies with Level # Flammability on Hit',
    regex: /Curse Enemies with Level (\d+) Flammability on Hit/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Curse Enemies with Level # Frostbite on Hit',
    regex: /Curse Enemies with Level (\d+) Frostbite on Hit/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Curse Enemies with Level # Temporal Chains on Hit',
    regex: /Curse Enemies with Level (\d+) Temporal Chains on Hit/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Curse Enemies with Level # Vulnerability on Hit',
    regex: /Curse Enemies with Level (\d+) Vulnerability on Hit/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Curse Skills have #% increased Skill Effect Duration',
    regex: /Curse Skills have (\d+)% increased Skill Effect Duration/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Damage Penetrates #% Cold Resistance',
    regex: /Damage Penetrates (\d+)% Cold Resistance/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Damage Penetrates #% Elemental Resistances',
    regex: /Damage Penetrates (\d+)% Elemental Resistances/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Damage Penetrates #% Fire Resistance',
    regex: /Damage Penetrates (\d+)% Fire Resistance/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Damage Penetrates #% Lightning Resistance',
    regex: /Damage Penetrates (\d+)% Lightning Resistance/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Damage with Weapons Penetrates #% Cold Resistance',
    regex: /Damage with Weapons Penetrates (\d+)% Cold Resistance/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Damage with Weapons Penetrates #% Fire Resistance',
    regex: /Damage with Weapons Penetrates (\d+)% Fire Resistance/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Damage with Weapons Penetrates #% Lightning Resistance',
    regex: /Damage with Weapons Penetrates (\d+)% Lightning Resistance/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Determination has #% increased Aura Effect',
    regex: /Determination has (\d+)% increased Aura Effect/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Determination has #% reduced Mana Reservation',
    regex: /Determination has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Discipline has #% increased Aura Effect',
    regex: /Discipline has (\d+)% increased Aura Effect/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Discipline has #% reduced Mana Reservation',
    regex: /Discipline has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Enemies Cannot Leech Life From you',
    regex: /Enemies Cannot Leech Life From you/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Gain #% of Cold Damage as Extra Chaos Damage',
    regex: /Gain (\d+)% of Cold Damage as Extra Chaos Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Gain #% of Fire Damage as Extra Chaos Damage',
    regex: /Gain (\d+)% of Fire Damage as Extra Chaos Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Gain #% of Lightning Damage as Extra Chaos Damage',
    regex: /Gain (\d+)% of Lightning Damage as Extra Chaos Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Gain #% of Maximum Life as Extra Maximum Energy Shield',
    regex: /Gain (\d+)% of Maximum Life as Extra Maximum Energy Shield/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Gain #% of Physical Damage as Extra Chaos Damage',
    regex: /Gain (\d+)% of Physical Damage as Extra Chaos Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Gain #% of Physical Damage as Extra Cold Damage',
    regex: /Gain (\d+)% of Physical Damage as Extra Cold Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Gain #% of Physical Damage as Extra Damage of a random Element',
    regex: /Gain (\d+)% of Physical Damage as Extra Damage of a random Element/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Gain #% of Physical Damage as Extra Fire Damage',
    regex: /Gain (\d+)% of Physical Damage as Extra Fire Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Gain #% of Physical Damage as Extra Lightning Damage',
    regex: /Gain (\d+)% of Physical Damage as Extra Lightning Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Gain a Frenzy Charge after Spending a total of 200 Mana',
    regex: /Gain a Frenzy Charge after Spending a total of 200 Mana/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Gain an Endurance Charge every second if you\'ve been Hit Recently',
    regex: /Gain an Endurance Charge every second if you've been Hit Recently/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Gain Arcane Surge on Hit with Spells',
    regex: /Gain Arcane Surge on Hit with Spells/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Grace has #% increased Aura Effect',
    regex: /Grace has (\d+)% increased Aura Effect/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Grace has #% reduced Mana Reservation',
    regex: /Grace has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Grants Level # Anger Skill',
    regex: /Grants Level (\d+) Anger Skill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Grants Level # Assassin\'s Mark Skill',
    regex: /Grants Level (\d+) Assassin's Mark Skill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Grants Level # Clarity Skill',
    regex: /Grants Level (\d+) Clarity Skill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Grants Level # Conductivity Skill',
    regex: /Grants Level (\d+) Conductivity Skill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Grants Level # Despair Skill',
    regex: /Grants Level (\d+) Despair Skill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Grants Level # Determination Skill',
    regex: /Grants Level (\d+) Determination Skill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Grants Level # Discipline Skill',
    regex: /Grants Level (\d+) Discipline Skill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Grants Level # Elemental Weakness Skill',
    regex: /Grants Level (\d+) Elemental Weakness Skill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Grants Level # Flammability Skill',
    regex: /Grants Level (\d+) Flammability Skill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Grants Level # Frostbite Skill',
    regex: /Grants Level (\d+) Frostbite Skill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Grants Level # Grace Skill',
    regex: /Grants Level (\d+) Grace Skill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Grants Level # Haste Skill',
    regex: /Grants Level (\d+) Haste Skill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Grants Level # Hatred Skill',
    regex: /Grants Level (\d+) Hatred Skill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Grants Level # Malevolence Skill',
    regex: /Grants Level (\d+) Malevolence Skill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Grants Level # Pride Skill',
    regex: /Grants Level (\d+) Pride Skill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Grants Level # Projectile Weakness Skill',
    regex: /Grants Level (\d+) Projectile Weakness Skill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Grants Level # Purity of Elements Skill',
    regex: /Grants Level (\d+) Purity of Elements Skill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Grants Level # Purity of Fire Skill',
    regex: /Grants Level (\d+) Purity of Fire Skill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Grants Level # Purity of Ice Skill',
    regex: /Grants Level (\d+) Purity of Ice Skill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Grants Level # Purity of Lightning Skill',
    regex: /Grants Level (\d+) Purity of Lightning Skill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Grants Level # Temporal Chains Skill',
    regex: /Grants Level (\d+) Temporal Chains Skill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Grants Level # Vitality Skill',
    regex: /Grants Level (\d+) Vitality Skill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Grants Level # Vulnerability Skill',
    regex: /Grants Level (\d+) Vulnerability Skill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Grants Level # Wrath Skill',
    regex: /Grants Level (\d+) Wrath Skill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Grants Level # Zealotry Skill',
    regex: /Grants Level (\d+) Zealotry Skill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Has 1 Abyssal Socket',
    regex: /Has 1 Abyssal Socket/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Has 1 Socket',
    regex: /Has 1 Socket/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Hatred has #% increased Aura Effect',
    regex: /Hatred has (\d+)% increased Aura Effect/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Hits have #% increased Critical Strike Chance against you',
    regex: /Hits have (\d+)% increased Critical Strike Chance against you/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Ignites you inflict deal Damage #% faster',
    regex: /Ignites you inflict deal Damage (\d+)% faster/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Immune to Curses if Corrupted',
    regex: /Immune to Curses if Corrupted/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Implicit Modifier magnitudes are doubled',
    regex: /Implicit Modifier magnitudes are doubled/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Implicit Modifier magnitudes are tripled',
    regex: /Implicit Modifier magnitudes are tripled/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Increases and Reductions to Damage of Vaal Skills also apply to Non-Vaal Skills',
    regex: /Increases and Reductions to Damage of Vaal Skills also apply to Non-Vaal Skills/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Intimidate Enemies for 4 seconds on Hit with Attacks',
    regex: /Intimidate Enemies for 4 seconds on Hit with Attacks/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Item drops on Death if Equipped by an Animated Guardian',
    regex: /Item drops on Death if Equipped by an Animated Guardian/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Killed Enemies Explode, dealing #% of their Life as Physical Damage',
    regex: /Killed Enemies Explode, dealing (\d+)% of their Life as Physical Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Malevolence has #% increased Aura Effect',
    regex: /Malevolence has (\d+)% increased Aura Effect/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Minions deal #% increased Damage',
    regex: /Minions deal (\d+)% increased Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Minions have #% increased Attack Speed',
    regex: /Minions have (\d+)% increased Attack Speed/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Minions have #% increased Cast Speed',
    regex: /Minions have (\d+)% increased Cast Speed/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Minions have #% increased maximum Life',
    regex: /Minions have (\d+)% increased maximum Life/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Minions have #% increased Movement Speed',
    regex: /Minions have (\d+)% increased Movement Speed/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Minions have +#% to all Elemental Resistances',
    regex: /Minions have \+(\d+)% to all Elemental Resistances/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Minions Regenerate #% of Life per second',
    regex: /Minions Regenerate (\d+)% of Life per second/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Onslaught',
    regex: /Onslaught/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Point Blank',
    regex: /Point Blank/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Poisons you inflict deal Damage #% faster',
    regex: /Poisons you inflict deal Damage (\d+)% faster/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Pride has #% increased Aura Effect',
    regex: /Pride has (\d+)% increased Aura Effect/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Projectiles deal #% increased Damage for each Enemy Pierced',
    regex: /Projectiles deal (\d+)% increased Damage for each Enemy Pierced/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Projectiles deal #% increased Damage for each time they have Chained',
    regex: /Projectiles deal (\d+)% increased Damage for each time they have Chained/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Projectiles Pierce # additional Targets',
    regex: /Projectiles Pierce (\d+) additional Targets/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Properties are doubled while in a Breach',
    regex: /Properties are doubled while in a Breach/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Purity of Fire has #% reduced Mana Reservation',
    regex: /Purity of Fire has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Purity of Ice has #% reduced Mana Reservation',
    regex: /Purity of Ice has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Purity of Lightning has #% reduced Mana Reservation',
    regex: /Purity of Lightning has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Raised Zombies deal #% increased Damage',
    regex: /Raised Zombies deal (\d+)% increased Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Recover #% of Energy Shield when you Block',
    regex: /Recover (\d+)% of Energy Shield when you Block/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Recover #% of Life on Kill',
    regex: /Recover (\d+)% of Life on Kill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Recover #% of Life when you Block',
    regex: /Recover (\d+)% of Life when you Block/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Recover #% of Mana on Kill',
    regex: /Recover (\d+)% of Mana on Kill/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Recover #% of your maximum Mana when you Block',
    regex: /Recover (\d+)% of your maximum Mana when you Block/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Reflects # Physical Damage to Melee Attackers',
    regex: /Reflects (\d+) Physical Damage to Melee Attackers/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Regenerate # Life per second',
    regex: /Regenerate (\d+) Life per second/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Regenerate # Life per second while moving',
    regex: /Regenerate (\d+) Life per second while moving/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Regenerate # Mana per second',
    regex: /Regenerate (\d+) Mana per second/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Regenerate # Mana per Second while Dual Wielding',
    regex: /Regenerate (\d+) Mana per Second while Dual Wielding/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Regenerate # Mana per Second while holding a Shield',
    regex: /Regenerate (\d+) Mana per Second while holding a Shield/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Regenerate # Mana per second while wielding a Staff',
    regex: /Regenerate (\d+) Mana per second while wielding a Staff/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Regenerate #% of Energy Shield per second',
    regex: /Regenerate (\d+)% of Energy Shield per second/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Regenerate #% of Energy Shield per Second while affected by Discipline',
    regex: /Regenerate (\d+)% of Energy Shield per Second while affected by Discipline/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Regenerate #% of Life per second',
    regex: /Regenerate (\d+)% of Life per second/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Regenerate #% of Life per second per Endurance Charge',
    regex: /Regenerate (\d+)% of Life per second per Endurance Charge/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Regenerate #% of Mana per second',
    regex: /Regenerate (\d+)% of Mana per second/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Remove Chill and Freeze when you use a Flask',
    regex: /Remove Chill and Freeze when you use a Flask/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Remove Ignite and Burning when you use a Flask',
    regex: /Remove Ignite and Burning when you use a Flask/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Remove Shock when you use a Flask',
    regex: /Remove Shock when you use a Flask/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Resolute Technique',
    regex: /Resolute Technique/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Skeletons deal #% increased Damage',
    regex: /Skeletons deal (\d+)% increased Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Skills Chain +# times',
    regex: /Skills Chain \+(\d+) times/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Skills fire an additional Projectile',
    regex: /Skills fire an additional Projectile/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Added Fire Damage',
    regex: /Socketed Gems are Supported by Level (\d+) Added Fire Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Additional Accuracy',
    regex: /Socketed Gems are Supported by Level (\d+) Additional Accuracy/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Blind',
    regex: /Socketed Gems are Supported by Level (\d+) Blind/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Blood Magic',
    regex: /Socketed Gems are Supported by Level (\d+) Blood Magic/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Cast On Critical Strike',
    regex: /Socketed Gems are Supported by Level (\d+) Cast On Critical Strike/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Cast when Stunned',
    regex: /Socketed Gems are Supported by Level (\d+) Cast when Stunned/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Elemental Damage with Attacks',
    regex: /Socketed Gems are Supported by Level (\d+) Elemental Damage with Attacks/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Elemental Proliferation',
    regex: /Socketed Gems are Supported by Level (\d+) Elemental Proliferation/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Faster Casting',
    regex: /Socketed Gems are Supported by Level (\d+) Faster Casting/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Faster Projectiles',
    regex: /Socketed Gems are Supported by Level (\d+) Faster Projectiles/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Fork',
    regex: /Socketed Gems are Supported by Level (\d+) Fork/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Fortify',
    regex: /Socketed Gems are Supported by Level (\d+) Fortify/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Increased Area of Effect',
    regex: /Socketed Gems are Supported by Level (\d+) Increased Area of Effect/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Increased Critical Damage',
    regex: /Socketed Gems are Supported by Level (\d+) Increased Critical Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Inspiration',
    regex: /Socketed Gems are Supported by Level (\d+) Inspiration/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Life Gain On Hit',
    regex: /Socketed Gems are Supported by Level (\d+) Life Gain On Hit/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Life Leech',
    regex: /Socketed Gems are Supported by Level (\d+) Life Leech/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Melee Splash',
    regex: /Socketed Gems are Supported by Level (\d+) Melee Splash/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Multistrike',
    regex: /Socketed Gems are Supported by Level (\d+) Multistrike/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Onslaught',
    regex: /Socketed Gems are Supported by Level (\d+) Onslaught/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Socketed Gems are Supported by Level # Stun',
    regex: /Socketed Gems are Supported by Level (\d+) Stun/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Socketed Gems have #% reduced Mana Reservation',
    regex: /Socketed Gems have (\d+)% reduced Mana Reservation/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Socketed Skill Gems get a #% Mana Multiplier',
    regex: /Socketed Skill Gems get a (\d+)% Mana Multiplier/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Spectres have #% increased Damage',
    regex: /Spectres have (\d+)% increased Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Spells have +#% to Critical Strike Chance',
    regex: /Spells have \+(\d+)% to Critical Strike Chance/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Spells have a #% chance to deal Double Damage',
    regex: /Spells have a (\d+)% chance to deal Double Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Totems gain +#% to all Elemental Resistances',
    regex: /Totems gain \+(\d+)% to all Elemental Resistances/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Triggered Spells deal #% increased Spell Damage',
    regex: /Triggered Spells deal (\d+)% increased Spell Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Unaffected by Burning Ground',
    regex: /Unaffected by Burning Ground/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Unaffected by Chilled Ground',
    regex: /Unaffected by Chilled Ground/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Unaffected by Shocked Ground',
    regex: /Unaffected by Shocked Ground/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Unwavering Stance',
    regex: /Unwavering Stance/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Vaal Skills deal #% increased Damage',
    regex: /Vaal Skills deal (\d+)% increased Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Vitality has #% reduced Mana Reservation',
    regex: /Vitality has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Wrath has #% increased Aura Effect',
    regex: /Wrath has (\d+)% increased Aura Effect/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'You and Allies affected by Auras from your Skills deal #% increased Damage',
    regex: /You and Allies affected by Auras from your Skills deal (\d+)% increased Damage/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'You can apply an additional Curse',
    regex: /You can apply an additional Curse/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'You can catch Corrupted Fish',
    regex: /You can catch Corrupted Fish/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'You cannot be Cursed with Silence',
    regex: /You cannot be Cursed with Silence/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'You cannot be Hindered',
    regex: /You cannot be Hindered/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'You cannot be Maimed',
    regex: /You cannot be Maimed/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'You gain Onslaught for # seconds on Hit',
    regex: /You gain Onslaught for (\d+) seconds on Hit/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'You take #% reduced Extra Damage from Critical Strikes',
    regex: /You take (\d+)% reduced Extra Damage from Critical Strikes/,
    type: ModFilterType.IMPLICIT,
  },
  {
    label: 'Zealotry has #% increased Aura Effect',
    regex: /Zealotry has (\d+)% increased Aura Effect/,
    type: ModFilterType.IMPLICIT,
  },
];
/* enchantments */
export const enchantmentsModRegexes: IMod[] = [
  {
    label: '#% chance for Discharge to deal Damage without removing Charges',
    regex: /(\d+)% chance for Discharge to deal Damage without removing Charges/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% chance for Phase Run to increase Duration without removing Frenzy Charges',
    regex: /(\d+)% chance for Phase Run to increase Duration without removing Frenzy Charges/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% Chance for Puncture to Maim on hit',
    regex: /(\d+)% Chance for Puncture to Maim on hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% Chance on Frenzy to gain an additional Frenzy Charge',
    regex: /(\d+)% Chance on Frenzy to gain an additional Frenzy Charge/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% chance to Avoid being Stunned if you\'ve Killed Recently',
    regex: /(\d+)% chance to Avoid being Stunned if you've Killed Recently/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% chance to Avoid interruption from Stuns while Casting Storm Burst',
    regex: /(\d+)% chance to Avoid interruption from Stuns while Casting Storm Burst/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% chance to create a Charged Slam',
    regex: /(\d+)% chance to create a Charged Slam/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% chance to create an additional Animate Weapon copy',
    regex: /(\d+)% chance to create an additional Animate Weapon copy/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% chance to Dodge Attack Hits if you have finished Channelling Charged Dash Recently',
    regex: /(\d+)% chance to Dodge Attack Hits if you have finished Channelling Charged Dash Recently/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% Chance to Dodge Attack Hits if you\'ve taken a Critical Strike Recently',
    regex: /(\d+)% Chance to Dodge Attack Hits if you've taken a Critical Strike Recently/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% chance to Dodge Attack Hits while at maximum Blade Flurry stages',
    regex: /(\d+)% chance to Dodge Attack Hits while at maximum Blade Flurry stages/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% chance to Dodge Spell Hits if you\'ve taken Spell Damage Recently',
    regex: /(\d+)% chance to Dodge Spell Hits if you've taken Spell Damage Recently/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% chance to Freeze, Shock and Ignite if you haven\'t Crit Recently',
    regex: /(\d+)% chance to Freeze, Shock and Ignite if you haven't Crit Recently/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% Chance to gain a Power Charge on Critical Strike with Ice Spear',
    regex: /(\d+)% Chance to gain a Power Charge on Critical Strike with Ice Spear/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% Chance to gain an additional Power Charge on Kill with Power Siphon',
    regex: /(\d+)% Chance to gain an additional Power Charge on Kill with Power Siphon/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% chance to Summon an additional Skeleton Warrior with Summon Skeleton',
    regex: /(\d+)% chance to Summon an additional Skeleton Warrior with Summon Skeleton/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Abyssal Cry Damage',
    regex: /(\d+)% increased Abyssal Cry Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Abyssal Cry Duration',
    regex: /(\d+)% increased Abyssal Cry Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Ancestral Blademaster Totem Area of Effect',
    regex: /(\d+)% increased Ancestral Blademaster Totem Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Ancestral Blademaster Totem Damage',
    regex: /(\d+)% increased Ancestral Blademaster Totem Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Ancestral Protector Totem Placement Speed',
    regex: /(\d+)% increased Ancestral Protector Totem Placement Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Ancestral Warchief Totem Area of Effect',
    regex: /(\d+)% increased Ancestral Warchief Totem Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Ancestral Warchief Totem Damage',
    regex: /(\d+)% increased Ancestral Warchief Totem Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Animate Weapon Duration',
    regex: /(\d+)% increased Animate Weapon Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Arc Damage',
    regex: /(\d+)% increased Arc Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Arctic Armour Buff Effect',
    regex: /(\d+)% increased Arctic Armour Buff Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Arctic Breath Area of Effect',
    regex: /(\d+)% increased Arctic Breath Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Arctic Breath Damage',
    regex: /(\d+)% increased Arctic Breath Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Arctic Breath Duration',
    regex: /(\d+)% increased Arctic Breath Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Assassin\'s Mark Curse Effect',
    regex: /(\d+)% increased Assassin's Mark Curse Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Assassin\'s Mark Duration',
    regex: /(\d+)% increased Assassin's Mark Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Attack and Cast Speed if you\'ve Killed Recently',
    regex: /(\d+)% increased Attack and Cast Speed if you've Killed Recently/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Ball Lightning Area of Effect',
    regex: /(\d+)% increased Ball Lightning Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Ball Lightning Damage',
    regex: /(\d+)% increased Ball Lightning Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Barrage Attack Speed',
    regex: /(\d+)% increased Barrage Attack Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Barrage Damage',
    regex: /(\d+)% increased Barrage Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Bear Trap Cooldown Recovery Speed',
    regex: /(\d+)% increased Bear Trap Cooldown Recovery Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Bear Trap Damage',
    regex: /(\d+)% increased Bear Trap Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Blade Flurry Area of Effect',
    regex: /(\d+)% increased Blade Flurry Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Blade Flurry Damage',
    regex: /(\d+)% increased Blade Flurry Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Blade Vortex Area of Effect',
    regex: /(\d+)% increased Blade Vortex Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Blade Vortex Duration',
    regex: /(\d+)% increased Blade Vortex Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Blade Vortex Spell Damage',
    regex: /(\d+)% increased Blade Vortex Spell Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Bladefall Area of Effect',
    regex: /(\d+)% increased Bladefall Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Bladefall Critical Strike Chance',
    regex: /(\d+)% increased Bladefall Critical Strike Chance/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Bladefall Damage',
    regex: /(\d+)% increased Bladefall Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Blast Rain Area of Effect',
    regex: /(\d+)% increased Blast Rain Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Blast Rain Damage',
    regex: /(\d+)% increased Blast Rain Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Blight Area of Effect',
    regex: /(\d+)% increased Blight Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Blight Damage',
    regex: /(\d+)% increased Blight Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Blink Arrow Cooldown Recovery Speed',
    regex: /(\d+)% increased Blink Arrow Cooldown Recovery Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Bodyswap Cast Speed',
    regex: /(\d+)% increased Bodyswap Cast Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Bodyswap Damage',
    regex: /(\d+)% increased Bodyswap Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Bone Offering Duration',
    regex: /(\d+)% increased Bone Offering Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Burning Arrow Damage',
    regex: /(\d+)% increased Burning Arrow Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Caustic Arrow Area of Effect',
    regex: /(\d+)% increased Caustic Arrow Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Caustic Arrow Damage',
    regex: /(\d+)% increased Caustic Arrow Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Caustic Arrow Duration',
    regex: /(\d+)% increased Caustic Arrow Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Charged Dash Damage',
    regex: /(\d+)% increased Charged Dash Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Cleave Area of Effect',
    regex: /(\d+)% increased Cleave Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Cleave Attack Speed',
    regex: /(\d+)% increased Cleave Attack Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Cleave Damage',
    regex: /(\d+)% increased Cleave Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Cold Snap Area of Effect',
    regex: /(\d+)% increased Cold Snap Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Cold Snap Cooldown Recovery Speed',
    regex: /(\d+)% increased Cold Snap Cooldown Recovery Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Cold Snap Damage',
    regex: /(\d+)% increased Cold Snap Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Conductivity Curse Effect',
    regex: /(\d+)% increased Conductivity Curse Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Conductivity Duration',
    regex: /(\d+)% increased Conductivity Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Contagion Area of Effect',
    regex: /(\d+)% increased Contagion Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Contagion Damage',
    regex: /(\d+)% increased Contagion Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Contagion Duration',
    regex: /(\d+)% increased Contagion Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Conversion Trap Cooldown Recovery Speed',
    regex: /(\d+)% increased Conversion Trap Cooldown Recovery Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Convocation Buff Effect',
    regex: /(\d+)% increased Convocation Buff Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Convocation Cooldown Recovery Speed',
    regex: /(\d+)% increased Convocation Cooldown Recovery Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Cremation Cast Speed',
    regex: /(\d+)% increased Cremation Cast Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Cremation Damage',
    regex: /(\d+)% increased Cremation Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Critical Strike Chance if you haven\'t Crit Recently',
    regex: /(\d+)% increased Critical Strike Chance if you haven't Crit Recently/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Cyclone Attack Speed',
    regex: /(\d+)% increased Cyclone Attack Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Cyclone Damage',
    regex: /(\d+)% increased Cyclone Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Dark Pact Area of Effect',
    regex: /(\d+)% increased Dark Pact Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Dark Pact Cast Speed',
    regex: /(\d+)% increased Dark Pact Cast Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Dark Pact Damage',
    regex: /(\d+)% increased Dark Pact Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Decoy Totem Area of Effect',
    regex: /(\d+)% increased Decoy Totem Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Decoy Totem Life',
    regex: /(\d+)% increased Decoy Totem Life/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Desecrate Duration',
    regex: /(\d+)% increased Desecrate Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Despair Curse Effect',
    regex: /(\d+)% increased Despair Curse Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Despair Duration',
    regex: /(\d+)% increased Despair Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Detonate Dead Area of Effect',
    regex: /(\d+)% increased Detonate Dead Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Detonate Dead Damage',
    regex: /(\d+)% increased Detonate Dead Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Devouring Totem Leech per second',
    regex: /(\d+)% increased Devouring Totem Leech per second/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Discharge Damage',
    regex: /(\d+)% increased Discharge Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Discharge Radius',
    regex: /(\d+)% increased Discharge Radius/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Dominating Blow Damage',
    regex: /(\d+)% increased Dominating Blow Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Double Strike Attack Speed',
    regex: /(\d+)% increased Double Strike Attack Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Double Strike Critical Strike Chance',
    regex: /(\d+)% increased Double Strike Critical Strike Chance/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Double Strike Damage',
    regex: /(\d+)% increased Double Strike Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Dual Strike Attack Speed',
    regex: /(\d+)% increased Dual Strike Attack Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Dual Strike Critical Strike Chance',
    regex: /(\d+)% increased Dual Strike Critical Strike Chance/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Dual Strike Damage',
    regex: /(\d+)% increased Dual Strike Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Earthquake Area of Effect',
    regex: /(\d+)% increased Earthquake Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Earthquake Damage',
    regex: /(\d+)% increased Earthquake Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Effect of Curses applied by Bane',
    regex: /(\d+)% increased Effect of Curses applied by Bane/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Effect of the Buff granted by your Carrion Golems',
    regex: /(\d+)% increased Effect of the Buff granted by your Carrion Golems/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Effect of the Buff granted by your Chaos Golems',
    regex: /(\d+)% increased Effect of the Buff granted by your Chaos Golems/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Effect of the Buff granted by your Flame Golems',
    regex: /(\d+)% increased Effect of the Buff granted by your Flame Golems/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Effect of the Buff granted by your Ice Golems',
    regex: /(\d+)% increased Effect of the Buff granted by your Ice Golems/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Effect of the Buff granted by your Lightning Golems',
    regex: /(\d+)% increased Effect of the Buff granted by your Lightning Golems/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Effect of the Buff granted by your Stone Golems',
    regex: /(\d+)% increased Effect of the Buff granted by your Stone Golems/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Elemental Hit Attack Speed',
    regex: /(\d+)% increased Elemental Hit Attack Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Elemental Weakness Curse Effect',
    regex: /(\d+)% increased Elemental Weakness Curse Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Elemental Weakness Duration',
    regex: /(\d+)% increased Elemental Weakness Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Enduring Cry Buff Effect',
    regex: /(\d+)% increased Enduring Cry Buff Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Enduring Cry Cooldown Recovery Speed',
    regex: /(\d+)% increased Enduring Cry Cooldown Recovery Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Enfeeble Curse Effect',
    regex: /(\d+)% increased Enfeeble Curse Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Enfeeble Duration',
    regex: /(\d+)% increased Enfeeble Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Essence Drain Damage',
    regex: /(\d+)% increased Essence Drain Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Essence Drain Duration',
    regex: /(\d+)% increased Essence Drain Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Ethereal Knives Damage',
    regex: /(\d+)% increased Ethereal Knives Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Ethereal Knives Projectile Speed',
    regex: /(\d+)% increased Ethereal Knives Projectile Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Explosive Arrow Area of Effect',
    regex: /(\d+)% increased Explosive Arrow Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Explosive Arrow Attack Speed',
    regex: /(\d+)% increased Explosive Arrow Attack Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Explosive Arrow Damage',
    regex: /(\d+)% increased Explosive Arrow Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Fire Trap Burning Damage',
    regex: /(\d+)% increased Fire Trap Burning Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Fire Trap Burning Ground Duration',
    regex: /(\d+)% increased Fire Trap Burning Ground Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Fire Trap Damage',
    regex: /(\d+)% increased Fire Trap Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Fireball Cast Speed',
    regex: /(\d+)% increased Fireball Cast Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Fireball Damage',
    regex: /(\d+)% increased Fireball Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Firestorm Damage',
    regex: /(\d+)% increased Firestorm Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Firestorm Duration',
    regex: /(\d+)% increased Firestorm Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Firestorm explosion Area of Effect',
    regex: /(\d+)% increased Firestorm explosion Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Flame Dash Cooldown Recovery Speed',
    regex: /(\d+)% increased Flame Dash Cooldown Recovery Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Flame Dash Damage',
    regex: /(\d+)% increased Flame Dash Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Flame Surge Critical Strike Chance',
    regex: /(\d+)% increased Flame Surge Critical Strike Chance/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Flame Surge Damage',
    regex: /(\d+)% increased Flame Surge Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Flame Surge Damage against Burning Enemies',
    regex: /(\d+)% increased Flame Surge Damage against Burning Enemies/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Flameblast Area of Effect',
    regex: /(\d+)% increased Flameblast Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Flameblast Critical Strike Chance',
    regex: /(\d+)% increased Flameblast Critical Strike Chance/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Flameblast Damage',
    regex: /(\d+)% increased Flameblast Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Flammability Curse Effect',
    regex: /(\d+)% increased Flammability Curse Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Flammability Duration',
    regex: /(\d+)% increased Flammability Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Flesh Offering Duration',
    regex: /(\d+)% increased Flesh Offering Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Flicker Strike Cooldown Recovery Speed',
    regex: /(\d+)% increased Flicker Strike Cooldown Recovery Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Flicker Strike Damage',
    regex: /(\d+)% increased Flicker Strike Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Flicker Strike Damage per Frenzy Charge',
    regex: /(\d+)% increased Flicker Strike Damage per Frenzy Charge/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Freezing Pulse Cast Speed',
    regex: /(\d+)% increased Freezing Pulse Cast Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Freezing Pulse Damage',
    regex: /(\d+)% increased Freezing Pulse Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Freezing Pulse Projectile Speed',
    regex: /(\d+)% increased Freezing Pulse Projectile Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Frenzy Damage',
    regex: /(\d+)% increased Frenzy Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Frenzy Damage per Frenzy Charge',
    regex: /(\d+)% increased Frenzy Damage per Frenzy Charge/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Frost Blades Damage',
    regex: /(\d+)% increased Frost Blades Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Frost Blades Projectile Speed',
    regex: /(\d+)% increased Frost Blades Projectile Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Frost Bomb Area of Effect',
    regex: /(\d+)% increased Frost Bomb Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Frost Bomb Cooldown Recovery Speed',
    regex: /(\d+)% increased Frost Bomb Cooldown Recovery Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Frost Bomb Damage',
    regex: /(\d+)% increased Frost Bomb Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Frost Wall Cooldown Recovery Speed',
    regex: /(\d+)% increased Frost Wall Cooldown Recovery Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Frost Wall Duration',
    regex: /(\d+)% increased Frost Wall Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Frostbite Curse Effect',
    regex: /(\d+)% increased Frostbite Curse Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Frostbite Duration',
    regex: /(\d+)% increased Frostbite Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Frostbolt Cast Speed',
    regex: /(\d+)% increased Frostbolt Cast Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Frostbolt Damage',
    regex: /(\d+)% increased Frostbolt Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Glacial Cascade Area of Effect',
    regex: /(\d+)% increased Glacial Cascade Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Glacial Cascade Damage',
    regex: /(\d+)% increased Glacial Cascade Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Glacial Hammer Damage',
    regex: /(\d+)% increased Glacial Hammer Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Ground Slam Area of Effect',
    regex: /(\d+)% increased Ground Slam Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Ground Slam Damage',
    regex: /(\d+)% increased Ground Slam Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Heavy Strike Attack Speed',
    regex: /(\d+)% increased Heavy Strike Attack Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Heavy Strike Damage',
    regex: /(\d+)% increased Heavy Strike Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Herald of Ash Damage',
    regex: /(\d+)% increased Herald of Ash Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Herald of Ice Damage',
    regex: /(\d+)% increased Herald of Ice Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Herald of Thunder Damage',
    regex: /(\d+)% increased Herald of Thunder Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Ice Crash Area of Effect',
    regex: /(\d+)% increased Ice Crash Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Ice Crash Damage',
    regex: /(\d+)% increased Ice Crash Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Ice Nova Area of Effect',
    regex: /(\d+)% increased Ice Nova Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Ice Nova Damage',
    regex: /(\d+)% increased Ice Nova Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Ice Shot Area of Effect',
    regex: /(\d+)% increased Ice Shot Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Ice Shot Damage',
    regex: /(\d+)% increased Ice Shot Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Ice Shot Duration',
    regex: /(\d+)% increased Ice Shot Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Ice Spear Critical Strike Chance in second form',
    regex: /(\d+)% increased Ice Spear Critical Strike Chance in second form/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Ice Spear Damage',
    regex: /(\d+)% increased Ice Spear Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Ice Trap Area of Effect',
    regex: /(\d+)% increased Ice Trap Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Ice Trap Damage',
    regex: /(\d+)% increased Ice Trap Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Icicle Mine Throwing Speed',
    regex: /(\d+)% increased Icicle Mine Throwing Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Immortal Call Duration',
    regex: /(\d+)% increased Immortal Call Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Incinerate Damage',
    regex: /(\d+)% increased Incinerate Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Incinerate Damage for each stage',
    regex: /(\d+)% increased Incinerate Damage for each stage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Infernal Blow Area of Effect',
    regex: /(\d+)% increased Infernal Blow Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Infernal Blow Damage',
    regex: /(\d+)% increased Infernal Blow Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Kinetic Blast Area of Effect',
    regex: /(\d+)% increased Kinetic Blast Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Kinetic Blast Damage',
    regex: /(\d+)% increased Kinetic Blast Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Lacerate Area of Effect',
    regex: /(\d+)% increased Lacerate Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Lacerate Critical Strike Chance',
    regex: /(\d+)% increased Lacerate Critical Strike Chance/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Lacerate Damage',
    regex: /(\d+)% increased Lacerate Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Leap Slam Area of Effect',
    regex: /(\d+)% increased Leap Slam Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Leap Slam Attack Speed',
    regex: /(\d+)% increased Leap Slam Attack Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Leap Slam Damage',
    regex: /(\d+)% increased Leap Slam Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Lightning Arrow Area of Effect',
    regex: /(\d+)% increased Lightning Arrow Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Lightning Arrow Damage',
    regex: /(\d+)% increased Lightning Arrow Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Lightning Strike Damage',
    regex: /(\d+)% increased Lightning Strike Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Lightning Tendrils Area of Effect',
    regex: /(\d+)% increased Lightning Tendrils Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Lightning Tendrils Critical Strike Chance',
    regex: /(\d+)% increased Lightning Tendrils Critical Strike Chance/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Lightning Tendrils Damage',
    regex: /(\d+)% increased Lightning Tendrils Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Lightning Trap Damage',
    regex: /(\d+)% increased Lightning Trap Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Lightning Trap Shock Effect',
    regex: /(\d+)% increased Lightning Trap Shock Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Lightning Warp Cast Speed',
    regex: /(\d+)% increased Lightning Warp Cast Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Lightning Warp Damage',
    regex: /(\d+)% increased Lightning Warp Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Magma Orb Area of Effect',
    regex: /(\d+)% increased Magma Orb Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Magma Orb Damage',
    regex: /(\d+)% increased Magma Orb Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Mana Regeneration Rate if you\'ve cast a Spell Recently',
    regex: /(\d+)% increased Mana Regeneration Rate if you've cast a Spell Recently/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Mirror Arrow Cooldown Recovery Speed',
    regex: /(\d+)% increased Mirror Arrow Cooldown Recovery Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Molten Shell Buff Effect',
    regex: /(\d+)% increased Molten Shell Buff Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Molten Strike Area of Effect',
    regex: /(\d+)% increased Molten Strike Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Molten Strike Damage',
    regex: /(\d+)% increased Molten Strike Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Movement Speed if you haven\'t been Hit Recently',
    regex: /(\d+)% increased Movement Speed if you haven't been Hit Recently/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Orb of Storms Area of Effect',
    regex: /(\d+)% increased Orb of Storms Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Orb of Storms Critical Strike Chance',
    regex: /(\d+)% increased Orb of Storms Critical Strike Chance/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Orb of Storms Damage',
    regex: /(\d+)% increased Orb of Storms Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Phase Run Duration',
    regex: /(\d+)% increased Phase Run Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Poacher\'s Mark Curse Effect',
    regex: /(\d+)% increased Poacher's Mark Curse Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Poacher\'s Mark Duration',
    regex: /(\d+)% increased Poacher's Mark Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Power Siphon Attack Speed',
    regex: /(\d+)% increased Power Siphon Attack Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Power Siphon Damage',
    regex: /(\d+)% increased Power Siphon Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Projectile Weakness Curse Effect',
    regex: /(\d+)% increased Projectile Weakness Curse Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Projectile Weakness Duration',
    regex: /(\d+)% increased Projectile Weakness Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Puncture Damage',
    regex: /(\d+)% increased Puncture Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Puncture Duration',
    regex: /(\d+)% increased Puncture Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Punishment Curse Effect',
    regex: /(\d+)% increased Punishment Curse Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Punishment Duration',
    regex: /(\d+)% increased Punishment Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Rain of Arrows Area of Effect',
    regex: /(\d+)% increased Rain of Arrows Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Rain of Arrows Attack Speed',
    regex: /(\d+)% increased Rain of Arrows Attack Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Rain of Arrows Damage',
    regex: /(\d+)% increased Rain of Arrows Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Rallying Cry Buff Effect',
    regex: /(\d+)% increased Rallying Cry Buff Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Rallying Cry Duration',
    regex: /(\d+)% increased Rallying Cry Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Reave Damage',
    regex: /(\d+)% increased Reave Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Reave Radius',
    regex: /(\d+)% increased Reave Radius/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Reckoning Cooldown Recovery Speed',
    regex: /(\d+)% increased Reckoning Cooldown Recovery Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Reckoning Damage',
    regex: /(\d+)% increased Reckoning Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Rejuvenation Totem Aura Effect',
    regex: /(\d+)% increased Rejuvenation Totem Aura Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Righteous Fire Area of Effect',
    regex: /(\d+)% increased Righteous Fire Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Righteous Fire Damage',
    regex: /(\d+)% increased Righteous Fire Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Riposte Cooldown Recovery Speed',
    regex: /(\d+)% increased Riposte Cooldown Recovery Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Riposte Damage',
    regex: /(\d+)% increased Riposte Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Scorching Ray beam length',
    regex: /(\d+)% increased Scorching Ray beam length/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Scorching Ray Cast Speed',
    regex: /(\d+)% increased Scorching Ray Cast Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Scorching Ray Damage',
    regex: /(\d+)% increased Scorching Ray Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Searing Bond Damage',
    regex: /(\d+)% increased Searing Bond Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Searing Bond Totem Elemental Resistances',
    regex: /(\d+)% increased Searing Bond Totem Elemental Resistances/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Searing Bond Totem Placement Speed',
    regex: /(\d+)% increased Searing Bond Totem Placement Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Sentinel of Dominance Duration',
    regex: /(\d+)% increased Sentinel of Dominance Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Shield Charge Attack Speed',
    regex: /(\d+)% increased Shield Charge Attack Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Shield Charge Damage',
    regex: /(\d+)% increased Shield Charge Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Shield Charge Damage per Enemy Hit',
    regex: /(\d+)% increased Shield Charge Damage per Enemy Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Shock Nova Area of Effect',
    regex: /(\d+)% increased Shock Nova Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Shock Nova Damage',
    regex: /(\d+)% increased Shock Nova Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Shockwave Totem Area of Effect',
    regex: /(\d+)% increased Shockwave Totem Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Shockwave Totem Cast Speed',
    regex: /(\d+)% increased Shockwave Totem Cast Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Shockwave Totem Damage',
    regex: /(\d+)% increased Shockwave Totem Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Shrapnel Shot Area of Effect',
    regex: /(\d+)% increased Shrapnel Shot Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Shrapnel Shot Damage',
    regex: /(\d+)% increased Shrapnel Shot Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Siege Ballista Attack Speed',
    regex: /(\d+)% increased Siege Ballista Attack Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Siege Ballista Damage',
    regex: /(\d+)% increased Siege Ballista Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Siege Ballista Totem Placement Speed',
    regex: /(\d+)% increased Siege Ballista Totem Placement Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Smoke Mine Duration',
    regex: /(\d+)% increased Smoke Mine Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Spark Damage',
    regex: /(\d+)% increased Spark Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Spark Projectile Speed',
    regex: /(\d+)% increased Spark Projectile Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Spectral Shield Throw Damage',
    regex: /(\d+)% increased Spectral Shield Throw Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Spectral Shield Throw Projectile Speed',
    regex: /(\d+)% increased Spectral Shield Throw Projectile Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Spectral Throw Damage',
    regex: /(\d+)% increased Spectral Throw Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Spectral Throw Projectile Speed',
    regex: /(\d+)% increased Spectral Throw Projectile Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Spirit Offering Duration',
    regex: /(\d+)% increased Spirit Offering Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Split Arrow Critical Strike Chance',
    regex: /(\d+)% increased Split Arrow Critical Strike Chance/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Split Arrow Damage',
    regex: /(\d+)% increased Split Arrow Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Static Strike Area of Effect',
    regex: /(\d+)% increased Static Strike Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Static Strike Damage',
    regex: /(\d+)% increased Static Strike Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Static Strike Duration',
    regex: /(\d+)% increased Static Strike Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Storm Burst Area of Effect',
    regex: /(\d+)% increased Storm Burst Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Storm Burst Damage',
    regex: /(\d+)% increased Storm Burst Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Storm Call Area of Effect',
    regex: /(\d+)% increased Storm Call Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Storm Call Damage',
    regex: /(\d+)% increased Storm Call Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Sunder Area of Effect',
    regex: /(\d+)% increased Sunder Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Sunder Attack Speed',
    regex: /(\d+)% increased Sunder Attack Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Sunder Damage',
    regex: /(\d+)% increased Sunder Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Sweep Area of Effect',
    regex: /(\d+)% increased Sweep Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Sweep Damage',
    regex: /(\d+)% increased Sweep Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Tectonic Slam Area of Effect',
    regex: /(\d+)% increased Tectonic Slam Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Tectonic Slam Damage',
    regex: /(\d+)% increased Tectonic Slam Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Tempest Shield Damage',
    regex: /(\d+)% increased Tempest Shield Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Temporal Chains Curse Effect',
    regex: /(\d+)% increased Temporal Chains Curse Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Temporal Chains Duration',
    regex: /(\d+)% increased Temporal Chains Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Tornado Shot Critical Strike Chance',
    regex: /(\d+)% increased Tornado Shot Critical Strike Chance/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Tornado Shot Damage',
    regex: /(\d+)% increased Tornado Shot Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Unearth Cast Speed',
    regex: /(\d+)% increased Unearth Cast Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Unearth Damage',
    regex: /(\d+)% increased Unearth Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Vengeance Cooldown Recovery Speed',
    regex: /(\d+)% increased Vengeance Cooldown Recovery Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Vengeance Damage',
    regex: /(\d+)% increased Vengeance Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Vigilant Strike Damage',
    regex: /(\d+)% increased Vigilant Strike Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Vigilant Strike Fortify Duration',
    regex: /(\d+)% increased Vigilant Strike Fortify Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Viper Strike Critical Strike Chance',
    regex: /(\d+)% increased Viper Strike Critical Strike Chance/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Viper Strike Damage',
    regex: /(\d+)% increased Viper Strike Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Viper Strike Duration',
    regex: /(\d+)% increased Viper Strike Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Volatile Dead Cast Speed',
    regex: /(\d+)% increased Volatile Dead Cast Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Volatile Dead Damage',
    regex: /(\d+)% increased Volatile Dead Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Vortex Area of Effect',
    regex: /(\d+)% increased Vortex Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Vortex Damage',
    regex: /(\d+)% increased Vortex Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Vortex Duration',
    regex: /(\d+)% increased Vortex Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Vulnerability Curse Effect',
    regex: /(\d+)% increased Vulnerability Curse Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Vulnerability Duration',
    regex: /(\d+)% increased Vulnerability Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Warlord\'s Mark Curse Effect',
    regex: /(\d+)% increased Warlord's Mark Curse Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Warlord\'s Mark Duration',
    regex: /(\d+)% increased Warlord's Mark Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Whirling Blades Attack Speed',
    regex: /(\d+)% increased Whirling Blades Attack Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Whirling Blades Damage',
    regex: /(\d+)% increased Whirling Blades Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Wild Strike Area of Effect',
    regex: /(\d+)% increased Wild Strike Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% increased Wild Strike Damage',
    regex: /(\d+)% increased Wild Strike Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% of Burning Arrow Physical Damage gained as Extra Fire Damage',
    regex: /(\d+)% of Burning Arrow Physical Damage gained as Extra Fire Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% of Damage Leeched as Life if you\'ve Killed Recently',
    regex: /(\d+)% of Damage Leeched as Life if you've Killed Recently/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% of Glacial Cascade Physical Damage Converted to Cold Damage',
    regex: /(\d+)% of Glacial Cascade Physical Damage Converted to Cold Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% of Glacial Hammer Physical Damage gained as Extra Cold Damage',
    regex: /(\d+)% of Glacial Hammer Physical Damage gained as Extra Cold Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% of Ice Crash Physical Damage gained as Extra Cold Damage',
    regex: /(\d+)% of Ice Crash Physical Damage gained as Extra Cold Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% of Infernal Blow Physical Damage gained as Extra Fire Damage',
    regex: /(\d+)% of Infernal Blow Physical Damage gained as Extra Fire Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% of Shrapnel Shot Physical Damage gained as extra Lightning Damage',
    regex: /(\d+)% of Shrapnel Shot Physical Damage gained as extra Lightning Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% reduced Ball Lightning Projectile Speed',
    regex: /(\d+)% reduced Ball Lightning Projectile Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% reduced Earthquake Duration',
    regex: /(\d+)% reduced Earthquake Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% reduced Lightning Warp Duration',
    regex: /(\d+)% reduced Lightning Warp Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% reduced Mana Cost of Skills if you\'ve been Hit Recently',
    regex: /(\d+)% reduced Mana Cost of Skills if you've been Hit Recently/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% reduced Spectral Throw Projectile Deceleration',
    regex: /(\d+)% reduced Spectral Throw Projectile Deceleration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '#% reduced Storm Call Duration',
    regex: /(\d+)% reduced Storm Call Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '+# to maximum number of Bladestorms',
    regex: /\+(\d+) to maximum number of Bladestorms/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '+# to maximum number of Sentinels of Purity',
    regex: /\+(\d+) to maximum number of Sentinels of Purity/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '+#% Sweep Knockback Chance',
    regex: /\+(\d+)% Sweep Knockback Chance/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '+#% to Ancestral Protector Totem Elemental Resistances',
    regex: /\+(\d+)% to Ancestral Protector Totem Elemental Resistances/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '+#% to Animated Guardian Elemental Resistances',
    regex: /\+(\d+)% to Animated Guardian Elemental Resistances/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '+#% to Chaos Golem Elemental Resistances',
    regex: /\+(\d+)% to Chaos Golem Elemental Resistances/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '+#% to Ice Golem Elemental Resistances',
    regex: /\+(\d+)% to Ice Golem Elemental Resistances/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '+#% to increased Flame Golem Elemental Resistances',
    regex: /\+(\d+)% to increased Flame Golem Elemental Resistances/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '+#% to Lightning Golem Elemental Resistances',
    regex: /\+(\d+)% to Lightning Golem Elemental Resistances/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '+#% to Raised Spectre Elemental Resistances',
    regex: /\+(\d+)% to Raised Spectre Elemental Resistances/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: '+#% to Stone Golem Elemental Resistances',
    regex: /\+(\d+)% to Stone Golem Elemental Resistances/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Adds # to # Chaos Damage if you\'ve taken a Critical Strike Recently',
    regex: /Adds (\d+) to (\d+) Chaos Damage if you've taken a Critical Strike Recently/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Adds # to # Cold Damage if you\'ve been Hit Recently',
    regex: /Adds (\d+) to (\d+) Cold Damage if you've been Hit Recently/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Adds # to # Fire Damage if you\'ve Killed Recently',
    regex: /Adds (\d+) to (\d+) Fire Damage if you've Killed Recently/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Adds # to # Lightning Damage if you haven\'t Killed Recently',
    regex: /Adds (\d+) to (\d+) Lightning Damage if you haven't Killed Recently/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'All Towers in range of your Empowering Towers have #% chance to deal Double Damage',
    regex: /All Towers in range of your Empowering Towers have (\d+)% chance to deal Double Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Ancestral Blademaster Totem grants #% of Physical Damage as Extra Fire Damage while Active',
    regex: /Ancestral Blademaster Totem grants (\d+)% of Physical Damage as Extra Fire Damage while Active/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Ancestral Protector Totem deals #% increased Damage',
    regex: /Ancestral Protector Totem deals (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Ancestral Protector Totem grants #% increased Attack Speed while Active',
    regex: /Ancestral Protector Totem grants (\d+)% increased Attack Speed while Active/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Ancestral Warchief Totem grants #% increased Melee Damage while Active',
    regex: /Ancestral Warchief Totem grants (\d+)% increased Melee Damage while Active/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Anger has #% reduced Mana Reservation',
    regex: /Anger has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Animated Guardians deal #% increased Damage',
    regex: /Animated Guardians deal (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Animated Weapons deal #% increased Damage',
    regex: /Animated Weapons deal (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Arc Chains an additional # times',
    regex: /Arc Chains an additional (\d+) times/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Arc Chains an additional time',
    regex: /Arc Chains an additional time/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Arc deals #% increased Damage for each time it has Chained',
    regex: /Arc deals (\d+)% increased Damage for each time it has Chained/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Arc has +#% chance to Shock',
    regex: /Arc has \+(\d+)% chance to Shock/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Arctic Armour has #% reduced Mana Reservation',
    regex: /Arctic Armour has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Arctic Breath\'s Chilling Area has #% increased Movement Speed',
    regex: /Arctic Breath's Chilling Area has (\d+)% increased Movement Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Armageddon Brand Damage Penetrates #% of Branded Enemy\'s Fire Resistance',
    regex: /Armageddon Brand Damage Penetrates (\d+)% of Branded Enemy's Fire Resistance/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Armageddon Brand deals #% increased Damage',
    regex: /Armageddon Brand deals (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Armageddon Brand has #% increased Activation Frequency',
    regex: /Armageddon Brand has (\d+)% increased Activation Frequency/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Ball Lightning fires an additional Projectile',
    regex: /Ball Lightning fires an additional Projectile/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Bane deals #% increased Damage',
    regex: /Bane deals (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Bane has #% increased Area of Effect',
    regex: /Bane has (\d+)% increased Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Barrage fires # additional Projectiles',
    regex: /Barrage fires (\d+) additional Projectiles/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Berserk has #% increased Buff Effect',
    regex: /Berserk has (\d+)% increased Buff Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Berserk has #% reduced Rage loss per second',
    regex: /Berserk has (\d+)% reduced Rage loss per second/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Blade Vortex has +#% to Critical Strike Multiplier for each blade',
    regex: /Blade Vortex has \+(\d+)% to Critical Strike Multiplier for each blade/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Bladefall has an additional Volley',
    regex: /Bladefall has an additional Volley/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Bladestorm deals #% increased Damage',
    regex: /Bladestorm deals (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Blast Rain has a #% chance for an additional blast',
    regex: /Blast Rain has a (\d+)% chance for an additional blast/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Blight has #% increased Hinder Duration',
    regex: /Blight has (\d+)% increased Hinder Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Blink Arrow and Blink Arrow Clones have #% increased Attack Speed',
    regex: /Blink Arrow and Blink Arrow Clones have (\d+)% increased Attack Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Blink Arrow and Blink Arrow Clones have #% increased Damage',
    regex: /Blink Arrow and Blink Arrow Clones have (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Blood and Sand has #% increased Buff Effect',
    regex: /Blood and Sand has (\d+)% increased Buff Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Blood Rage grants additional #% chance to gain a Frenzy Charge on Kill',
    regex: /Blood Rage grants additional (\d+)% chance to gain a Frenzy Charge on Kill/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Blood Rage grants additional #% increased Attack Speed',
    regex: /Blood Rage grants additional (\d+)% increased Attack Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Bone Offering grants an additional +#% Chance to Block Attack Damage',
    regex: /Bone Offering grants an additional \+(\d+)% Chance to Block Attack Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Burning Arrow has +#% chance to Ignite',
    regex: /Burning Arrow has \+(\d+)% chance to Ignite/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Caustic Arrow has #% chance to inflict Withered on Hit for # seconds base Duration',
    regex: /Caustic Arrow has (\d+)% chance to inflict Withered on Hit for (\d+) seconds base Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Chain Hook deals #% increased Damage',
    regex: /Chain Hook deals (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Chain Hook has +# Radius per 12 Rage',
    regex: /Chain Hook has \+(\d+) Radius per 12 Rage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Chain Hook has a #% chance to grant +1 Rage if it Hits Enemies',
    regex: /Chain Hook has a (\d+)% chance to grant \+1 Rage if it Hits Enemies/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Chaos Golems deal #% increased Damage',
    regex: /Chaos Golems deal (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Charged Dash has #% more Movement Speed',
    regex: /Charged Dash has (\d+)% more Movement Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Charged Dash has +# to Radius of each Wave\'s last damage Area',
    regex: /Charged Dash has \+(\d+) to Radius of each Wave's last damage Area/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Chills from Ice Nova Hits always reduce Action Speed by at least #%',
    regex: /Chills from Ice Nova Hits always reduce Action Speed by at least (\d+)%/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Clarity has #% reduced Mana Reservation',
    regex: /Clarity has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Cobra Lash Chains # additional times',
    regex: /Cobra Lash Chains (\d+) additional times/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Cobra Lash deals #% increased Damage',
    regex: /Cobra Lash deals (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Cobra Lash has #% increased Projectile Speed',
    regex: /Cobra Lash has (\d+)% increased Projectile Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Consecrated Ground from Holy Flame Totem applies #% increased Damage taken to Enemies',
    regex: /Consecrated Ground from Holy Flame Totem applies (\d+)% increased Damage taken to Enemies/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Consecrated Ground from Purifying Flame applies #% increased Damage taken to Enemies',
    regex: /Consecrated Ground from Purifying Flame applies (\d+)% increased Damage taken to Enemies/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Consecrated Path deals #% increased Damage',
    regex: /Consecrated Path deals (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Consecrated Path has #% increased Area of Effect',
    regex: /Consecrated Path has (\d+)% increased Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Consecrated Path has #% increased teleport range',
    regex: /Consecrated Path has (\d+)% increased teleport range/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Converted Enemies have #% increased Damage',
    regex: /Converted Enemies have (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Cremation can have up to # additional Geyser at a time',
    regex: /Cremation can have up to (\d+) additional Geyser at a time/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Damage Penetrates #% of Enemy Elemental Resistances if you haven\'t Killed Recently',
    regex: /Damage Penetrates (\d+)% of Enemy Elemental Resistances if you haven't Killed Recently/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Dash has +# Cooldown',
    regex: /Dash has \+(\d+) Cooldown/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Dash has +# Cooldowns',
    regex: /Dash has \+(\d+) Cooldowns/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Dash travels #% increased distance',
    regex: /Dash travels (\d+)% increased distance/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Desecrate Spawns # additional corpses',
    regex: /Desecrate Spawns (\d+) additional corpses/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Determination has #% reduced Mana Reservation',
    regex: /Determination has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Detonate Dead has a #% chance to detonate an additional corpse',
    regex: /Detonate Dead has a (\d+)% chance to detonate an additional corpse/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Devouring Totem has #% Chance to Consume an additional corpse',
    regex: /Devouring Totem has (\d+)% Chance to Consume an additional corpse/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Discipline has #% reduced Mana Reservation',
    regex: /Discipline has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Divine Ire Damages # additional nearby Enemies when gaining Stages',
    regex: /Divine Ire Damages (\d+) additional nearby Enemies when gaining Stages/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Divine Ire Damages an additional nearby Enemy when gaining Stages',
    regex: /Divine Ire Damages an additional nearby Enemy when gaining Stages/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Divine Ire deals #% increased Damage',
    regex: /Divine Ire deals (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Divine Ire\'s beam has #% increased width',
    regex: /Divine Ire's beam has (\d+)% increased width/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Dominating Blow can summon # additional Magic Sentinels of Dominance',
    regex: /Dominating Blow can summon (\d+) additional Magic Sentinels of Dominance/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Dominating Blow can summon an additional Rare Sentinel of Dominance',
    regex: /Dominating Blow can summon an additional Rare Sentinel of Dominance/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Double Strike has a #% chance to deal Double Damage to Bleeding Enemies',
    regex: /Double Strike has a (\d+)% chance to deal Double Damage to Bleeding Enemies/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Dread Banner has #% increased Aura Effect',
    regex: /Dread Banner has (\d+)% increased Aura Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Elemental Hit deals #% increased Damage',
    regex: /Elemental Hit deals (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Elemental Hit has +#% chance to Freeze, Shock and Ignite',
    regex: /Elemental Hit has \+(\d+)% chance to Freeze, Shock and Ignite/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Enemies affected by Bear Trap take #% increased Damage from Trap or Mine Hits',
    regex: /Enemies affected by Bear Trap take (\d+)% increased Damage from Trap or Mine Hits/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Enemies inside Glacial Cage take #% increased Damage',
    regex: /Enemies inside Glacial Cage take (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Ethereal Knives Pierces an additional Target',
    regex: /Ethereal Knives Pierces an additional Target/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Explosive Trap causes # additional smaller explosions',
    regex: /Explosive Trap causes (\d+) additional smaller explosions/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Explosive Trap causes an additional smaller explosion',
    regex: /Explosive Trap causes an additional smaller explosion/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Explosive Trap deals #% increased Damage',
    regex: /Explosive Trap deals (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Explosive Trap has #% increased Area of Effect',
    regex: /Explosive Trap has (\d+)% increased Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Fireball has +#% chance to Ignite',
    regex: /Fireball has \+(\d+)% chance to Ignite/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Flame Golems have #% increased Damage',
    regex: /Flame Golems have (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Flamethrower Trap deals #% increased Damage',
    regex: /Flamethrower Trap deals (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Flamethrower Trap has # additional Flames',
    regex: /Flamethrower Trap has (\d+) additional Flames/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Flamethrower Trap has #% increased Cast Speed',
    regex: /Flamethrower Trap has (\d+)% increased Cast Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Flamethrower Trap has #% increased Cooldown Recovery Speed',
    regex: /Flamethrower Trap has (\d+)% increased Cooldown Recovery Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Flamethrower Trap has #% increased Skill Effect Duration',
    regex: /Flamethrower Trap has (\d+)% increased Skill Effect Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Flamethrower Trap has an additional Flame',
    regex: /Flamethrower Trap has an additional Flame/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Flesh and Stone has #% reduced Mana Reservation',
    regex: /Flesh and Stone has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Flesh Offering grants an additional #% increased Attack Speed',
    regex: /Flesh Offering grants an additional (\d+)% increased Attack Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Frost Bomb has #% increased Debuff Duration',
    regex: /Frost Bomb has (\d+)% increased Debuff Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Frostblink has #% increased Cooldown Recovery Speed',
    regex: /Frostblink has (\d+)% increased Cooldown Recovery Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Frostblink has #% increased maximum travel distance',
    regex: /Frostblink has (\d+)% increased maximum travel distance/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Frostbolt has +#% chance to Freeze',
    regex: /Frostbolt has \+(\d+)% chance to Freeze/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Gain #% of Rejuvenation Totem Life Regeneration as extra Mana Regeneration',
    regex: /Gain (\d+)% of Rejuvenation Totem Life Regeneration as extra Mana Regeneration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Glacial Hammer has +#% chance to Freeze',
    regex: /Glacial Hammer has \+(\d+)% chance to Freeze/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Grace has #% reduced Mana Reservation',
    regex: /Grace has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Ground Slam has a #% increased angle',
    regex: /Ground Slam has a (\d+)% increased angle/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Haste has #% reduced Mana Reservation',
    regex: /Haste has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Hatred has #% reduced Mana Reservation',
    regex: /Hatred has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Heavy Strike has a #% chance to deal Double Damage',
    regex: /Heavy Strike has a (\d+)% chance to deal Double Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Herald of Agony has #% reduced Mana Reservation',
    regex: /Herald of Agony has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Herald of Ash has #% reduced Mana Reservation',
    regex: /Herald of Ash has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Herald of Ice has #% reduced Mana Reservation',
    regex: /Herald of Ice has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Herald of Purity has #% reduced Mana Reservation',
    regex: /Herald of Purity has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Herald of Thunder has #% reduced Mana Reservation',
    regex: /Herald of Thunder has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Holy Flame Totem deals #% increased Damage',
    regex: /Holy Flame Totem deals (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Holy Flame Totem fires # additional Projectiles',
    regex: /Holy Flame Totem fires (\d+) additional Projectiles/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Holy Flame Totem fires an additional Projectile',
    regex: /Holy Flame Totem fires an additional Projectile/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Holy Flame Totem has #% increased Projectile Speed',
    regex: /Holy Flame Totem has (\d+)% increased Projectile Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Ice Golems deal #% increased Damage',
    regex: /Ice Golems deal (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Ice Nova has +#% chance to Freeze',
    regex: /Ice Nova has \+(\d+)% chance to Freeze/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Ice Spear fires an additional Projectile',
    regex: /Ice Spear fires an additional Projectile/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Ice Spear travels #% reduced distance before changing forms',
    regex: /Ice Spear travels (\d+)% reduced distance before changing forms/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Ice Trap Damage Penetrates #% Cold Resistance',
    regex: /Ice Trap Damage Penetrates (\d+)% Cold Resistance/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Icicle Mine deals #% increased Damage',
    regex: /Icicle Mine deals (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Icicle Mine has #% increased Throwing Speed',
    regex: /Icicle Mine has (\d+)% increased Throwing Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Icicle Mine has +#% to Critical Strike Multiplier',
    regex: /Icicle Mine has \+(\d+)% to Critical Strike Multiplier/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Immortal Call has #% increased Buff Duration per Endurance Charge removed',
    regex: /Immortal Call has (\d+)% increased Buff Duration per Endurance Charge removed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Incinerate has #% increased Area of Effect',
    regex: /Incinerate has (\d+)% increased Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Incinerate has +# to maximum stages',
    regex: /Incinerate has \+(\d+) to maximum stages/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Infernal Blow Debuff deals an additional #% of Damage per Charge',
    regex: /Infernal Blow Debuff deals an additional (\d+)% of Damage per Charge/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Kinetic Blast has a #% chance for an additional explosion',
    regex: /Kinetic Blast has a (\d+)% chance for an additional explosion/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Lacerate deals # to # added Physical Damage against Bleeding Enemies',
    regex: /Lacerate deals (\d+) to (\d+) added Physical Damage against Bleeding Enemies/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Lancing Steel deals #% increased Damage',
    regex: /Lancing Steel deals (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Lancing Steel\'s additional Projectiles have +#% chance to Impale Enemies',
    regex: /Lancing Steel's additional Projectiles have \+(\d+)% chance to Impale Enemies/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Lancing Steel\'s primary Projectile Pierces # additional Targets',
    regex: /Lancing Steel's primary Projectile Pierces (\d+) additional Targets/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Lightning Arrow hits # additional Enemies',
    regex: /Lightning Arrow hits (\d+) additional Enemies/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Lightning Arrow hits an additional Enemy',
    regex: /Lightning Arrow hits an additional Enemy/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Lightning Golems deal #% increased Damage',
    regex: /Lightning Golems deal (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Lightning Spire Trap deals #% increased Damage',
    regex: /Lightning Spire Trap deals (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Lightning Spire Trap has #% increased Cast Speed',
    regex: /Lightning Spire Trap has (\d+)% increased Cast Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Lightning Spire Trap has #% increased Cooldown Recovery Speed',
    regex: /Lightning Spire Trap has (\d+)% increased Cooldown Recovery Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Lightning Spire Trap has #% increased Skill Effect Duration',
    regex: /Lightning Spire Trap has (\d+)% increased Skill Effect Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Lightning Spire Trap strikes an additional area',
    regex: /Lightning Spire Trap strikes an additional area/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Lightning Strike fires # additional Projectiles',
    regex: /Lightning Strike fires (\d+) additional Projectiles/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Lightning Strike pierces # additional Targets',
    regex: /Lightning Strike pierces (\d+) additional Targets/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Lightning Trap Damage Penetrates #% Lightning Resistance',
    regex: /Lightning Trap Damage Penetrates (\d+)% Lightning Resistance/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Lightning Trap pierces # additional Targets',
    regex: /Lightning Trap pierces (\d+) additional Targets/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Magma Orb Chains an additional # times',
    regex: /Magma Orb Chains an additional (\d+) times/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Magma Orb Chains an additional time',
    regex: /Magma Orb Chains an additional time/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Malevolence has #% reduced Mana Reservation',
    regex: /Malevolence has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Minions summoned by Your Scout Tower have #% increased Damage',
    regex: /Minions summoned by Your Scout Tower have (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Minions summoned by Your Scout Towers have #% increased Life',
    regex: /Minions summoned by Your Scout Towers have (\d+)% increased Life/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Minions summoned by Your Scout Towers have #% increased Movement Speed',
    regex: /Minions summoned by Your Scout Towers have (\d+)% increased Movement Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Minions summoned by Your Sentinel Towers have #% increased Damage',
    regex: /Minions summoned by Your Sentinel Towers have (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Minions summoned by Your Sentinel Towers have #% increased Life',
    regex: /Minions summoned by Your Sentinel Towers have (\d+)% increased Life/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Minions summoned by Your Sentinel Towers have #% increased Movement Speed',
    regex: /Minions summoned by Your Sentinel Towers have (\d+)% increased Movement Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Minions summoned by Your Summoning Towers have #% increased Damage',
    regex: /Minions summoned by Your Summoning Towers have (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Minions summoned by Your Summoning Towers have #% increased Life',
    regex: /Minions summoned by Your Summoning Towers have (\d+)% increased Life/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Minions summoned by Your Summoning Towers have #% increased Movement Speed',
    regex: /Minions summoned by Your Summoning Towers have (\d+)% increased Movement Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Mirror Arrow and Mirror Arrow Clones deal #% increased Damage',
    regex: /Mirror Arrow and Mirror Arrow Clones deal (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Mirror Arrow and Mirror Arrow Clones have #% increased Attack Speed',
    regex: /Mirror Arrow and Mirror Arrow Clones have (\d+)% increased Attack Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Molten Shell has #% increased Skill Effect Duration',
    regex: /Molten Shell has (\d+)% increased Skill Effect Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Molten Strike fires # additional Projectiles',
    regex: /Molten Strike fires (\d+) additional Projectiles/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Molten Strike fires an additional Projectile',
    regex: /Molten Strike fires an additional Projectile/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Orb of Storms has #% increased Cast Speed',
    regex: /Orb of Storms has (\d+)% increased Cast Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Perforate creates +# Spike',
    regex: /Perforate creates \+(\d+) Spike/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Perforate creates +# Spikes',
    regex: /Perforate creates \+(\d+) Spikes/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Perforate deals #% increased Damage',
    regex: /Perforate deals (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Perforate has #% increased Area of Effect',
    regex: /Perforate has (\d+)% increased Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Pestilent Strike deals #% increased Damage',
    regex: /Pestilent Strike deals (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Pestilent Strike has #% increased Area of Effect',
    regex: /Pestilent Strike has (\d+)% increased Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Pestilent Strike has #% increased Duration',
    regex: /Pestilent Strike has (\d+)% increased Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Plague Bearer Buff grants +#% to Poison Damage over Time Multiplier while Infecting',
    regex: /Plague Bearer Buff grants \+(\d+)% to Poison Damage over Time Multiplier while Infecting/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Plague Bearer deals Damage based on an additional #% of Plague Value',
    regex: /Plague Bearer deals Damage based on an additional (\d+)% of Plague Value/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Power Siphon fires # additional Projectiles',
    regex: /Power Siphon fires (\d+) additional Projectiles/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Power Siphon fires an additional Projectile',
    regex: /Power Siphon fires an additional Projectile/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Precision has #% reduced Mana Reservation',
    regex: /Precision has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Pride has #% reduced Mana Reservation',
    regex: /Pride has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Purifying Flame deals #% increased Damage',
    regex: /Purifying Flame deals (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Purifying Flame has #% increased Area of Effect if targeting Consecrated Ground',
    regex: /Purifying Flame has (\d+)% increased Area of Effect if targeting Consecrated Ground/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Purity of Elements has #% reduced Mana Reservation',
    regex: /Purity of Elements has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Purity of Fire has #% reduced Mana Reservation',
    regex: /Purity of Fire has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Purity of Ice has #% reduced Mana Reservation',
    regex: /Purity of Ice has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Purity of Lightning has #% reduced Mana Reservation',
    regex: /Purity of Lightning has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Pyroclast Mine deals #% increased Damage',
    regex: /Pyroclast Mine deals (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Pyroclast Mine fires # additional Projectiles',
    regex: /Pyroclast Mine fires (\d+) additional Projectiles/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Pyroclast Mine fires an additional Projectile',
    regex: /Pyroclast Mine fires an additional Projectile/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Pyroclast Mine has #% increased Throwing Speed',
    regex: /Pyroclast Mine has (\d+)% increased Throwing Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Rain of Arrows has #% chance to fire an additional sequence of arrows',
    regex: /Rain of Arrows has (\d+)% chance to fire an additional sequence of arrows/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Raised Zombies deal #% increased Damage',
    regex: /Raised Zombies deal (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Raised Zombies have #% increased Attack Speed',
    regex: /Raised Zombies have (\d+)% increased Attack Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Raised Zombies have +#% to Elemental Resistances',
    regex: /Raised Zombies have \+(\d+)% to Elemental Resistances/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Regenerate #% of Life per second if you were Hit Recently',
    regex: /Regenerate (\d+)% of Life per second if you were Hit Recently/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Righteous Fire grants #% increased Spell Damage',
    regex: /Righteous Fire grants (\d+)% increased Spell Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Sand Bladestorms move with #% increased speed',
    regex: /Sand Bladestorms move with (\d+)% increased speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Scourge Arrow creates an additional spore pod at Maximum Stages',
    regex: /Scourge Arrow creates an additional spore pod at Maximum Stages/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Scourge Arrow deals #% increased Damage',
    regex: /Scourge Arrow deals (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Scourge Arrow has #% chance to Poison per Stage',
    regex: /Scourge Arrow has (\d+)% chance to Poison per Stage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Seismic Trap deals #% increased Damage',
    regex: /Seismic Trap deals (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Seismic Trap has #% increased Cooldown Recovery Speed',
    regex: /Seismic Trap has (\d+)% increased Cooldown Recovery Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Seismic Trap has #% increased Skill Effect Duration',
    regex: /Seismic Trap has (\d+)% increased Skill Effect Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Seismic Trap releases an additional Wave',
    regex: /Seismic Trap releases an additional Wave/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Shattering Steel deals #% increased Damage',
    regex: /Shattering Steel deals (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Shattering Steel fires an additional Projectile',
    regex: /Shattering Steel fires an additional Projectile/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Shattering Steel grants Fortify on Hitting an Enemy at Close Range',
    regex: /Shattering Steel grants Fortify on Hitting an Enemy at Close Range/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Shock Nova ring deals #% increased Damage',
    regex: /Shock Nova ring deals (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Siphoning Trap deals #% increased Damage',
    regex: /Siphoning Trap deals (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Siphoning Trap has #% increased Chill Effect',
    regex: /Siphoning Trap has (\d+)% increased Chill Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Siphoning Trap has #% increased Skill Effect Duration',
    regex: /Siphoning Trap has (\d+)% increased Skill Effect Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Siphoning Trap\'s beam to you grants #% reduced Damage taken for each other beam',
    regex: /Siphoning Trap's beam to you grants (\d+)% reduced Damage taken for each other beam/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Skeletons deal #% increased Damage',
    regex: /Skeletons deal (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Smite deals #% increased Damage',
    regex: /Smite deals (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Smite has #% increased Aura Effect',
    regex: /Smite has (\d+)% increased Aura Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Smite has a #% chance for lightning to strike another target',
    regex: /Smite has a (\d+)% chance for lightning to strike another target/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Smoke Mine grants additional #% increased Movement Speed',
    regex: /Smoke Mine grants additional (\d+)% increased Movement Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Soulrend also Hinders Enemies, with #% reduced Movement Speed',
    regex: /Soulrend also Hinders Enemies, with (\d+)% reduced Movement Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Soulrend deals #% increased Damage',
    regex: /Soulrend deals (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Soulrend fires an additional Projectile',
    regex: /Soulrend fires an additional Projectile/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Spark fires # additional Projectiles',
    regex: /Spark fires (\d+) additional Projectiles/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Spectral Shield Throw fires # additional Shard Projectiles',
    regex: /Spectral Shield Throw fires (\d+) additional Shard Projectiles/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Spectres have #% increased Attack and Cast Speed',
    regex: /Spectres have (\d+)% increased Attack and Cast Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Spectres have #% increased Damage',
    regex: /Spectres have (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Spirit Offering grants +#% of Physical Damage as Extra Chaos Damage',
    regex: /Spirit Offering grants \+(\d+)% of Physical Damage as Extra Chaos Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Split Arrow fires # additional Projectiles',
    regex: /Split Arrow fires (\d+) additional Projectiles/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Static Strike has +# maximum Beam Targets',
    regex: /Static Strike has \+(\d+) maximum Beam Targets/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Steelskin Buff can take #% increased amount of Damage',
    regex: /Steelskin Buff can take (\d+)% increased amount of Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Steelskin grants #% additional Physical Damage Reduction',
    regex: /Steelskin grants (\d+)% additional Physical Damage Reduction/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Stone Golems deal #% increased Damage',
    regex: /Stone Golems deal (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Storm Brand Damage Penetrates #% of Branded Enemy\'s Lightning Resistance',
    regex: /Storm Brand Damage Penetrates (\d+)% of Branded Enemy's Lightning Resistance/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Storm Brand deals #% increased Damage',
    regex: /Storm Brand deals (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Storm Brand has a #% chance to Chain an additional time',
    regex: /Storm Brand has a (\d+)% chance to Chain an additional time/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Storm Burst has a #% chance to create an additional Orb',
    regex: /Storm Burst has a (\d+)% chance to create an additional Orb/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Storm Burst has a 15% chance to create an additional Orb',
    regex: /Storm Burst has a 15% chance to create an additional Orb/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Stormblast Mine deals #% increased Damage',
    regex: /Stormblast Mine deals (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Stormblast Mine has #% increased Aura Effect',
    regex: /Stormblast Mine has (\d+)% increased Aura Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Stormblast Mine has #% increased Throwing Speed',
    regex: /Stormblast Mine has (\d+)% increased Throwing Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Summon Raging Spirit has #% chance to summon an extra Minion',
    regex: /Summon Raging Spirit has (\d+)% chance to summon an extra Minion/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Summon Raging Spirit has #% increased Duration',
    regex: /Summon Raging Spirit has (\d+)% increased Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Summon Skitterbots has #% reduced Mana Reservation',
    regex: /Summon Skitterbots has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Summoned Agony Crawler fires # additional Projectiles',
    regex: /Summoned Agony Crawler fires (\d+) additional Projectiles/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Summoned Carrion Golems deal #% increased Damage',
    regex: /Summoned Carrion Golems deal (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Summoned Carrion Golems have +#% to all Elemental Resistances',
    regex: /Summoned Carrion Golems have \+(\d+)% to all Elemental Resistances/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Summoned Holy Relics deal #% increased Damage',
    regex: /Summoned Holy Relics deal (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Summoned Holy Relics have #% increased Area of Effect',
    regex: /Summoned Holy Relics have (\d+)% increased Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Summoned Holy Relics have #% increased Buff Effect',
    regex: /Summoned Holy Relics have (\d+)% increased Buff Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Summoned Raging Spirits deal #% increased Damage',
    regex: /Summoned Raging Spirits deal (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Summoned Sentinels of Dominance deal #% increased Damage',
    regex: /Summoned Sentinels of Dominance deal (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Summoned Skitterbots have #% increased Area of Effect',
    regex: /Summoned Skitterbots have (\d+)% increased Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Tectonic Slam has #% chance to create a Charged Slam',
    regex: /Tectonic Slam has (\d+)% chance to create a Charged Slam/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Tempest Shield chains an additional # times',
    regex: /Tempest Shield chains an additional (\d+) times/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Tornado Shot fires # additional secondary Projectiles',
    regex: /Tornado Shot fires (\d+) additional secondary Projectiles/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Toxic Rain deals #% increased Damage',
    regex: /Toxic Rain deals (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Toxic Rain fires # additional Arrow',
    regex: /Toxic Rain fires (\d+) additional Arrow/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Toxic Rain gains #% of Physical Damage as Extra Chaos Damage',
    regex: /Toxic Rain gains (\d+)% of Physical Damage as Extra Chaos Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Commandment of Blades on Hit',
    regex: /Trigger Commandment of Blades on Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Commandment of Flames on Hit',
    regex: /Trigger Commandment of Flames on Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Commandment of Force on Hit',
    regex: /Trigger Commandment of Force on Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Commandment of Frost on Kill',
    regex: /Trigger Commandment of Frost on Kill/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Commandment of Fury on Hit',
    regex: /Trigger Commandment of Fury on Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Commandment of Inferno on Kill',
    regex: /Trigger Commandment of Inferno on Kill/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Commandment of Ire when Hit',
    regex: /Trigger Commandment of Ire when Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Commandment of Light when you take a Critical Strike',
    regex: /Trigger Commandment of Light when you take a Critical Strike/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Commandment of Reflection when Hit',
    regex: /Trigger Commandment of Reflection when Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Commandment of Spite when Hit',
    regex: /Trigger Commandment of Spite when Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Commandment of the Grave when your Skills or Minions Kill',
    regex: /Trigger Commandment of the Grave when your Skills or Minions Kill/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Commandment of the Tempest on Hit',
    regex: /Trigger Commandment of the Tempest on Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Commandment of Thunder on Kill',
    regex: /Trigger Commandment of Thunder on Kill/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Commandment of War on Kill',
    regex: /Trigger Commandment of War on Kill/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Commandment of Winter when Hit',
    regex: /Trigger Commandment of Winter when Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Decree of Blades on Hit',
    regex: /Trigger Decree of Blades on Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Decree of Flames on Hit',
    regex: /Trigger Decree of Flames on Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Decree of Force on Hit',
    regex: /Trigger Decree of Force on Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Decree of Frost on Kill',
    regex: /Trigger Decree of Frost on Kill/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Decree of Fury on Hit',
    regex: /Trigger Decree of Fury on Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Decree of Inferno on Kill',
    regex: /Trigger Decree of Inferno on Kill/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Decree of Ire when Hit',
    regex: /Trigger Decree of Ire when Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Decree of Light when you take a Critical Strike',
    regex: /Trigger Decree of Light when you take a Critical Strike/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Decree of Reflection when Hit',
    regex: /Trigger Decree of Reflection when Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Decree of Spite when Hit',
    regex: /Trigger Decree of Spite when Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Decree of the Grave when your Skills or Minions Kill',
    regex: /Trigger Decree of the Grave when your Skills or Minions Kill/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Decree of the Tempest on Hit',
    regex: /Trigger Decree of the Tempest on Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Decree of Thunder on Kill',
    regex: /Trigger Decree of Thunder on Kill/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Decree of War on Kill',
    regex: /Trigger Decree of War on Kill/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Decree of Winter when Hit',
    regex: /Trigger Decree of Winter when Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Edict of Blades on Hit',
    regex: /Trigger Edict of Blades on Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Edict of Flames on Hit',
    regex: /Trigger Edict of Flames on Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Edict of Force on Hit',
    regex: /Trigger Edict of Force on Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Edict of Frost on Kill',
    regex: /Trigger Edict of Frost on Kill/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Edict of Fury on Hit',
    regex: /Trigger Edict of Fury on Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Edict of Inferno on Kill',
    regex: /Trigger Edict of Inferno on Kill/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Edict of Ire when Hit',
    regex: /Trigger Edict of Ire when Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Edict of Light when you take a Critical Strike',
    regex: /Trigger Edict of Light when you take a Critical Strike/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Edict of Reflection when Hit',
    regex: /Trigger Edict of Reflection when Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Edict of Spite when Hit',
    regex: /Trigger Edict of Spite when Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Edict of the Grave when your Skills or Minions Kill',
    regex: /Trigger Edict of the Grave when your Skills or Minions Kill/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Edict of the Tempest on Hit',
    regex: /Trigger Edict of the Tempest on Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Edict of Thunder on Kill',
    regex: /Trigger Edict of Thunder on Kill/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Edict of War on Kill',
    regex: /Trigger Edict of War on Kill/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Edict of Winter when Hit',
    regex: /Trigger Edict of Winter when Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Word of Blades on Hit',
    regex: /Trigger Word of Blades on Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Word of Flames on Hit',
    regex: /Trigger Word of Flames on Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Word of Force on Hit',
    regex: /Trigger Word of Force on Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Word of Frost on Kill',
    regex: /Trigger Word of Frost on Kill/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Word of Fury on Hit',
    regex: /Trigger Word of Fury on Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Word of Inferno on Kill',
    regex: /Trigger Word of Inferno on Kill/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Word of Ire when Hit',
    regex: /Trigger Word of Ire when Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Word of Light when you take a Critical Strike',
    regex: /Trigger Word of Light when you take a Critical Strike/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Word of Reflection when Hit',
    regex: /Trigger Word of Reflection when Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Word of Spite when Hit',
    regex: /Trigger Word of Spite when Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Word of the Grave when your Skills or Minions Kill',
    regex: /Trigger Word of the Grave when your Skills or Minions Kill/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Word of the Tempest on Hit',
    regex: /Trigger Word of the Tempest on Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Word of Thunder on Kill',
    regex: /Trigger Word of Thunder on Kill/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Word of War on Kill',
    regex: /Trigger Word of War on Kill/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Trigger Word of Winter when Hit',
    regex: /Trigger Word of Winter when Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Unearth Spawns corpses with +# Level',
    regex: /Unearth Spawns corpses with \+(\d+) Level/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Venom Gyre deals #% increased Damage',
    regex: /Venom Gyre deals (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Venom Gyre has a #% chance to inflict Withered for 2 seconds on Hit',
    regex: /Venom Gyre has a (\d+)% chance to inflict Withered for 2 seconds on Hit/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Venom Gyre has a #% chance to keep caught Projectiles fired by using Whirling Blades',
    regex: /Venom Gyre has a (\d+)% chance to keep caught Projectiles fired by using Whirling Blades/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Vitality has #% reduced Mana Reservation',
    regex: /Vitality has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Volatile Dead Consumes up to # additional corpses',
    regex: /Volatile Dead Consumes up to (\d+) additional corpses/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Vortex has #% increased Area of Effect when Cast on Frostbolt',
    regex: /Vortex has (\d+)% increased Area of Effect when Cast on Frostbolt/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Vortex has #% increased Cooldown Recovery Speed',
    regex: /Vortex has (\d+)% increased Cooldown Recovery Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'War Banner has #% increased Aura Effect',
    regex: /War Banner has (\d+)% increased Aura Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Wave of Conviction deals #% increased Damage',
    regex: /Wave of Conviction deals (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Wave of Conviction has #% increased Duration',
    regex: /Wave of Conviction has (\d+)% increased Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Wave of Conviction\'s Exposure applies #% Elemental Resistance',
    regex: /Wave of Conviction's Exposure applies (\d+)% Elemental Resistance/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Wild Strike Chains an additional # times',
    regex: /Wild Strike Chains an additional (\d+) times/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Winter Orb deals #% increased Damage',
    regex: /Winter Orb deals (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Winter Orb has #% increased Area of Effect per Stage',
    regex: /Winter Orb has (\d+)% increased Area of Effect per Stage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Winter Orb has +# Maximum Stages',
    regex: /Winter Orb has \+(\d+) Maximum Stages/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Wither has #% increased Area of Effect',
    regex: /Wither has (\d+)% increased Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Wither has #% increased Duration',
    regex: /Wither has (\d+)% increased Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Withering Step has #% increased Elusive Effect',
    regex: /Withering Step has (\d+)% increased Elusive Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Withering Step inflicts # additional Withered Debuffs',
    regex: /Withering Step inflicts (\d+) additional Withered Debuffs/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Wrath has #% reduced Mana Reservation',
    regex: /Wrath has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Arc Towers deal #% increased Damage',
    regex: /Your Arc Towers deal (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Arc Towers have # additional chains',
    regex: /Your Arc Towers have (\d+) additional chains/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Arc Towers have #% increased Range',
    regex: /Your Arc Towers have (\d+)% increased Range/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Arc Towers repeats # additional Times',
    regex: /Your Arc Towers repeats (\d+) additional Times/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Chilling Towers deal #% increased Damage',
    regex: /Your Chilling Towers deal (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Chilling Towers freeze enemies for # seconds while they are affected by chilling beams',
    regex: /Your Chilling Towers freeze enemies for (\d+) seconds while they are affected by chilling beams/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Chilling Towers have #% increased Duration',
    regex: /Your Chilling Towers have (\d+)% increased Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Chilling Towers have #% increased effect of Chill',
    regex: /Your Chilling Towers have (\d+)% increased effect of Chill/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Chilling Towers have #% increased Range',
    regex: /Your Chilling Towers have (\d+)% increased Range/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Empowering Towers also grant #% increased Cast Speed',
    regex: /Your Empowering Towers also grant (\d+)% increased Cast Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Empowering Towers also grant #% increased Damage',
    regex: /Your Empowering Towers also grant (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Empowering Towers have #% increased Effect',
    regex: /Your Empowering Towers have (\d+)% increased Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Empowering Towers have #% increased Range',
    regex: /Your Empowering Towers have (\d+)% increased Range/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Fireball Towers deal #% increased Damage',
    regex: /Your Fireball Towers deal (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Fireball Towers fire an additional # Projectiles',
    regex: /Your Fireball Towers fire an additional (\d+) Projectiles/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Fireball Towers have #% increased Cast Speed',
    regex: /Your Fireball Towers have (\d+)% increased Cast Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Fireball Towers have #% increased Range',
    regex: /Your Fireball Towers have (\d+)% increased Range/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Fireball Towers Projectiles fire in a Nova',
    regex: /Your Fireball Towers Projectiles fire in a Nova/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Flamethrower Towers deal #% increased Damage',
    regex: /Your Flamethrower Towers deal (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Flamethrower Towers deal full damage to Fire Enemies',
    regex: /Your Flamethrower Towers deal full damage to Fire Enemies/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Flamethrower Towers have #% increased Cast Speed',
    regex: /Your Flamethrower Towers have (\d+)% increased Cast Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Flamethrower Towers have #% increased Range',
    regex: /Your Flamethrower Towers have (\d+)% increased Range/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Freezebolt Tower deal full damage to Cold Enemies',
    regex: /Your Freezebolt Tower deal full damage to Cold Enemies/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Freezebolt Towers deal #% increased Damage',
    regex: /Your Freezebolt Towers deal (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Freezebolt Towers fire # additional Projectiles',
    regex: /Your Freezebolt Towers fire (\d+) additional Projectiles/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Freezebolt Towers have #% increased Range',
    regex: /Your Freezebolt Towers have (\d+)% increased Range/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Glacial Cage Towers have #% increased Cooldown Recovery',
    regex: /Your Glacial Cage Towers have (\d+)% increased Cooldown Recovery/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Glacial Cage Towers have #% increased Duration',
    regex: /Your Glacial Cage Towers have (\d+)% increased Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Glacial Cage Towers have #% increased Range',
    regex: /Your Glacial Cage Towers have (\d+)% increased Range/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Imbuing Towers also grant #% increased Critical Strike Chance',
    regex: /Your Imbuing Towers also grant (\d+)% increased Critical Strike Chance/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Imbuing Towers also grant #% increased Damage',
    regex: /Your Imbuing Towers also grant (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Imbuing Towers have #% increased Effect',
    regex: /Your Imbuing Towers have (\d+)% increased Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Imbuing Towers have #% increased Range',
    regex: /Your Imbuing Towers have (\d+)% increased Range/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Lightning Storm Towers deal #% increased Damage',
    regex: /Your Lightning Storm Towers deal (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Lightning Storm Towers have #% increased explosion Area of Effect',
    regex: /Your Lightning Storm Towers have (\d+)% increased explosion Area of Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Lightning Storm Towers have #% reduced Impact Delay',
    regex: /Your Lightning Storm Towers have (\d+)% reduced Impact Delay/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Meteor Towers always Stun',
    regex: /Your Meteor Towers always Stun/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Meteor Towers deal #% increased Damage',
    regex: /Your Meteor Towers deal (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Meteor Towers drop an additional Meteor',
    regex: /Your Meteor Towers drop an additional Meteor/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Meteor Towers have #% increased Range',
    regex: /Your Meteor Towers have (\d+)% increased Range/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Scout Towers have #% increased Range',
    regex: /Your Scout Towers have (\d+)% increased Range/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Seismic Towers deal #% increased Damage',
    regex: /Your Seismic Towers deal (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Seismic Towers has #% increased length and range of Cascades',
    regex: /Your Seismic Towers has (\d+)% increased length and range of Cascades/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Seismic Towers have #% increased Range',
    regex: /Your Seismic Towers have (\d+)% increased Range/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Seismic Towers have #% increased Stun Duration',
    regex: /Your Seismic Towers have (\d+)% increased Stun Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Seismic Towers have an additional Cascade',
    regex: /Your Seismic Towers have an additional Cascade/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Sentinel Towers have #% increased Range',
    regex: /Your Sentinel Towers have (\d+)% increased Range/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Shock Nova Towers deal #% increased Damage',
    regex: /Your Shock Nova Towers deal (\d+)% increased Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Shock Nova Towers deal full damage to Lightning Enemies',
    regex: /Your Shock Nova Towers deal full damage to Lightning Enemies/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Shock Nova Towers have #% increased area of effect per repeat',
    regex: /Your Shock Nova Towers have (\d+)% increased area of effect per repeat/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Shock Nova Towers have #% increased effect of Shock',
    regex: /Your Shock Nova Towers have (\d+)% increased effect of Shock/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Shock Nova Towers have #% increased Range',
    regex: /Your Shock Nova Towers have (\d+)% increased Range/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Shock Nova Towers repeats # additional Times',
    regex: /Your Shock Nova Towers repeats (\d+) additional Times/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Smothering Towers also grant #% reduced Damage',
    regex: /Your Smothering Towers also grant (\d+)% reduced Damage/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Smothering Towers also grant #% reduced Movement Speed',
    regex: /Your Smothering Towers also grant (\d+)% reduced Movement Speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Smothering Towers have #% increased Effect',
    regex: /Your Smothering Towers have (\d+)% increased Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Smothering Towers have #% increased Range',
    regex: /Your Smothering Towers have (\d+)% increased Range/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Stone Gaze Cage Towers have #% increased Range',
    regex: /Your Stone Gaze Cage Towers have (\d+)% increased Range/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Stone Gaze Towers have #% increased Cooldown Recovery',
    regex: /Your Stone Gaze Towers have (\d+)% increased Cooldown Recovery/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Stone Gaze Towers have #% increased Duration',
    regex: /Your Stone Gaze Towers have (\d+)% increased Duration/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Stone Gaze Towers have #% reduced Petrification Delay',
    regex: /Your Stone Gaze Towers have (\d+)% reduced Petrification Delay/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Summoning Tower summons # additional Minions',
    regex: /Your Summoning Tower summons (\d+) additional Minions/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Summoning Towers have#% increased Range',
    regex: /Your Summoning Towers have(\d+)% increased Range/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Temporal Towers also grant you #% increased action speed',
    regex: /Your Temporal Towers also grant you (\d+)% increased action speed/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Temporal Towers effects decay #% slower',
    regex: /Your Temporal Towers effects decay (\d+)% slower/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Temporal Towers have #% increased Effect',
    regex: /Your Temporal Towers have (\d+)% increased Effect/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Your Temporal Towers have #% increased Range',
    regex: /Your Temporal Towers have (\d+)% increased Range/,
    type: ModFilterType.ENCHANTMENT,
  },
  {
    label: 'Zealotry has #% reduced Mana Reservation',
    regex: /Zealotry has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.ENCHANTMENT,
  },
];
/* fractured */
export const fracturedModRegexes: IMod[] = [
  {
    label: '# Physical Damage taken from Attack Hits',
    regex: /(\d+) Physical Damage taken from Attack Hits/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '# Physical Damage taken from Hits',
    regex: /(\d+) Physical Damage taken from Hits/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '# to # added Fire Damage against Burning Enemies',
    regex: /(\d+) to (\d+) added Fire Damage against Burning Enemies/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '# to # Cold Damage per Frenzy Charge',
    regex: /(\d+) to (\d+) Cold Damage per Frenzy Charge/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% additional Physical Damage Reduction',
    regex: /(\d+)% additional Physical Damage Reduction/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% additional Physical Damage Reduction against Abyssal Monsters',
    regex: /(\d+)% additional Physical Damage Reduction against Abyssal Monsters/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% additional Physical Damage Reduction during any Flask Effect',
    regex: /(\d+)% additional Physical Damage Reduction during any Flask Effect/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% additional Physical Damage Reduction if you weren\'t Damaged by a Hit Recently',
    regex: /(\d+)% additional Physical Damage Reduction if you weren't Damaged by a Hit Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% additional Physical Damage Reduction while moving',
    regex: /(\d+)% additional Physical Damage Reduction while moving/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance for Bleeding inflicted with this Weapon to deal 100% more Damage',
    regex: /(\d+)% chance for Bleeding inflicted with this Weapon to deal 100% more Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance for Poisons inflicted with this Weapon to deal 100% more Damage',
    regex: /(\d+)% chance for Poisons inflicted with this Weapon to deal 100% more Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance for your Flasks to not consume Charges',
    regex: /(\d+)% chance for your Flasks to not consume Charges/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to Avoid being Chilled',
    regex: /(\d+)% chance to Avoid being Chilled/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to Avoid being Frozen',
    regex: /(\d+)% chance to Avoid being Frozen/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to Avoid being Ignited',
    regex: /(\d+)% chance to Avoid being Ignited/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to Avoid being Poisoned',
    regex: /(\d+)% chance to Avoid being Poisoned/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to Avoid being Shocked',
    regex: /(\d+)% chance to Avoid being Shocked/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to Avoid being Stunned',
    regex: /(\d+)% chance to Avoid being Stunned/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to avoid Bleeding',
    regex: /(\d+)% chance to avoid Bleeding/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to Avoid Cold Damage from Hits',
    regex: /(\d+)% chance to Avoid Cold Damage from Hits/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to Avoid Elemental Ailments',
    regex: /(\d+)% chance to Avoid Elemental Ailments/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to Avoid Fire Damage from Hits',
    regex: /(\d+)% chance to Avoid Fire Damage from Hits/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to Avoid interruption from Stuns while Casting',
    regex: /(\d+)% chance to Avoid interruption from Stuns while Casting/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to Avoid Lightning Damage from Hits',
    regex: /(\d+)% chance to Avoid Lightning Damage from Hits/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to avoid Projectiles',
    regex: /(\d+)% chance to avoid Projectiles/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to Blind Enemies on Hit with Attacks',
    regex: /(\d+)% chance to Blind Enemies on Hit with Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% Chance to Block Attack Damage',
    regex: /(\d+)% Chance to Block Attack Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% Chance to Block Spell Damage',
    regex: /(\d+)% Chance to Block Spell Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to Cast Level 20 Fire Burst on Hit',
    regex: /(\d+)% chance to Cast Level 20 Fire Burst on Hit/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to cause Bleeding on Hit',
    regex: /(\d+)% chance to cause Bleeding on Hit/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to Chill Attackers for 4 seconds on Block',
    regex: /(\d+)% chance to Chill Attackers for 4 seconds on Block/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to deal Double Damage',
    regex: /(\d+)% chance to deal Double Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to Dodge Attack and Spell Hits if you\'ve been Hit Recently',
    regex: /(\d+)% chance to Dodge Attack and Spell Hits if you've been Hit Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to Dodge Attack Hits',
    regex: /(\d+)% chance to Dodge Attack Hits/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to Dodge Attack Hits if you have Blocked Recently',
    regex: /(\d+)% chance to Dodge Attack Hits if you have Blocked Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to Dodge Spell Hits',
    regex: /(\d+)% chance to Dodge Spell Hits/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to Freeze',
    regex: /(\d+)% chance to Freeze/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to Freeze, Shock and Ignite',
    regex: /(\d+)% chance to Freeze, Shock and Ignite/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to gain a Frenzy Charge on Kill',
    regex: /(\d+)% chance to gain a Frenzy Charge on Kill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to gain a Frenzy Charge when Hit',
    regex: /(\d+)% chance to gain a Frenzy Charge when Hit/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to gain a Frenzy Charge when you Block',
    regex: /(\d+)% chance to gain a Frenzy Charge when you Block/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to gain a Frenzy Charge when you Hit a Rare or Unique Enemy',
    regex: /(\d+)% chance to gain a Frenzy Charge when you Hit a Rare or Unique Enemy/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to gain a Power Charge on Critical Strike',
    regex: /(\d+)% chance to gain a Power Charge on Critical Strike/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to gain a Power Charge on Kill',
    regex: /(\d+)% chance to gain a Power Charge on Kill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to gain a Power Charge when you Block',
    regex: /(\d+)% chance to gain a Power Charge when you Block/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to gain a Power, Frenzy or Endurance Charge on Kill',
    regex: /(\d+)% chance to gain a Power, Frenzy or Endurance Charge on Kill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to gain an additional Vaal Soul on Kill',
    regex: /(\d+)% chance to gain an additional Vaal Soul on Kill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to gain an Endurance Charge on Critical Strike',
    regex: /(\d+)% chance to gain an Endurance Charge on Critical Strike/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to gain an Endurance Charge on Kill',
    regex: /(\d+)% chance to gain an Endurance Charge on Kill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to gain an Endurance Charge when you Block',
    regex: /(\d+)% chance to gain an Endurance Charge when you Block/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to gain an Endurance Charge when you Hit a Bleeding Enemy',
    regex: /(\d+)% chance to gain an Endurance Charge when you Hit a Bleeding Enemy/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to gain an Endurance Charge when you Taunt an Enemy',
    regex: /(\d+)% chance to gain an Endurance Charge when you Taunt an Enemy/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to gain Fortify when you Stun an Enemy with Melee Damage',
    regex: /(\d+)% chance to gain Fortify when you Stun an Enemy with Melee Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to gain Onslaught for 4 seconds on Kill',
    regex: /(\d+)% chance to gain Onslaught for 4 seconds on Kill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to gain Onslaught when you use a Flask',
    regex: /(\d+)% chance to gain Onslaught when you use a Flask/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to gain Phasing for 4 seconds on Kill',
    regex: /(\d+)% chance to gain Phasing for 4 seconds on Kill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to gain Unholy Might for 3 seconds on Kill',
    regex: /(\d+)% chance to gain Unholy Might for 3 seconds on Kill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to Gain Unholy Might for 4 seconds on Melee Kill',
    regex: /(\d+)% chance to Gain Unholy Might for 4 seconds on Melee Kill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to Hinder Enemies on Hit with Spells, with 30% reduced Movement Speed',
    regex: /(\d+)% chance to Hinder Enemies on Hit with Spells, with 30% reduced Movement Speed/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to Ignite',
    regex: /(\d+)% chance to Ignite/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to Intimidate Enemies for 4 seconds on Hit',
    regex: /(\d+)% chance to Intimidate Enemies for 4 seconds on Hit/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to Knock Enemies Back on hit',
    regex: /(\d+)% chance to Knock Enemies Back on hit/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to Maim on Hit',
    regex: /(\d+)% chance to Maim on Hit/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to Poison on Hit',
    regex: /(\d+)% chance to Poison on Hit/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to Recover 10% of Mana when you use a Skill',
    regex: /(\d+)% chance to Recover 10% of Mana when you use a Skill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to Shock',
    regex: /(\d+)% chance to Shock/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to Shock Attackers for 4 seconds on Block',
    regex: /(\d+)% chance to Shock Attackers for 4 seconds on Block/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance to Taunt Enemies on Hit with Attacks',
    regex: /(\d+)% chance to Taunt Enemies on Hit with Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% chance when Hit for double Armour effect',
    regex: /(\d+)% chance when Hit for double Armour effect/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% faster start of Energy Shield Recharge',
    regex: /(\d+)% faster start of Energy Shield Recharge/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% Global chance to Blind Enemies on hit',
    regex: /(\d+)% Global chance to Blind Enemies on hit/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Accuracy Rating if you haven\'t Killed Recently',
    regex: /(\d+)% increased Accuracy Rating if you haven't Killed Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Accuracy Rating per Frenzy Charge',
    regex: /(\d+)% increased Accuracy Rating per Frenzy Charge/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Area Damage',
    regex: /(\d+)% increased Area Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Area of Effect',
    regex: /(\d+)% increased Area of Effect/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Area of Effect if you have Stunned an Enemy Recently',
    regex: /(\d+)% increased Area of Effect if you have Stunned an Enemy Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Area of Effect of Aura Skills',
    regex: /(\d+)% increased Area of Effect of Aura Skills/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Area of Effect of Curse Skills',
    regex: /(\d+)% increased Area of Effect of Curse Skills/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Area of Effect per 50 Strength',
    regex: /(\d+)% increased Area of Effect per 50 Strength/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Area of Effect per Endurance Charge',
    regex: /(\d+)% increased Area of Effect per Endurance Charge/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Armour',
    regex: /(\d+)% increased Armour/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Armour and Energy Shield',
    regex: /(\d+)% increased Armour and Energy Shield/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Armour and Evasion',
    regex: /(\d+)% increased Armour and Evasion/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Armour if you haven\'t Killed Recently',
    regex: /(\d+)% increased Armour if you haven't Killed Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Armour, Evasion and Energy Shield',
    regex: /(\d+)% increased Armour, Evasion and Energy Shield/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Attack and Cast Speed',
    regex: /(\d+)% increased Attack and Cast Speed/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Attack and Cast Speed during any Flask Effect',
    regex: /(\d+)% increased Attack and Cast Speed during any Flask Effect/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Attack and Cast Speed if you\'ve Hit an Enemy Recently',
    regex: /(\d+)% increased Attack and Cast Speed if you've Hit an Enemy Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Attack Damage',
    regex: /(\d+)% increased Attack Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Attack Damage while holding a Shield',
    regex: /(\d+)% increased Attack Damage while holding a Shield/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Attack Speed',
    regex: /(\d+)% increased Attack Speed/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Attack Speed during any Flask Effect',
    regex: /(\d+)% increased Attack Speed during any Flask Effect/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Attack Speed if you\'ve dealt a Critical Strike Recently',
    regex: /(\d+)% increased Attack Speed if you've dealt a Critical Strike Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Attack Speed if you\'ve Killed Recently',
    regex: /(\d+)% increased Attack Speed if you've Killed Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Attack Speed while Dual Wielding',
    regex: /(\d+)% increased Attack Speed while Dual Wielding/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Attack Speed while holding a Shield',
    regex: /(\d+)% increased Attack Speed while holding a Shield/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Attack Speed with Axes',
    regex: /(\d+)% increased Attack Speed with Axes/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Attack Speed with Bows',
    regex: /(\d+)% increased Attack Speed with Bows/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Attack Speed with Claws',
    regex: /(\d+)% increased Attack Speed with Claws/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Attack Speed with Daggers',
    regex: /(\d+)% increased Attack Speed with Daggers/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Attack Speed with Maces and Sceptres',
    regex: /(\d+)% increased Attack Speed with Maces and Sceptres/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Attack Speed with One Handed Melee Weapons',
    regex: /(\d+)% increased Attack Speed with One Handed Melee Weapons/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Attack Speed with Staves',
    regex: /(\d+)% increased Attack Speed with Staves/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Attack Speed with Swords',
    regex: /(\d+)% increased Attack Speed with Swords/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Attack Speed with Two Handed Melee Weapons',
    regex: /(\d+)% increased Attack Speed with Two Handed Melee Weapons/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Attack Speed with Unarmed Attacks',
    regex: /(\d+)% increased Attack Speed with Unarmed Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Attack Speed with Wands',
    regex: /(\d+)% increased Attack Speed with Wands/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Attributes',
    regex: /(\d+)% increased Attributes/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Bleeding Duration',
    regex: /(\d+)% increased Bleeding Duration/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Burning Damage',
    regex: /(\d+)% increased Burning Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Cast Speed',
    regex: /(\d+)% increased Cast Speed/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Cast Speed during any Flask Effect',
    regex: /(\d+)% increased Cast Speed during any Flask Effect/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Cast Speed if a Minion has been Killed Recently',
    regex: /(\d+)% increased Cast Speed if a Minion has been Killed Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Cast Speed if you\'ve dealt a Critical Strike Recently',
    regex: /(\d+)% increased Cast Speed if you've dealt a Critical Strike Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Cast Speed if you\'ve Killed Recently',
    regex: /(\d+)% increased Cast Speed if you've Killed Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Cast Speed while Dual Wielding',
    regex: /(\d+)% increased Cast Speed while Dual Wielding/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Cast Speed while holding a Shield',
    regex: /(\d+)% increased Cast Speed while holding a Shield/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Cast Speed while wielding a Staff',
    regex: /(\d+)% increased Cast Speed while wielding a Staff/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Cast Speed with Chaos Skills',
    regex: /(\d+)% increased Cast Speed with Chaos Skills/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Cast Speed with Cold Skills',
    regex: /(\d+)% increased Cast Speed with Cold Skills/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Cast Speed with Fire Skills',
    regex: /(\d+)% increased Cast Speed with Fire Skills/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Cast Speed with Lightning Skills',
    regex: /(\d+)% increased Cast Speed with Lightning Skills/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Chaos Damage',
    regex: /(\d+)% increased Chaos Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Chill and Freeze Duration on Enemies',
    regex: /(\d+)% increased Chill and Freeze Duration on Enemies/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Cold Damage',
    regex: /(\d+)% increased Cold Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Cooldown Recovery Speed',
    regex: /(\d+)% increased Cooldown Recovery Speed/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Cooldown Recovery Speed for throwing Traps',
    regex: /(\d+)% increased Cooldown Recovery Speed for throwing Traps/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Critical Strike Chance',
    regex: /(\d+)% increased Critical Strike Chance/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Critical Strike Chance against Blinded Enemies',
    regex: /(\d+)% increased Critical Strike Chance against Blinded Enemies/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Critical Strike Chance against Poisoned Enemies',
    regex: /(\d+)% increased Critical Strike Chance against Poisoned Enemies/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Critical Strike Chance against Shocked Enemies',
    regex: /(\d+)% increased Critical Strike Chance against Shocked Enemies/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Critical Strike Chance for Spells',
    regex: /(\d+)% increased Critical Strike Chance for Spells/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Critical Strike Chance if you have Killed Recently',
    regex: /(\d+)% increased Critical Strike Chance if you have Killed Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Critical Strike Chance if you haven\'t dealt a Critical Strike Recently',
    regex: /(\d+)% increased Critical Strike Chance if you haven't dealt a Critical Strike Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Critical Strike Chance while holding a Shield',
    regex: /(\d+)% increased Critical Strike Chance while holding a Shield/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Critical Strike Chance with Axes',
    regex: /(\d+)% increased Critical Strike Chance with Axes/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Critical Strike Chance with Bows',
    regex: /(\d+)% increased Critical Strike Chance with Bows/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Critical Strike Chance with Chaos Skills',
    regex: /(\d+)% increased Critical Strike Chance with Chaos Skills/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Critical Strike Chance with Claws',
    regex: /(\d+)% increased Critical Strike Chance with Claws/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Critical Strike Chance with Cold Skills',
    regex: /(\d+)% increased Critical Strike Chance with Cold Skills/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Critical Strike Chance with Daggers',
    regex: /(\d+)% increased Critical Strike Chance with Daggers/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Critical Strike Chance with Elemental Skills',
    regex: /(\d+)% increased Critical Strike Chance with Elemental Skills/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Critical Strike Chance with Fire Skills',
    regex: /(\d+)% increased Critical Strike Chance with Fire Skills/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Critical Strike Chance with Lightning Skills',
    regex: /(\d+)% increased Critical Strike Chance with Lightning Skills/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Critical Strike Chance with Maces and Sceptres',
    regex: /(\d+)% increased Critical Strike Chance with Maces and Sceptres/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Critical Strike Chance with Mines',
    regex: /(\d+)% increased Critical Strike Chance with Mines/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Critical Strike Chance with One Handed Melee Weapons',
    regex: /(\d+)% increased Critical Strike Chance with One Handed Melee Weapons/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Critical Strike Chance with Staves',
    regex: /(\d+)% increased Critical Strike Chance with Staves/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Critical Strike Chance with Swords',
    regex: /(\d+)% increased Critical Strike Chance with Swords/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Critical Strike Chance with Traps',
    regex: /(\d+)% increased Critical Strike Chance with Traps/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Critical Strike Chance with Two Handed Melee Weapons',
    regex: /(\d+)% increased Critical Strike Chance with Two Handed Melee Weapons/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Critical Strike Chance with Wands',
    regex: /(\d+)% increased Critical Strike Chance with Wands/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Damage',
    regex: /(\d+)% increased Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Damage against Abyssal Monsters',
    regex: /(\d+)% increased Damage against Abyssal Monsters/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Damage during any Flask Effect',
    regex: /(\d+)% increased Damage during any Flask Effect/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Damage if you\'ve Killed Recently',
    regex: /(\d+)% increased Damage if you've Killed Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Damage over Time',
    regex: /(\d+)% increased Damage over Time/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Damage over Time while Dual Wielding',
    regex: /(\d+)% increased Damage over Time while Dual Wielding/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Damage over Time while holding a Shield',
    regex: /(\d+)% increased Damage over Time while holding a Shield/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Damage over Time while wielding a Two Handed Weapon',
    regex: /(\d+)% increased Damage over Time while wielding a Two Handed Weapon/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Damage per 1% Chance to Block Attack Damage',
    regex: /(\d+)% increased Damage per 1% Chance to Block Attack Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Damage per 15 Dexterity',
    regex: /(\d+)% increased Damage per 15 Dexterity/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Damage per 15 Intelligence',
    regex: /(\d+)% increased Damage per 15 Intelligence/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Damage per 15 Strength',
    regex: /(\d+)% increased Damage per 15 Strength/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Damage per Power Charge',
    regex: /(\d+)% increased Damage per Power Charge/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Damage when on Full Life',
    regex: /(\d+)% increased Damage when on Full Life/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Damage with Ailments',
    regex: /(\d+)% increased Damage with Ailments/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Damage with Axes',
    regex: /(\d+)% increased Damage with Axes/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Damage with Bleeding',
    regex: /(\d+)% increased Damage with Bleeding/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Damage with Bows',
    regex: /(\d+)% increased Damage with Bows/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Damage with Claws',
    regex: /(\d+)% increased Damage with Claws/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Damage with Daggers',
    regex: /(\d+)% increased Damage with Daggers/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Damage with Hits against Chilled Enemies',
    regex: /(\d+)% increased Damage with Hits against Chilled Enemies/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Damage with Hits and Ailments per Curse on Enemy',
    regex: /(\d+)% increased Damage with Hits and Ailments per Curse on Enemy/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Damage with Maces and Sceptres',
    regex: /(\d+)% increased Damage with Maces and Sceptres/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Damage with One Handed Weapons',
    regex: /(\d+)% increased Damage with One Handed Weapons/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Damage with Poison',
    regex: /(\d+)% increased Damage with Poison/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Damage with Staves',
    regex: /(\d+)% increased Damage with Staves/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Damage with Swords',
    regex: /(\d+)% increased Damage with Swords/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Damage with Two Handed Weapons',
    regex: /(\d+)% increased Damage with Two Handed Weapons/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Damage with Wands',
    regex: /(\d+)% increased Damage with Wands/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Dexterity',
    regex: /(\d+)% increased Dexterity/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Effect of Auras on you',
    regex: /(\d+)% increased Effect of Auras on you/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Effect of Chill',
    regex: /(\d+)% increased Effect of Chill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Effect of Fortify on you',
    regex: /(\d+)% increased Effect of Fortify on you/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Effect of Shock',
    regex: /(\d+)% increased Effect of Shock/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Effect of your Curses',
    regex: /(\d+)% increased Effect of your Curses/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Elemental Damage',
    regex: /(\d+)% increased Elemental Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Elemental Damage with Attack Skills',
    regex: /(\d+)% increased Elemental Damage with Attack Skills/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Endurance Charge Duration',
    regex: /(\d+)% increased Endurance Charge Duration/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Energy Shield',
    regex: /(\d+)% increased Energy Shield/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Energy Shield from Body Armour',
    regex: /(\d+)% increased Energy Shield from Body Armour/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Energy Shield Recharge Rate',
    regex: /(\d+)% increased Energy Shield Recharge Rate/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Energy Shield Recovery rate',
    regex: /(\d+)% increased Energy Shield Recovery rate/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Evasion and Energy Shield',
    regex: /(\d+)% increased Evasion and Energy Shield/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Evasion Rating',
    regex: /(\d+)% increased Evasion Rating/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Evasion Rating while moving',
    regex: /(\d+)% increased Evasion Rating while moving/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Experience gain',
    regex: /(\d+)% increased Experience gain/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Fire Damage',
    regex: /(\d+)% increased Fire Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Fishing Line Strength',
    regex: /(\d+)% increased Fishing Line Strength/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Fishing Range',
    regex: /(\d+)% increased Fishing Range/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Flask Charges gained',
    regex: /(\d+)% increased Flask Charges gained/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Flask Effect Duration',
    regex: /(\d+)% increased Flask Effect Duration/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Flask Life Recovery rate',
    regex: /(\d+)% increased Flask Life Recovery rate/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Flask Mana Recovery rate',
    regex: /(\d+)% increased Flask Mana Recovery rate/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Freeze Duration on Enemies',
    regex: /(\d+)% increased Freeze Duration on Enemies/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Frenzy Charge Duration',
    regex: /(\d+)% increased Frenzy Charge Duration/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Global Accuracy Rating',
    regex: /(\d+)% increased Global Accuracy Rating/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Global Critical Strike Chance',
    regex: /(\d+)% increased Global Critical Strike Chance/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Global Defences',
    regex: /(\d+)% increased Global Defences/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Global Evasion Rating when on Full Life',
    regex: /(\d+)% increased Global Evasion Rating when on Full Life/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Global Physical Damage',
    regex: /(\d+)% increased Global Physical Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Ignite Duration on Enemies',
    regex: /(\d+)% increased Ignite Duration on Enemies/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Intelligence',
    regex: /(\d+)% increased Intelligence/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Life Recovery from Flasks',
    regex: /(\d+)% increased Life Recovery from Flasks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Life Recovery rate',
    regex: /(\d+)% increased Life Recovery rate/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Light Radius',
    regex: /(\d+)% increased Light Radius/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Lightning Damage',
    regex: /(\d+)% increased Lightning Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Mana Recovery rate',
    regex: /(\d+)% increased Mana Recovery rate/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Mana Regeneration Rate',
    regex: /(\d+)% increased Mana Regeneration Rate/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Mana Regeneration Rate while moving',
    regex: /(\d+)% increased Mana Regeneration Rate while moving/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased maximum Energy Shield',
    regex: /(\d+)% increased maximum Energy Shield/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased maximum Life',
    regex: /(\d+)% increased maximum Life/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased maximum Mana',
    regex: /(\d+)% increased maximum Mana/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Maximum total Recovery per second from Life Leech',
    regex: /(\d+)% increased Maximum total Recovery per second from Life Leech/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Melee Critical Strike Chance',
    regex: /(\d+)% increased Melee Critical Strike Chance/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Melee Damage',
    regex: /(\d+)% increased Melee Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Melee Damage during any Flask Effect',
    regex: /(\d+)% increased Melee Damage during any Flask Effect/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Melee Physical Damage with Unarmed Attacks',
    regex: /(\d+)% increased Melee Physical Damage with Unarmed Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Mine Damage',
    regex: /(\d+)% increased Mine Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Mine Duration',
    regex: /(\d+)% increased Mine Duration/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Mine Throwing Speed',
    regex: /(\d+)% increased Mine Throwing Speed/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Minion Accuracy Rating',
    regex: /(\d+)% increased Minion Accuracy Rating/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Minion Duration',
    regex: /(\d+)% increased Minion Duration/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Movement Speed',
    regex: /(\d+)% increased Movement Speed/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Movement Speed during any Flask Effect',
    regex: /(\d+)% increased Movement Speed during any Flask Effect/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Movement Speed if you haven\'t been Hit Recently',
    regex: /(\d+)% increased Movement Speed if you haven't been Hit Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Movement Speed if you haven\'t taken Damage Recently',
    regex: /(\d+)% increased Movement Speed if you haven't taken Damage Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Movement Speed if you\'ve Hit an Enemy Recently',
    regex: /(\d+)% increased Movement Speed if you've Hit an Enemy Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Movement Speed if you\'ve Killed Recently',
    regex: /(\d+)% increased Movement Speed if you've Killed Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Movement speed while on Burning, Chilled or Shocked ground',
    regex: /(\d+)% increased Movement speed while on Burning, Chilled or Shocked ground/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Physical Damage',
    regex: /(\d+)% increased Physical Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Physical Damage taken',
    regex: /(\d+)% increased Physical Damage taken/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Physical Weapon Damage while Dual Wielding',
    regex: /(\d+)% increased Physical Weapon Damage while Dual Wielding/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Poison Duration',
    regex: /(\d+)% increased Poison Duration/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Power Charge Duration',
    regex: /(\d+)% increased Power Charge Duration/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Projectile Attack Damage',
    regex: /(\d+)% increased Projectile Attack Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Projectile Attack Damage during any Flask Effect',
    regex: /(\d+)% increased Projectile Attack Damage during any Flask Effect/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Projectile Attack Damage per 200 Accuracy Rating',
    regex: /(\d+)% increased Projectile Attack Damage per 200 Accuracy Rating/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Projectile Damage',
    regex: /(\d+)% increased Projectile Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Projectile Speed',
    regex: /(\d+)% increased Projectile Speed/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Quantity of Fish Caught',
    regex: /(\d+)% increased Quantity of Fish Caught/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Quantity of Items found',
    regex: /(\d+)% increased Quantity of Items found/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Rarity of Fish Caught',
    regex: /(\d+)% increased Rarity of Fish Caught/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Rarity of Items found',
    regex: /(\d+)% increased Rarity of Items found/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Rarity of Items found during any Flask Effect',
    regex: /(\d+)% increased Rarity of Items found during any Flask Effect/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Rarity of Items found from Slain Unique Enemies',
    regex: /(\d+)% increased Rarity of Items found from Slain Unique Enemies/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Shock Duration on Enemies',
    regex: /(\d+)% increased Shock Duration on Enemies/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Skill Effect Duration',
    regex: /(\d+)% increased Skill Effect Duration/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Spell Damage',
    regex: /(\d+)% increased Spell Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Spell Damage during any Flask Effect',
    regex: /(\d+)% increased Spell Damage during any Flask Effect/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Spell Damage per 10 Intelligence',
    regex: /(\d+)% increased Spell Damage per 10 Intelligence/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Spell Damage per 10 Strength',
    regex: /(\d+)% increased Spell Damage per 10 Strength/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Spell Damage per 16 Dexterity',
    regex: /(\d+)% increased Spell Damage per 16 Dexterity/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Spell Damage per 16 Intelligence',
    regex: /(\d+)% increased Spell Damage per 16 Intelligence/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Spell Damage per 16 Strength',
    regex: /(\d+)% increased Spell Damage per 16 Strength/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Spell Damage while Dual Wielding',
    regex: /(\d+)% increased Spell Damage while Dual Wielding/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Spell Damage while holding a Shield',
    regex: /(\d+)% increased Spell Damage while holding a Shield/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Spell Damage while wielding a Staff',
    regex: /(\d+)% increased Spell Damage while wielding a Staff/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Strength',
    regex: /(\d+)% increased Strength/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Stun and Block Recovery',
    regex: /(\d+)% increased Stun and Block Recovery/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Stun Duration on Enemies',
    regex: /(\d+)% increased Stun Duration on Enemies/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased total Recovery per second from Life Leech',
    regex: /(\d+)% increased total Recovery per second from Life Leech/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Totem Damage',
    regex: /(\d+)% increased Totem Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Totem Life',
    regex: /(\d+)% increased Totem Life/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Totem Placement speed',
    regex: /(\d+)% increased Totem Placement speed/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Trap and Mine Throwing Speed',
    regex: /(\d+)% increased Trap and Mine Throwing Speed/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Trap Damage',
    regex: /(\d+)% increased Trap Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Trap Duration',
    regex: /(\d+)% increased Trap Duration/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Trap Throwing Speed',
    regex: /(\d+)% increased Trap Throwing Speed/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Vaal Skill Critical Strike Chance',
    regex: /(\d+)% increased Vaal Skill Critical Strike Chance/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Vaal Skill Effect Duration',
    regex: /(\d+)% increased Vaal Skill Effect Duration/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Weapon Critical Strike Chance while Dual Wielding',
    regex: /(\d+)% increased Weapon Critical Strike Chance while Dual Wielding/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% increased Weapon Damage while Dual Wielding',
    regex: /(\d+)% increased Weapon Damage while Dual Wielding/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% of Attack Damage Leeched as Life',
    regex: /(\d+)% of Attack Damage Leeched as Life/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% of Chaos Damage Leeched as Life',
    regex: /(\d+)% of Chaos Damage Leeched as Life/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% of Cold Damage Leeched as Life',
    regex: /(\d+)% of Cold Damage Leeched as Life/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% of Damage is taken from Mana before Life',
    regex: /(\d+)% of Damage is taken from Mana before Life/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% of Damage taken gained as Mana over 4 seconds when Hit',
    regex: /(\d+)% of Damage taken gained as Mana over 4 seconds when Hit/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% of Fire Damage Leeched as Life',
    regex: /(\d+)% of Fire Damage Leeched as Life/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% of Lightning Damage Leeched as Life',
    regex: /(\d+)% of Lightning Damage Leeched as Life/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% of Physical Attack Damage Leeched as Life',
    regex: /(\d+)% of Physical Attack Damage Leeched as Life/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% of Physical Attack Damage Leeched as Mana',
    regex: /(\d+)% of Physical Attack Damage Leeched as Mana/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% of Physical Damage Converted to Chaos Damage',
    regex: /(\d+)% of Physical Damage Converted to Chaos Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% of Physical Damage Converted to Cold Damage',
    regex: /(\d+)% of Physical Damage Converted to Cold Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% of Physical Damage Converted to Fire Damage',
    regex: /(\d+)% of Physical Damage Converted to Fire Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% of Physical Damage Converted to Lightning Damage',
    regex: /(\d+)% of Physical Damage Converted to Lightning Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% of Physical Damage from Hits taken as Chaos Damage',
    regex: /(\d+)% of Physical Damage from Hits taken as Chaos Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% of Physical Damage from Hits taken as Cold Damage',
    regex: /(\d+)% of Physical Damage from Hits taken as Cold Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% of Physical Damage from Hits taken as Fire Damage',
    regex: /(\d+)% of Physical Damage from Hits taken as Fire Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% of Physical Damage from Hits taken as Lightning Damage',
    regex: /(\d+)% of Physical Damage from Hits taken as Lightning Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% of Physical Damage Leeched as Life',
    regex: /(\d+)% of Physical Damage Leeched as Life/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% of Spell Damage Leeched as Energy Shield',
    regex: /(\d+)% of Spell Damage Leeched as Energy Shield/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% of Spell Damage Leeched as Life',
    regex: /(\d+)% of Spell Damage Leeched as Life/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% of Spell Damage Leeched as Mana',
    regex: /(\d+)% of Spell Damage Leeched as Mana/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% reduced Attribute Requirements',
    regex: /(\d+)% reduced Attribute Requirements/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% reduced Chaos Damage taken',
    regex: /(\d+)% reduced Chaos Damage taken/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% reduced Chaos Damage taken over time',
    regex: /(\d+)% reduced Chaos Damage taken over time/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% reduced Cold Damage taken',
    regex: /(\d+)% reduced Cold Damage taken/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% reduced Effect of Curses on you',
    regex: /(\d+)% reduced Effect of Curses on you/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% reduced Elemental Ailment Duration on you',
    regex: /(\d+)% reduced Elemental Ailment Duration on you/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% reduced Elemental Damage Taken while stationary',
    regex: /(\d+)% reduced Elemental Damage Taken while stationary/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% reduced Enemy Stun Threshold',
    regex: /(\d+)% reduced Enemy Stun Threshold/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% reduced Fire Damage taken',
    regex: /(\d+)% reduced Fire Damage taken/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% reduced Fishing Pool Consumption',
    regex: /(\d+)% reduced Fishing Pool Consumption/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% reduced Flask Charges used',
    regex: /(\d+)% reduced Flask Charges used/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% reduced Lightning Damage taken',
    regex: /(\d+)% reduced Lightning Damage taken/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% reduced Mana Cost of Skills',
    regex: /(\d+)% reduced Mana Cost of Skills/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% reduced Mana Reserved',
    regex: /(\d+)% reduced Mana Reserved/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% reduced Physical Damage taken over time',
    regex: /(\d+)% reduced Physical Damage taken over time/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% reduced Reflected Damage taken',
    regex: /(\d+)% reduced Reflected Damage taken/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% reduced Reflected Elemental Damage taken',
    regex: /(\d+)% reduced Reflected Elemental Damage taken/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% reduced Reflected Physical Damage taken',
    regex: /(\d+)% reduced Reflected Physical Damage taken/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '#% reduced Soul Cost of Vaal Skills',
    regex: /(\d+)% reduced Soul Cost of Vaal Skills/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# Armour if you\'ve Blocked Recently',
    regex: /\+(\d+) Armour if you've Blocked Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# Energy Shield gained for each Enemy hit by your Attacks',
    regex: /\+(\d+) Energy Shield gained for each Enemy hit by your Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# Life gained for each Blinded Enemy Hit by this Weapon',
    regex: /\+(\d+) Life gained for each Blinded Enemy Hit by this Weapon/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# Life gained for each Enemy hit by Attacks',
    regex: /\+(\d+) Life gained for each Enemy hit by Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# Life gained for each Enemy hit by your Attacks',
    regex: /\+(\d+) Life gained for each Enemy hit by your Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# Life gained for each Enemy hit by your Spells',
    regex: /\+(\d+) Life gained for each Enemy hit by your Spells/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# Life gained on Kill',
    regex: /\+(\d+) Life gained on Kill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# Life gained when you Block',
    regex: /\+(\d+) Life gained when you Block/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# Mana gained for each Enemy hit by your Attacks',
    regex: /\+(\d+) Mana gained for each Enemy hit by your Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# Mana gained for each Enemy Hit by your Spells',
    regex: /\+(\d+) Mana gained for each Enemy Hit by your Spells/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# Mana gained on Kill',
    regex: /\+(\d+) Mana gained on Kill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# Mana gained when you Block',
    regex: /\+(\d+) Mana gained when you Block/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Accuracy Rating',
    regex: /\+(\d+) to Accuracy Rating/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to all Attributes',
    regex: /\+(\d+) to all Attributes/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Armour',
    regex: /\+(\d+) to Armour/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Armour if you\'ve Hit an Enemy Recently',
    regex: /\+(\d+) to Armour if you've Hit an Enemy Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Dexterity',
    regex: /\+(\d+) to Dexterity/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Dexterity and Intelligence',
    regex: /\+(\d+) to Dexterity and Intelligence/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Evasion Rating',
    regex: /\+(\d+) to Evasion Rating/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Evasion Rating if Hit an Enemy Recently',
    regex: /\+(\d+) to Evasion Rating if Hit an Enemy Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Intelligence',
    regex: /\+(\d+) to Intelligence/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Level of all Chaos Spell Skill Gems',
    regex: /\+(\d+) to Level of all Chaos Spell Skill Gems/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Level of all Cold Spell Skill Gems',
    regex: /\+(\d+) to Level of all Cold Spell Skill Gems/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Level of all Fire Spell Skill Gems',
    regex: /\+(\d+) to Level of all Fire Spell Skill Gems/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Level of all Lightning Spell Skill Gems',
    regex: /\+(\d+) to Level of all Lightning Spell Skill Gems/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Level of all Minion Skill Gems',
    regex: /\+(\d+) to Level of all Minion Skill Gems/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Level of all Physical Spell Skill Gems',
    regex: /\+(\d+) to Level of all Physical Spell Skill Gems/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Level of all Raise Spectre Gems',
    regex: /\+(\d+) to Level of all Raise Spectre Gems/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Level of all Spell Skill Gems',
    regex: /\+(\d+) to Level of all Spell Skill Gems/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Level of Socketed Active Skill Gems',
    regex: /\+(\d+) to Level of Socketed Active Skill Gems/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Level of Socketed Aura Gems',
    regex: /\+(\d+) to Level of Socketed Aura Gems/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Level of Socketed Bow Gems',
    regex: /\+(\d+) to Level of Socketed Bow Gems/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Level of Socketed Chaos Gems',
    regex: /\+(\d+) to Level of Socketed Chaos Gems/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Level of Socketed Cold Gems',
    regex: /\+(\d+) to Level of Socketed Cold Gems/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Level of Socketed Curse Gems',
    regex: /\+(\d+) to Level of Socketed Curse Gems/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Level of Socketed Dexterity Gems',
    regex: /\+(\d+) to Level of Socketed Dexterity Gems/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Level of Socketed Fire Gems',
    regex: /\+(\d+) to Level of Socketed Fire Gems/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Level of Socketed Gems',
    regex: /\+(\d+) to Level of Socketed Gems/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Level of Socketed Intelligence Gems',
    regex: /\+(\d+) to Level of Socketed Intelligence Gems/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Level of Socketed Lightning Gems',
    regex: /\+(\d+) to Level of Socketed Lightning Gems/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Level of Socketed Melee Gems',
    regex: /\+(\d+) to Level of Socketed Melee Gems/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Level of Socketed Minion Gems',
    regex: /\+(\d+) to Level of Socketed Minion Gems/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Level of Socketed Spell Gems',
    regex: /\+(\d+) to Level of Socketed Spell Gems/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Level of Socketed Strength Gems',
    regex: /\+(\d+) to Level of Socketed Strength Gems/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Level of Socketed Support Gems',
    regex: /\+(\d+) to Level of Socketed Support Gems/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Level of Socketed Trap Gems',
    regex: /\+(\d+) to Level of Socketed Trap Gems/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Level of Socketed Trap or Mine Gems',
    regex: /\+(\d+) to Level of Socketed Trap or Mine Gems/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Maximum Endurance Charges',
    regex: /\+(\d+) to Maximum Endurance Charges/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to maximum Energy Shield',
    regex: /\+(\d+) to maximum Energy Shield/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Maximum Frenzy Charges',
    regex: /\+(\d+) to Maximum Frenzy Charges/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to maximum Life',
    regex: /\+(\d+) to maximum Life/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to maximum Mana',
    regex: /\+(\d+) to maximum Mana/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to maximum number of Raised Zombies',
    regex: /\+(\d+) to maximum number of Raised Zombies/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to maximum number of Skeletons',
    regex: /\+(\d+) to maximum number of Skeletons/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to maximum number of Spectres',
    regex: /\+(\d+) to maximum number of Spectres/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to maximum number of Summoned Totems',
    regex: /\+(\d+) to maximum number of Summoned Totems/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Maximum Power Charges',
    regex: /\+(\d+) to Maximum Power Charges/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Melee Weapon and Unarmed Attack range',
    regex: /\+(\d+) to Melee Weapon and Unarmed Attack range/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Melee Weapon Range if you have Killed Recently',
    regex: /\+(\d+) to Melee Weapon Range if you have Killed Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Strength',
    regex: /\+(\d+) to Strength/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Strength and Dexterity',
    regex: /\+(\d+) to Strength and Dexterity/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Strength and Intelligence',
    regex: /\+(\d+) to Strength and Intelligence/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+# to Weapon range',
    regex: /\+(\d+) to Weapon range/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% Chance to Block',
    regex: /\+(\d+)% Chance to Block/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% Chance to Block Attack Damage if there are at least 5 nearby Enemies',
    regex: /\+(\d+)% Chance to Block Attack Damage if there are at least 5 nearby Enemies/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% Chance to Block Attack Damage if you were Damaged by a Hit Recently',
    regex: /\+(\d+)% Chance to Block Attack Damage if you were Damaged by a Hit Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% Chance to Block Attack Damage per Endurance Charge',
    regex: /\+(\d+)% Chance to Block Attack Damage per Endurance Charge/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% Chance to Block Attack Damage while Dual Wielding',
    regex: /\+(\d+)% Chance to Block Attack Damage while Dual Wielding/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% Chance to Block Attack Damage while holding a Shield',
    regex: /\+(\d+)% Chance to Block Attack Damage while holding a Shield/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% Chance to Block Attack Damage while wielding a Staff',
    regex: /\+(\d+)% Chance to Block Attack Damage while wielding a Staff/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% Chance to Block Projectile Attack Damage',
    regex: /\+(\d+)% Chance to Block Projectile Attack Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% Chance to Block Spell Damage if you were Damaged by a Hit Recently',
    regex: /\+(\d+)% Chance to Block Spell Damage if you were Damaged by a Hit Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% Chance to Block Spell Damage while Dual Wielding',
    regex: /\+(\d+)% Chance to Block Spell Damage while Dual Wielding/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% Chance to Block Spell Damage while holding a Shield',
    regex: /\+(\d+)% Chance to Block Spell Damage while holding a Shield/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% Chance to Block Spell Damage while wielding a Staff',
    regex: /\+(\d+)% Chance to Block Spell Damage while wielding a Staff/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% chance to Evade Attacks',
    regex: /\+(\d+)% chance to Evade Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% Chaos Resistance against Damage Over Time',
    regex: /\+(\d+)% Chaos Resistance against Damage Over Time/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to all Elemental Resistances',
    regex: /\+(\d+)% to all Elemental Resistances/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to all maximum Resistances',
    regex: /\+(\d+)% to all maximum Resistances/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Chaos Damage over Time Multiplier',
    regex: /\+(\d+)% to Chaos Damage over Time Multiplier/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Chaos Resistance',
    regex: /\+(\d+)% to Chaos Resistance/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Chaos Resistance during any Flask Effect',
    regex: /\+(\d+)% to Chaos Resistance during any Flask Effect/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Cold and Lightning Resistances',
    regex: /\+(\d+)% to Cold and Lightning Resistances/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Cold Damage over Time Multiplier',
    regex: /\+(\d+)% to Cold Damage over Time Multiplier/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Cold Resistance',
    regex: /\+(\d+)% to Cold Resistance/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Critical Strike Multiplier against Enemies that are on Full Life',
    regex: /\+(\d+)% to Critical Strike Multiplier against Enemies that are on Full Life/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Critical Strike Multiplier for Spells',
    regex: /\+(\d+)% to Critical Strike Multiplier for Spells/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Critical Strike Multiplier if you have Blocked Recently',
    regex: /\+(\d+)% to Critical Strike Multiplier if you have Blocked Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Critical Strike Multiplier if you haven\'t dealt a Critical Strike Recently',
    regex: /\+(\d+)% to Critical Strike Multiplier if you haven't dealt a Critical Strike Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Critical Strike Multiplier if you\'ve Killed Recently',
    regex: /\+(\d+)% to Critical Strike Multiplier if you've Killed Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Critical Strike Multiplier while Dual Wielding',
    regex: /\+(\d+)% to Critical Strike Multiplier while Dual Wielding/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Critical Strike Multiplier with Axes',
    regex: /\+(\d+)% to Critical Strike Multiplier with Axes/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Critical Strike Multiplier with Bows',
    regex: /\+(\d+)% to Critical Strike Multiplier with Bows/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Critical Strike Multiplier with Chaos Skills',
    regex: /\+(\d+)% to Critical Strike Multiplier with Chaos Skills/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Critical Strike Multiplier with Claws',
    regex: /\+(\d+)% to Critical Strike Multiplier with Claws/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Critical Strike Multiplier with Cold Skills',
    regex: /\+(\d+)% to Critical Strike Multiplier with Cold Skills/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Critical Strike Multiplier with Daggers',
    regex: /\+(\d+)% to Critical Strike Multiplier with Daggers/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Critical Strike Multiplier with Elemental Skills',
    regex: /\+(\d+)% to Critical Strike Multiplier with Elemental Skills/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Critical Strike Multiplier with Fire Skills',
    regex: /\+(\d+)% to Critical Strike Multiplier with Fire Skills/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Critical Strike Multiplier with Lightning Skills',
    regex: /\+(\d+)% to Critical Strike Multiplier with Lightning Skills/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Critical Strike Multiplier with Maces and Sceptres',
    regex: /\+(\d+)% to Critical Strike Multiplier with Maces and Sceptres/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Critical Strike Multiplier with Mines',
    regex: /\+(\d+)% to Critical Strike Multiplier with Mines/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Critical Strike Multiplier with One Handed Melee Weapons',
    regex: /\+(\d+)% to Critical Strike Multiplier with One Handed Melee Weapons/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Critical Strike Multiplier with Staves',
    regex: /\+(\d+)% to Critical Strike Multiplier with Staves/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Critical Strike Multiplier with Swords',
    regex: /\+(\d+)% to Critical Strike Multiplier with Swords/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Critical Strike Multiplier with Traps',
    regex: /\+(\d+)% to Critical Strike Multiplier with Traps/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Critical Strike Multiplier with Two Handed Melee Weapons',
    regex: /\+(\d+)% to Critical Strike Multiplier with Two Handed Melee Weapons/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Critical Strike Multiplier with Wands',
    regex: /\+(\d+)% to Critical Strike Multiplier with Wands/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Fire and Cold Resistances',
    regex: /\+(\d+)% to Fire and Cold Resistances/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Fire and Lightning Resistances',
    regex: /\+(\d+)% to Fire and Lightning Resistances/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Fire Damage over Time Multiplier',
    regex: /\+(\d+)% to Fire Damage over Time Multiplier/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Fire Resistance',
    regex: /\+(\d+)% to Fire Resistance/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Global Critical Strike Multiplier',
    regex: /\+(\d+)% to Global Critical Strike Multiplier/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Lightning Resistance',
    regex: /\+(\d+)% to Lightning Resistance/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to maximum Chance to Block Attack Damage',
    regex: /\+(\d+)% to maximum Chance to Block Attack Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to maximum Chaos Resistance',
    regex: /\+(\d+)% to maximum Chaos Resistance/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to maximum Cold Resistance',
    regex: /\+(\d+)% to maximum Cold Resistance/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to maximum Fire Resistance',
    regex: /\+(\d+)% to maximum Fire Resistance/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to maximum Lightning Resistance',
    regex: /\+(\d+)% to maximum Lightning Resistance/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Melee Critical Strike Multiplier',
    regex: /\+(\d+)% to Melee Critical Strike Multiplier/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Melee Critical Strike Multiplier while holding a Shield',
    regex: /\+(\d+)% to Melee Critical Strike Multiplier while holding a Shield/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Physical Damage over Time Multiplier',
    regex: /\+(\d+)% to Physical Damage over Time Multiplier/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Quality',
    regex: /\+(\d+)% to Quality/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '+#% to Quality of Socketed Support Gems',
    regex: /\+(\d+)% to Quality of Socketed Support Gems/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: '-# to Total Mana Cost of Skills',
    regex: /-(\d+) to Total Mana Cost of Skills/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Chaos Damage',
    regex: /Adds (\d+) to (\d+) Chaos Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Chaos Damage to Attacks',
    regex: /Adds (\d+) to (\d+) Chaos Damage to Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Chaos Damage to Spells',
    regex: /Adds (\d+) to (\d+) Chaos Damage to Spells/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Chaos Damage to Spells while Dual Wielding',
    regex: /Adds (\d+) to (\d+) Chaos Damage to Spells while Dual Wielding/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Chaos Damage to Spells while holding a Shield',
    regex: /Adds (\d+) to (\d+) Chaos Damage to Spells while holding a Shield/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Chaos Damage to Spells while wielding a Two Handed Weapon',
    regex: /Adds (\d+) to (\d+) Chaos Damage to Spells while wielding a Two Handed Weapon/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Cold Damage',
    regex: /Adds (\d+) to (\d+) Cold Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Cold Damage against Chilled or Frozen Enemies',
    regex: /Adds (\d+) to (\d+) Cold Damage against Chilled or Frozen Enemies/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Cold Damage to Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Cold Damage to Attacks with this Weapon per 10 Dexterity',
    regex: /Adds (\d+) to (\d+) Cold Damage to Attacks with this Weapon per 10 Dexterity/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Cold Damage to Axe Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Axe Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Cold Damage to Bow Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Bow Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Cold Damage to Claw Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Claw Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Cold Damage to Dagger Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Dagger Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Cold Damage to Mace and Sceptre Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Mace and Sceptre Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Cold Damage to Spells',
    regex: /Adds (\d+) to (\d+) Cold Damage to Spells/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Cold Damage to Spells and Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Spells and Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Cold Damage to Spells while Dual Wielding',
    regex: /Adds (\d+) to (\d+) Cold Damage to Spells while Dual Wielding/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Cold Damage to Spells while holding a Shield',
    regex: /Adds (\d+) to (\d+) Cold Damage to Spells while holding a Shield/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Cold Damage to Spells while wielding a Two Handed Weapon',
    regex: /Adds (\d+) to (\d+) Cold Damage to Spells while wielding a Two Handed Weapon/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Cold Damage to Staff Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Staff Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Cold Damage to Sword Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Sword Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Cold Damage to Wand Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Wand Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Fire Damage',
    regex: /Adds (\d+) to (\d+) Fire Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Fire Damage against Ignited Enemies',
    regex: /Adds (\d+) to (\d+) Fire Damage against Ignited Enemies/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Fire Damage if you\'ve Blocked Recently',
    regex: /Adds (\d+) to (\d+) Fire Damage if you've Blocked Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Fire Damage to Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Fire Damage to Attacks with this Weapon per 10 Strength',
    regex: /Adds (\d+) to (\d+) Fire Damage to Attacks with this Weapon per 10 Strength/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Fire Damage to Axe Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Axe Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Fire Damage to Bow Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Bow Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Fire Damage to Claw Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Claw Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Fire Damage to Dagger Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Dagger Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Fire Damage to Mace and Sceptre Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Mace and Sceptre Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Fire Damage to Spells',
    regex: /Adds (\d+) to (\d+) Fire Damage to Spells/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Fire Damage to Spells and Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Spells and Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Fire Damage to Spells while Dual Wielding',
    regex: /Adds (\d+) to (\d+) Fire Damage to Spells while Dual Wielding/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Fire Damage to Spells while holding a Shield',
    regex: /Adds (\d+) to (\d+) Fire Damage to Spells while holding a Shield/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Fire Damage to Spells while wielding a Two Handed Weapon',
    regex: /Adds (\d+) to (\d+) Fire Damage to Spells while wielding a Two Handed Weapon/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Fire Damage to Staff Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Staff Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Fire Damage to Sword Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Sword Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Fire Damage to Wand Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Wand Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Lightning Damage',
    regex: /Adds (\d+) to (\d+) Lightning Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Lightning Damage against Shocked Enemies',
    regex: /Adds (\d+) to (\d+) Lightning Damage against Shocked Enemies/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Lightning Damage to Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Lightning Damage to Attacks with this Weapon per 10 Intelligence',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Attacks with this Weapon per 10 Intelligence/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Lightning Damage to Axe Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Axe Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Lightning Damage to Bow Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Bow Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Lightning Damage to Claw Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Claw Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Lightning Damage to Dagger Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Dagger Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Lightning Damage to Mace and Sceptre Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Mace and Sceptre Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Lightning Damage to Spells',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Spells/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Lightning Damage to Spells and Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Spells and Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Lightning Damage to Spells while Dual Wielding',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Spells while Dual Wielding/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Lightning Damage to Spells while holding a Shield',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Spells while holding a Shield/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Lightning Damage to Spells while wielding a Two Handed Weapon',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Spells while wielding a Two Handed Weapon/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Lightning Damage to Staff Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Staff Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Lightning Damage to Sword Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Sword Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Lightning Damage to Wand Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Wand Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Physical Damage',
    regex: /Adds (\d+) to (\d+) Physical Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Physical Damage against Bleeding Enemies',
    regex: /Adds (\d+) to (\d+) Physical Damage against Bleeding Enemies/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Physical Damage against Poisoned Enemies',
    regex: /Adds (\d+) to (\d+) Physical Damage against Poisoned Enemies/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Physical Damage to Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Physical Damage to Axe Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Axe Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Physical Damage to Bow Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Bow Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Physical Damage to Claw Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Claw Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Physical Damage to Dagger Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Dagger Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Physical Damage to Mace and Sceptre Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Mace and Sceptre Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Physical Damage to Spells',
    regex: /Adds (\d+) to (\d+) Physical Damage to Spells/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Physical Damage to Spells while Dual Wielding',
    regex: /Adds (\d+) to (\d+) Physical Damage to Spells while Dual Wielding/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Physical Damage to Spells while holding a Shield',
    regex: /Adds (\d+) to (\d+) Physical Damage to Spells while holding a Shield/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Physical Damage to Spells while wielding a Two Handed Weapon',
    regex: /Adds (\d+) to (\d+) Physical Damage to Spells while wielding a Two Handed Weapon/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Physical Damage to Staff Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Staff Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Physical Damage to Sword Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Sword Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Adds # to # Physical Damage to Wand Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Wand Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Area is inhabited by an additional Invasion Boss',
    regex: /Area is inhabited by an additional Invasion Boss/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Attacks have #% chance to cause Bleeding',
    regex: /Attacks have (\d+)% chance to cause Bleeding/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Attacks have #% chance to Maim on Hit',
    regex: /Attacks have (\d+)% chance to Maim on Hit/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Attacks have +#% to Critical Strike Chance',
    regex: /Attacks have \+(\d+)% to Critical Strike Chance/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Attacks with this Weapon Penetrate #% Elemental Resistances',
    regex: /Attacks with this Weapon Penetrate (\d+)% Elemental Resistances/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Auras from your Skills grant #% increased Damage to you and Allies',
    regex: /Auras from your Skills grant (\d+)% increased Damage to you and Allies/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Bow Attacks fire an additional Arrow',
    regex: /Bow Attacks fire an additional Arrow/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Cannot be Chilled or Frozen while moving',
    regex: /Cannot be Chilled or Frozen while moving/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Cannot be Frozen',
    regex: /Cannot be Frozen/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Cannot be Poisoned',
    regex: /Cannot be Poisoned/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Cannot be Shocked or Ignited while moving',
    regex: /Cannot be Shocked or Ignited while moving/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Chill Nearby Enemies when you Block',
    regex: /Chill Nearby Enemies when you Block/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Corrupted Blood cannot be inflicted on you',
    regex: /Corrupted Blood cannot be inflicted on you/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Culling Strike',
    regex: /Culling Strike/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Curse Enemies with Level # Assassin\'s Mark on Hit',
    regex: /Curse Enemies with Level (\d+) Assassin's Mark on Hit/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Curse Enemies with Level # Conductivity on Hit',
    regex: /Curse Enemies with Level (\d+) Conductivity on Hit/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Curse Enemies with Level # Despair on Hit',
    regex: /Curse Enemies with Level (\d+) Despair on Hit/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Curse Enemies with Level # Flammability on Hit',
    regex: /Curse Enemies with Level (\d+) Flammability on Hit/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Curse Enemies with Level # Frostbite on Hit',
    regex: /Curse Enemies with Level (\d+) Frostbite on Hit/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Curse Enemies with Level # Poacher\'s Mark on Hit',
    regex: /Curse Enemies with Level (\d+) Poacher's Mark on Hit/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Curse Enemies with Level # Vulnerability on Hit',
    regex: /Curse Enemies with Level (\d+) Vulnerability on Hit/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Curse Enemies with Level # Warlord\'s Mark on Hit',
    regex: /Curse Enemies with Level (\d+) Warlord's Mark on Hit/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Curse Skills have #% increased Cast Speed',
    regex: /Curse Skills have (\d+)% increased Cast Speed/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Curse Skills have #% increased Skill Effect Duration',
    regex: /Curse Skills have (\d+)% increased Skill Effect Duration/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Damage Penetrates #% Cold Resistance',
    regex: /Damage Penetrates (\d+)% Cold Resistance/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Damage Penetrates #% Elemental Resistance if you haven\'t Killed Recently',
    regex: /Damage Penetrates (\d+)% Elemental Resistance if you haven't Killed Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Damage Penetrates #% Elemental Resistances',
    regex: /Damage Penetrates (\d+)% Elemental Resistances/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Damage Penetrates #% Elemental Resistances during any Flask Effect',
    regex: /Damage Penetrates (\d+)% Elemental Resistances during any Flask Effect/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Damage Penetrates #% Fire Resistance',
    regex: /Damage Penetrates (\d+)% Fire Resistance/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Damage Penetrates #% Lightning Resistance',
    regex: /Damage Penetrates (\d+)% Lightning Resistance/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Drops Burning Ground while moving, dealing # Fire Damage per second',
    regex: /Drops Burning Ground while moving, dealing (\d+) Fire Damage per second/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Enemies have #% reduced Evasion if you have Hit them Recently',
    regex: /Enemies have (\d+)% reduced Evasion if you have Hit them Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Enemies killed explode dealing #% of their Life as Fire Damage',
    regex: /Enemies killed explode dealing (\d+)% of their Life as Fire Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Eternal Iron Hook',
    regex: /Eternal Iron Hook/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Flasks applied to you have #% increased Effect',
    regex: /Flasks applied to you have (\d+)% increased Effect/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Gain #% of Cold Damage as Extra Chaos Damage',
    regex: /Gain (\d+)% of Cold Damage as Extra Chaos Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Gain #% of Elemental Damage as Extra Chaos Damage',
    regex: /Gain (\d+)% of Elemental Damage as Extra Chaos Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Gain #% of Fire Damage as Extra Chaos Damage',
    regex: /Gain (\d+)% of Fire Damage as Extra Chaos Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Gain #% of Lightning Damage as Extra Chaos Damage',
    regex: /Gain (\d+)% of Lightning Damage as Extra Chaos Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Gain #% of Non-Chaos Damage as extra Chaos Damage',
    regex: /Gain (\d+)% of Non-Chaos Damage as extra Chaos Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Gain #% of Physical Damage as Extra Chaos Damage',
    regex: /Gain (\d+)% of Physical Damage as Extra Chaos Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Gain #% of Physical Damage as Extra Cold Damage',
    regex: /Gain (\d+)% of Physical Damage as Extra Cold Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Gain #% of Physical Damage as Extra Damage of a random Element',
    regex: /Gain (\d+)% of Physical Damage as Extra Damage of a random Element/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Gain #% of Physical Damage as Extra Fire Damage',
    regex: /Gain (\d+)% of Physical Damage as Extra Fire Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Gain #% of Physical Damage as Extra Fire Damage if you\'ve dealt a Critical Strike Recently',
    regex: /Gain (\d+)% of Physical Damage as Extra Fire Damage if you've dealt a Critical Strike Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Gain #% of Physical Damage as Extra Lightning Damage',
    regex: /Gain (\d+)% of Physical Damage as Extra Lightning Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Gain a Power Charge after Spending a total of 200 Mana',
    regex: /Gain a Power Charge after Spending a total of 200 Mana/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Gain an Endurance Charge every # seconds while Stationary',
    regex: /Gain an Endurance Charge every (\d+) seconds while Stationary/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Gain an Endurance, Frenzy or Power charge when you Block',
    regex: /Gain an Endurance, Frenzy or Power charge when you Block/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Gain Onslaught for 3 seconds when Hit',
    regex: /Gain Onslaught for 3 seconds when Hit/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Grants Level # Abyssal Cry Skill',
    regex: /Grants Level (\d+) Abyssal Cry Skill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Grants Level # Anger Skill',
    regex: /Grants Level (\d+) Anger Skill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Grants Level # Aspect of the Avian Skill',
    regex: /Grants Level (\d+) Aspect of the Avian Skill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Grants Level # Aspect of the Cat Skill',
    regex: /Grants Level (\d+) Aspect of the Cat Skill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Grants Level # Aspect of the Crab Skill',
    regex: /Grants Level (\d+) Aspect of the Crab Skill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Grants Level # Aspect of the Spider Skill',
    regex: /Grants Level (\d+) Aspect of the Spider Skill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Grants Level # Clarity Skill',
    regex: /Grants Level (\d+) Clarity Skill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Grants Level # Decoy Totem Skill',
    regex: /Grants Level (\d+) Decoy Totem Skill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Grants Level # Determination Skill',
    regex: /Grants Level (\d+) Determination Skill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Grants Level # Discipline Skill',
    regex: /Grants Level (\d+) Discipline Skill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Grants Level # Enduring Cry Skill',
    regex: /Grants Level (\d+) Enduring Cry Skill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Grants Level # Envy Skill',
    regex: /Grants Level (\d+) Envy Skill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Grants Level # Grace Skill',
    regex: /Grants Level (\d+) Grace Skill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Grants Level # Haste Skill',
    regex: /Grants Level (\d+) Haste Skill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Grants Level # Hatred Skill',
    regex: /Grants Level (\d+) Hatred Skill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Grants Level # Herald of Ash Skill',
    regex: /Grants Level (\d+) Herald of Ash Skill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Grants Level # Herald of Ice Skill',
    regex: /Grants Level (\d+) Herald of Ice Skill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Grants Level # Herald of Thunder Skill',
    regex: /Grants Level (\d+) Herald of Thunder Skill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Grants Level # Rallying Cry Skill',
    regex: /Grants Level (\d+) Rallying Cry Skill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Grants Level # Vitality Skill',
    regex: /Grants Level (\d+) Vitality Skill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Grants Level # Wrath Skill',
    regex: /Grants Level (\d+) Wrath Skill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Has 1 Abyssal Socket',
    regex: /Has 1 Abyssal Socket/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Hits can\'t be Evaded',
    regex: /Hits can't be Evaded/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Hits with this Weapon have Culling Strike against Bleeding Enemies',
    regex: /Hits with this Weapon have Culling Strike against Bleeding Enemies/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Ignore all Movement Penalties from Armour',
    regex: /Ignore all Movement Penalties from Armour/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Items and Gems have #% reduced Attribute Requirements',
    regex: /Items and Gems have (\d+)% reduced Attribute Requirements/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Melee Movement Skills have #% chance to Fortify on Hit',
    regex: /Melee Movement Skills have (\d+)% chance to Fortify on Hit/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Mines have #% increased Detonation Speed',
    regex: /Mines have (\d+)% increased Detonation Speed/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Minions deal # to # additional Chaos Damage',
    regex: /Minions deal (\d+) to (\d+) additional Chaos Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Minions deal # to # additional Cold Damage',
    regex: /Minions deal (\d+) to (\d+) additional Cold Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Minions deal # to # additional Fire Damage',
    regex: /Minions deal (\d+) to (\d+) additional Fire Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Minions deal # to # additional Lightning Damage',
    regex: /Minions deal (\d+) to (\d+) additional Lightning Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Minions deal # to # additional Physical Damage',
    regex: /Minions deal (\d+) to (\d+) additional Physical Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Minions deal #% increased Damage',
    regex: /Minions deal (\d+)% increased Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Minions deal #% increased Damage against Abyssal Monsters',
    regex: /Minions deal (\d+)% increased Damage against Abyssal Monsters/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Minions deal #% increased Damage if you\'ve used a Minion Skill Recently',
    regex: /Minions deal (\d+)% increased Damage if you've used a Minion Skill Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Minions have #% chance to Blind on Hit with Attacks',
    regex: /Minions have (\d+)% chance to Blind on Hit with Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Minions have #% chance to deal Double Damage',
    regex: /Minions have (\d+)% chance to deal Double Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Minions have #% chance to Hinder Enemies on Hit with Spells, with 30% reduced Movement Speed',
    regex: /Minions have (\d+)% chance to Hinder Enemies on Hit with Spells, with 30% reduced Movement Speed/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Minions have #% chance to Taunt on Hit with Attacks',
    regex: /Minions have (\d+)% chance to Taunt on Hit with Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Minions have #% increased Attack and Cast Speed if you or your Minions have Killed Recently',
    regex: /Minions have (\d+)% increased Attack and Cast Speed if you or your Minions have Killed Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Minions have #% increased Attack Speed',
    regex: /Minions have (\d+)% increased Attack Speed/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Minions have #% increased Cast Speed',
    regex: /Minions have (\d+)% increased Cast Speed/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Minions have #% increased maximum Life',
    regex: /Minions have (\d+)% increased maximum Life/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Minions have #% increased Movement Speed',
    regex: /Minions have (\d+)% increased Movement Speed/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Minions have +# to Accuracy Rating',
    regex: /Minions have \+(\d+) to Accuracy Rating/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Minions have +#% Chance to Block Attack Damage',
    regex: /Minions have \+(\d+)% Chance to Block Attack Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Minions have +#% to all Elemental Resistances',
    regex: /Minions have \+(\d+)% to all Elemental Resistances/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Minions have +#% to Chaos Resistance',
    regex: /Minions have \+(\d+)% to Chaos Resistance/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Minions Leech #% of Damage as Life',
    regex: /Minions Leech (\d+)% of Damage as Life/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Minions Regenerate # Life per second',
    regex: /Minions Regenerate (\d+) Life per second/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Minions Regenerate #% of Life per second',
    regex: /Minions Regenerate (\d+)% of Life per second/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Nearby Enemies have #% to Chaos Resistance',
    regex: /Nearby Enemies have (\d+)% to Chaos Resistance/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Nearby Enemies have #% to Cold Resistance',
    regex: /Nearby Enemies have (\d+)% to Cold Resistance/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Nearby Enemies have #% to Fire Resistance',
    regex: /Nearby Enemies have (\d+)% to Fire Resistance/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Nearby Enemies have #% to Lightning Resistance',
    regex: /Nearby Enemies have (\d+)% to Lightning Resistance/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Nearby Enemies take #% increased Physical Damage',
    regex: /Nearby Enemies take (\d+)% increased Physical Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Non-Channelling Skills have -# to Total Mana Cost',
    regex: /Non-Channelling Skills have -(\d+) to Total Mana Cost/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Projectiles deal #% increased Damage for each Enemy Pierced',
    regex: /Projectiles deal (\d+)% increased Damage for each Enemy Pierced/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Projectiles Pierce # additional Targets',
    regex: /Projectiles Pierce (\d+) additional Targets/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Projectiles Pierce an additional Target',
    regex: /Projectiles Pierce an additional Target/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Recover #% of Energy Shield on Kill',
    regex: /Recover (\d+)% of Energy Shield on Kill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Recover #% of Energy Shield when you Block',
    regex: /Recover (\d+)% of Energy Shield when you Block/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Recover #% of Life on Kill',
    regex: /Recover (\d+)% of Life on Kill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Recover #% of Life when you Block',
    regex: /Recover (\d+)% of Life when you Block/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Recover #% of Mana on Kill',
    regex: /Recover (\d+)% of Mana on Kill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Recover #% of your maximum Mana when you Block',
    regex: /Recover (\d+)% of your maximum Mana when you Block/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Reflects # Physical Damage to Melee Attackers',
    regex: /Reflects (\d+) Physical Damage to Melee Attackers/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Regenerate # Energy Shield per second',
    regex: /Regenerate (\d+) Energy Shield per second/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Regenerate # Life per second',
    regex: /Regenerate (\d+) Life per second/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Regenerate # Mana per second',
    regex: /Regenerate (\d+) Mana per second/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Regenerate #% of Energy Shield per second',
    regex: /Regenerate (\d+)% of Energy Shield per second/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Regenerate #% of Energy Shield per second if you\'ve Hit an Enemy Recently',
    regex: /Regenerate (\d+)% of Energy Shield per second if you've Hit an Enemy Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Regenerate #% of Life per second',
    regex: /Regenerate (\d+)% of Life per second/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Regenerate #% of Life per second while moving',
    regex: /Regenerate (\d+)% of Life per second while moving/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Regenerate #% of Mana per second',
    regex: /Regenerate (\d+)% of Mana per second/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Regenerate #% of Mana per second if you\'ve Hit an Enemy Recently',
    regex: /Regenerate (\d+)% of Mana per second if you've Hit an Enemy Recently/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Remove Chill and Freeze when you use a Flask',
    regex: /Remove Chill and Freeze when you use a Flask/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Remove Ignite and Burning when you use a Flask',
    regex: /Remove Ignite and Burning when you use a Flask/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Remove Shock when you use a Flask',
    regex: /Remove Shock when you use a Flask/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Removes Bleeding when you use a Warcry',
    regex: /Removes Bleeding when you use a Warcry/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Skills used by Mines have #% increased Area of Effect',
    regex: /Skills used by Mines have (\d+)% increased Area of Effect/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Skills used by Traps have #% increased Area of Effect',
    regex: /Skills used by Traps have (\d+)% increased Area of Effect/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Skills which Throw Traps throw up to 1 additional Trap',
    regex: /Skills which Throw Traps throw up to 1 additional Trap/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Attacks have +#% to Critical Strike Chance',
    regex: /Socketed Attacks have \+(\d+)% to Critical Strike Chance/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Attacks have +#% to Critical Strike Multiplier',
    regex: /Socketed Attacks have \+(\d+)% to Critical Strike Multiplier/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Attacks have -# to Total Mana Cost',
    regex: /Socketed Attacks have -(\d+) to Total Mana Cost/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Added Fire Damage',
    regex: /Socketed Gems are Supported by Level (\d+) Added Fire Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Additional Accuracy',
    regex: /Socketed Gems are Supported by Level (\d+) Additional Accuracy/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Advanced Traps',
    regex: /Socketed Gems are Supported by Level (\d+) Advanced Traps/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Ancestral Call',
    regex: /Socketed Gems are Supported by Level (\d+) Ancestral Call/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Arcane Surge',
    regex: /Socketed Gems are Supported by Level (\d+) Arcane Surge/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Blastchain Mine',
    regex: /Socketed Gems are Supported by Level (\d+) Blastchain Mine/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Blind',
    regex: /Socketed Gems are Supported by Level (\d+) Blind/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Brutality',
    regex: /Socketed Gems are Supported by Level (\d+) Brutality/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Burning Damage',
    regex: /Socketed Gems are Supported by Level (\d+) Burning Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Cast On Critical Strike',
    regex: /Socketed Gems are Supported by Level (\d+) Cast On Critical Strike/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Cast On Melee Kill',
    regex: /Socketed Gems are Supported by Level (\d+) Cast On Melee Kill/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Cast when Damage Taken',
    regex: /Socketed Gems are Supported by Level (\d+) Cast when Damage Taken/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Cast While Channelling',
    regex: /Socketed Gems are Supported by Level (\d+) Cast While Channelling/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Chance To Bleed',
    regex: /Socketed Gems are Supported by Level (\d+) Chance To Bleed/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Cold Penetration',
    regex: /Socketed Gems are Supported by Level (\d+) Cold Penetration/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Concentrated Effect',
    regex: /Socketed Gems are Supported by Level (\d+) Concentrated Effect/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Controlled Destruction',
    regex: /Socketed Gems are Supported by Level (\d+) Controlled Destruction/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Efficacy',
    regex: /Socketed Gems are Supported by Level (\d+) Efficacy/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Elemental Damage with Attacks',
    regex: /Socketed Gems are Supported by Level (\d+) Elemental Damage with Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Elemental Focus',
    regex: /Socketed Gems are Supported by Level (\d+) Elemental Focus/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Elemental Proliferation',
    regex: /Socketed Gems are Supported by Level (\d+) Elemental Proliferation/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Endurance Charge on Melee Stun',
    regex: /Socketed Gems are Supported by Level (\d+) Endurance Charge on Melee Stun/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Faster Attacks',
    regex: /Socketed Gems are Supported by Level (\d+) Faster Attacks/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Faster Casting',
    regex: /Socketed Gems are Supported by Level (\d+) Faster Casting/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Faster Projectiles',
    regex: /Socketed Gems are Supported by Level (\d+) Faster Projectiles/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Fire Penetration',
    regex: /Socketed Gems are Supported by Level (\d+) Fire Penetration/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Fortify',
    regex: /Socketed Gems are Supported by Level (\d+) Fortify/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Hypothermia',
    regex: /Socketed Gems are Supported by Level (\d+) Hypothermia/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Immolate',
    regex: /Socketed Gems are Supported by Level (\d+) Immolate/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Increased Area of Effect',
    regex: /Socketed Gems are Supported by Level (\d+) Increased Area of Effect/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Increased Critical Damage',
    regex: /Socketed Gems are Supported by Level (\d+) Increased Critical Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Increased Critical Strikes',
    regex: /Socketed Gems are Supported by Level (\d+) Increased Critical Strikes/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Increased Duration',
    regex: /Socketed Gems are Supported by Level (\d+) Increased Duration/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Innervate',
    regex: /Socketed Gems are Supported by Level (\d+) Innervate/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Inspiration',
    regex: /Socketed Gems are Supported by Level (\d+) Inspiration/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Iron Grip',
    regex: /Socketed Gems are Supported by Level (\d+) Iron Grip/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Item Rarity',
    regex: /Socketed Gems are Supported by Level (\d+) Item Rarity/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Less Duration',
    regex: /Socketed Gems are Supported by Level (\d+) Less Duration/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Lesser Multiple Projectiles',
    regex: /Socketed Gems are Supported by Level (\d+) Lesser Multiple Projectiles/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Lesser Poison',
    regex: /Socketed Gems are Supported by Level (\d+) Lesser Poison/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Life Leech',
    regex: /Socketed Gems are Supported by Level (\d+) Life Leech/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Lightning Penetration',
    regex: /Socketed Gems are Supported by Level (\d+) Lightning Penetration/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Maim',
    regex: /Socketed Gems are Supported by Level (\d+) Maim/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Mana Leech',
    regex: /Socketed Gems are Supported by Level (\d+) Mana Leech/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Melee Physical Damage',
    regex: /Socketed Gems are Supported by Level (\d+) Melee Physical Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Melee Splash',
    regex: /Socketed Gems are Supported by Level (\d+) Melee Splash/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Minion Damage',
    regex: /Socketed Gems are Supported by Level (\d+) Minion Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Minion Life',
    regex: /Socketed Gems are Supported by Level (\d+) Minion Life/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Multistrike',
    regex: /Socketed Gems are Supported by Level (\d+) Multistrike/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Onslaught',
    regex: /Socketed Gems are Supported by Level (\d+) Onslaught/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Poison',
    regex: /Socketed Gems are Supported by Level (\d+) Poison/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Power Charge On Critical Strike',
    regex: /Socketed Gems are Supported by Level (\d+) Power Charge On Critical Strike/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Ranged Attack Totem',
    regex: /Socketed Gems are Supported by Level (\d+) Ranged Attack Totem/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Ruthless',
    regex: /Socketed Gems are Supported by Level (\d+) Ruthless/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Slower Projectiles',
    regex: /Socketed Gems are Supported by Level (\d+) Slower Projectiles/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Spell Cascade',
    regex: /Socketed Gems are Supported by Level (\d+) Spell Cascade/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Spell Echo',
    regex: /Socketed Gems are Supported by Level (\d+) Spell Echo/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Spell Totem',
    regex: /Socketed Gems are Supported by Level (\d+) Spell Totem/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Trap',
    regex: /Socketed Gems are Supported by Level (\d+) Trap/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Trap And Mine Damage',
    regex: /Socketed Gems are Supported by Level (\d+) Trap And Mine Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Unbound Ailments',
    regex: /Socketed Gems are Supported by Level (\d+) Unbound Ailments/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Vicious Projectiles',
    regex: /Socketed Gems are Supported by Level (\d+) Vicious Projectiles/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems are Supported by Level # Volley',
    regex: /Socketed Gems are Supported by Level (\d+) Volley/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems Chain # additional times',
    regex: /Socketed Gems Chain (\d+) additional times/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems deal # to # additional Fire Damage',
    regex: /Socketed Gems deal (\d+) to (\d+) additional Fire Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems deal #% more Damage over Time',
    regex: /Socketed Gems deal (\d+)% more Damage over Time/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems deal #% more Elemental Damage',
    regex: /Socketed Gems deal (\d+)% more Elemental Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems gain #% of Physical Damage as extra Lightning Damage',
    regex: /Socketed Gems gain (\d+)% of Physical Damage as extra Lightning Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems have #% chance to Ignite',
    regex: /Socketed Gems have (\d+)% chance to Ignite/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems have #% more Attack and Cast Speed',
    regex: /Socketed Gems have (\d+)% more Attack and Cast Speed/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems have #% reduced Mana Reservation',
    regex: /Socketed Gems have (\d+)% reduced Mana Reservation/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Gems have +#% Critical Strike Chance',
    regex: /Socketed Gems have \+(\d+)% Critical Strike Chance/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Movement Skills have no Mana Cost',
    regex: /Socketed Movement Skills have no Mana Cost/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Non-Curse Aura Gems have #% increased Aura Effect',
    regex: /Socketed Non-Curse Aura Gems have (\d+)% increased Aura Effect/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Skills deal #% more Attack Damage',
    regex: /Socketed Skills deal (\d+)% more Attack Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Skills deal #% more Spell Damage',
    regex: /Socketed Skills deal (\d+)% more Spell Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Skills have #% increased Attack Speed',
    regex: /Socketed Skills have (\d+)% increased Attack Speed/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Skills have #% increased Cast Speed',
    regex: /Socketed Skills have (\d+)% increased Cast Speed/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Spells have #% reduced Mana Cost',
    regex: /Socketed Spells have (\d+)% reduced Mana Cost/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Spells have +#% to Critical Strike Chance',
    regex: /Socketed Spells have \+(\d+)% to Critical Strike Chance/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Socketed Spells have +#% to Critical Strike Multiplier',
    regex: /Socketed Spells have \+(\d+)% to Critical Strike Multiplier/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Spells have +#% to Critical Strike Chance',
    regex: /Spells have \+(\d+)% to Critical Strike Chance/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Throw an additional Mine',
    regex: /Throw an additional Mine/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Totemic Wood Lure',
    regex: /Totemic Wood Lure/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Totems gain +#% to all Elemental Resistances',
    regex: /Totems gain \+(\d+)% to all Elemental Resistances/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Triggers Level 20 Spectral Spirits when Equipped',
    regex: /Triggers Level 20 Spectral Spirits when Equipped/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Unaffected by Burning Ground',
    regex: /Unaffected by Burning Ground/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Unaffected by Chilled Ground',
    regex: /Unaffected by Chilled Ground/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Unaffected by Desecrated Ground',
    regex: /Unaffected by Desecrated Ground/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Unaffected by Shocked Ground',
    regex: /Unaffected by Shocked Ground/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Vaal Skills deal #% increased Damage',
    regex: /Vaal Skills deal (\d+)% increased Damage/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'When you Kill a Rare Monster, #% chance to gain one of its Modifiers for 10 seconds',
    regex: /When you Kill a Rare Monster, (\d+)% chance to gain one of its Modifiers for 10 seconds/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'You can apply an additional Curse',
    regex: /You can apply an additional Curse/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'You take #% reduced Extra Damage from Critical Strikes',
    regex: /You take (\d+)% reduced Extra Damage from Critical Strikes/,
    type: ModFilterType.FRACTURED,
  },
  {
    label: 'Your Hits inflict Decay, dealing 500 Chaos Damage per second for 8 seconds',
    regex: /Your Hits inflict Decay, dealing 500 Chaos Damage per second for 8 seconds/,
    type: ModFilterType.FRACTURED,
  },
];
/* abyss jewels */
export const abyssModRegexes: IMod[] = [
  {
    label: '# Physical Damage taken from Hits',
    regex: /(\d+) Physical Damage taken from Hits/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% additional Physical Damage Reduction',
    regex: /(\d+)% additional Physical Damage Reduction/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% additional Physical Damage Reduction against Abyssal Monsters',
    regex: /(\d+)% additional Physical Damage Reduction against Abyssal Monsters/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% additional Physical Damage Reduction if you weren\'t Damaged by a Hit Recently',
    regex: /(\d+)% additional Physical Damage Reduction if you weren't Damaged by a Hit Recently/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% additional Physical Damage Reduction while moving',
    regex: /(\d+)% additional Physical Damage Reduction while moving/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% chance for Bleeding inflicted with this Weapon to deal 100% more Damage',
    regex: /(\d+)% chance for Bleeding inflicted with this Weapon to deal 100% more Damage/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% chance for Poisons inflicted with this Weapon to deal 100% more Damage',
    regex: /(\d+)% chance for Poisons inflicted with this Weapon to deal 100% more Damage/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% chance to Avoid being Poisoned',
    regex: /(\d+)% chance to Avoid being Poisoned/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% chance to avoid Bleeding',
    regex: /(\d+)% chance to avoid Bleeding/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% chance to Avoid Cold Damage from Hits',
    regex: /(\d+)% chance to Avoid Cold Damage from Hits/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% chance to Avoid Fire Damage from Hits',
    regex: /(\d+)% chance to Avoid Fire Damage from Hits/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% chance to Avoid interruption from Stuns while Casting',
    regex: /(\d+)% chance to Avoid interruption from Stuns while Casting/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% chance to Avoid Lightning Damage from Hits',
    regex: /(\d+)% chance to Avoid Lightning Damage from Hits/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% chance to Blind Enemies on Hit with Attacks',
    regex: /(\d+)% chance to Blind Enemies on Hit with Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% Chance to Block Attack Damage',
    regex: /(\d+)% Chance to Block Attack Damage/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% Chance to Block Spell Damage',
    regex: /(\d+)% Chance to Block Spell Damage/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% chance to Dodge Attack and Spell Hits if you\'ve been Hit Recently',
    regex: /(\d+)% chance to Dodge Attack and Spell Hits if you've been Hit Recently/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% chance to Dodge Attack Hits',
    regex: /(\d+)% chance to Dodge Attack Hits/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% chance to Dodge Spell Hits',
    regex: /(\d+)% chance to Dodge Spell Hits/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% chance to gain a Frenzy Charge when Hit',
    regex: /(\d+)% chance to gain a Frenzy Charge when Hit/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% chance to gain a Frenzy Charge when you Hit a Rare or Unique Enemy',
    regex: /(\d+)% chance to gain a Frenzy Charge when you Hit a Rare or Unique Enemy/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% chance to gain an additional Vaal Soul on Kill',
    regex: /(\d+)% chance to gain an additional Vaal Soul on Kill/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% chance to gain Onslaught for 4 seconds on Kill',
    regex: /(\d+)% chance to gain Onslaught for 4 seconds on Kill/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% chance to gain Onslaught when you use a Flask',
    regex: /(\d+)% chance to gain Onslaught when you use a Flask/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% chance to gain Phasing for 4 seconds on Kill',
    regex: /(\d+)% chance to gain Phasing for 4 seconds on Kill/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% chance to Gain Unholy Might for 4 seconds on Melee Kill',
    regex: /(\d+)% chance to Gain Unholy Might for 4 seconds on Melee Kill/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% chance to Hinder Enemies on Hit with Spells, with 30% reduced Movement Speed',
    regex: /(\d+)% chance to Hinder Enemies on Hit with Spells, with 30% reduced Movement Speed/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% chance to Intimidate Enemies for 4 seconds on Hit',
    regex: /(\d+)% chance to Intimidate Enemies for 4 seconds on Hit/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% chance to Taunt Enemies on Hit with Attacks',
    regex: /(\d+)% chance to Taunt Enemies on Hit with Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% chance when Hit for double Armour effect',
    regex: /(\d+)% chance when Hit for double Armour effect/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% Global chance to Blind Enemies on hit',
    regex: /(\d+)% Global chance to Blind Enemies on hit/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Accuracy Rating if you haven\'t Killed Recently',
    regex: /(\d+)% increased Accuracy Rating if you haven't Killed Recently/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Armour',
    regex: /(\d+)% increased Armour/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Armour and Energy Shield',
    regex: /(\d+)% increased Armour and Energy Shield/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Armour and Evasion',
    regex: /(\d+)% increased Armour and Evasion/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Armour if you haven\'t Killed Recently',
    regex: /(\d+)% increased Armour if you haven't Killed Recently/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Armour, Evasion and Energy Shield',
    regex: /(\d+)% increased Armour, Evasion and Energy Shield/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Attack and Cast Speed if you\'ve Hit an Enemy Recently',
    regex: /(\d+)% increased Attack and Cast Speed if you've Hit an Enemy Recently/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Attack Speed',
    regex: /(\d+)% increased Attack Speed/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Attack Speed if you\'ve dealt a Critical Strike Recently',
    regex: /(\d+)% increased Attack Speed if you've dealt a Critical Strike Recently/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Cast Speed',
    regex: /(\d+)% increased Cast Speed/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Cast Speed if a Minion has been Killed Recently',
    regex: /(\d+)% increased Cast Speed if a Minion has been Killed Recently/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Cast Speed if you\'ve dealt a Critical Strike Recently',
    regex: /(\d+)% increased Cast Speed if you've dealt a Critical Strike Recently/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Chaos Damage',
    regex: /(\d+)% increased Chaos Damage/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Cold Damage',
    regex: /(\d+)% increased Cold Damage/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Critical Strike Chance if you haven\'t dealt a Critical Strike Recently',
    regex: /(\d+)% increased Critical Strike Chance if you haven't dealt a Critical Strike Recently/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Damage against Abyssal Monsters',
    regex: /(\d+)% increased Damage against Abyssal Monsters/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Damage if you\'ve Killed Recently',
    regex: /(\d+)% increased Damage if you've Killed Recently/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Damage over Time while Dual Wielding',
    regex: /(\d+)% increased Damage over Time while Dual Wielding/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Damage over Time while holding a Shield',
    regex: /(\d+)% increased Damage over Time while holding a Shield/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Damage over Time while wielding a Two Handed Weapon',
    regex: /(\d+)% increased Damage over Time while wielding a Two Handed Weapon/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Damage when on Full Life',
    regex: /(\d+)% increased Damage when on Full Life/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Damage with Ailments',
    regex: /(\d+)% increased Damage with Ailments/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Effect of Auras on you',
    regex: /(\d+)% increased Effect of Auras on you/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Effect of Chill',
    regex: /(\d+)% increased Effect of Chill/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Effect of Fortify on you',
    regex: /(\d+)% increased Effect of Fortify on you/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Effect of Shock',
    regex: /(\d+)% increased Effect of Shock/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Elemental Damage',
    regex: /(\d+)% increased Elemental Damage/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Energy Shield',
    regex: /(\d+)% increased Energy Shield/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Energy Shield from Body Armour',
    regex: /(\d+)% increased Energy Shield from Body Armour/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Evasion and Energy Shield',
    regex: /(\d+)% increased Evasion and Energy Shield/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Evasion Rating',
    regex: /(\d+)% increased Evasion Rating/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Evasion Rating while moving',
    regex: /(\d+)% increased Evasion Rating while moving/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Fire Damage',
    regex: /(\d+)% increased Fire Damage/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Global Critical Strike Chance',
    regex: /(\d+)% increased Global Critical Strike Chance/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Global Defences',
    regex: /(\d+)% increased Global Defences/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Global Evasion Rating when on Full Life',
    regex: /(\d+)% increased Global Evasion Rating when on Full Life/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Global Physical Damage',
    regex: /(\d+)% increased Global Physical Damage/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Life Recovery from Flasks',
    regex: /(\d+)% increased Life Recovery from Flasks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Lightning Damage',
    regex: /(\d+)% increased Lightning Damage/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Mana Recovery rate',
    regex: /(\d+)% increased Mana Recovery rate/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Mana Regeneration Rate while moving',
    regex: /(\d+)% increased Mana Regeneration Rate while moving/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased maximum Life',
    regex: /(\d+)% increased maximum Life/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased maximum Mana',
    regex: /(\d+)% increased maximum Mana/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Movement Speed if you haven\'t taken Damage Recently',
    regex: /(\d+)% increased Movement Speed if you haven't taken Damage Recently/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Movement Speed if you\'ve Hit an Enemy Recently',
    regex: /(\d+)% increased Movement Speed if you've Hit an Enemy Recently/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Movement Speed if you\'ve Killed Recently',
    regex: /(\d+)% increased Movement Speed if you've Killed Recently/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Physical Damage taken',
    regex: /(\d+)% increased Physical Damage taken/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Vaal Skill Critical Strike Chance',
    regex: /(\d+)% increased Vaal Skill Critical Strike Chance/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% increased Vaal Skill Effect Duration',
    regex: /(\d+)% increased Vaal Skill Effect Duration/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% of Attack Damage Leeched as Life',
    regex: /(\d+)% of Attack Damage Leeched as Life/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% of Chaos Damage Leeched as Life',
    regex: /(\d+)% of Chaos Damage Leeched as Life/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% of Cold Damage Leeched as Life',
    regex: /(\d+)% of Cold Damage Leeched as Life/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% of Damage is taken from Mana before Life',
    regex: /(\d+)% of Damage is taken from Mana before Life/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% of Damage taken gained as Mana over 4 seconds when Hit',
    regex: /(\d+)% of Damage taken gained as Mana over 4 seconds when Hit/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% of Fire Damage Leeched as Life',
    regex: /(\d+)% of Fire Damage Leeched as Life/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% of Lightning Damage Leeched as Life',
    regex: /(\d+)% of Lightning Damage Leeched as Life/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% of Physical Damage Leeched as Life',
    regex: /(\d+)% of Physical Damage Leeched as Life/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% of Spell Damage Leeched as Energy Shield',
    regex: /(\d+)% of Spell Damage Leeched as Energy Shield/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% reduced Elemental Ailment Duration on you',
    regex: /(\d+)% reduced Elemental Ailment Duration on you/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% reduced Mana Cost of Skills',
    regex: /(\d+)% reduced Mana Cost of Skills/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% reduced Mana Reserved',
    regex: /(\d+)% reduced Mana Reserved/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% reduced Physical Damage taken over time',
    regex: /(\d+)% reduced Physical Damage taken over time/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '#% reduced Soul Cost of Vaal Skills',
    regex: /(\d+)% reduced Soul Cost of Vaal Skills/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '+# Mana gained for each Enemy hit by your Attacks',
    regex: /\+(\d+) Mana gained for each Enemy hit by your Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '+# to Accuracy Rating',
    regex: /\+(\d+) to Accuracy Rating/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '+# to Armour if you\'ve Hit an Enemy Recently',
    regex: /\+(\d+) to Armour if you've Hit an Enemy Recently/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '+# to Evasion Rating if Hit an Enemy Recently',
    regex: /\+(\d+) to Evasion Rating if Hit an Enemy Recently/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '+# to Level of all Raise Spectre Gems',
    regex: /\+(\d+) to Level of all Raise Spectre Gems/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '+# to Level of Socketed Chaos Gems',
    regex: /\+(\d+) to Level of Socketed Chaos Gems/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '+# to Level of Socketed Cold Gems',
    regex: /\+(\d+) to Level of Socketed Cold Gems/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '+# to Level of Socketed Dexterity Gems',
    regex: /\+(\d+) to Level of Socketed Dexterity Gems/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '+# to Level of Socketed Fire Gems',
    regex: /\+(\d+) to Level of Socketed Fire Gems/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '+# to Level of Socketed Intelligence Gems',
    regex: /\+(\d+) to Level of Socketed Intelligence Gems/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '+# to Level of Socketed Lightning Gems',
    regex: /\+(\d+) to Level of Socketed Lightning Gems/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '+# to Level of Socketed Strength Gems',
    regex: /\+(\d+) to Level of Socketed Strength Gems/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '+# to maximum Life',
    regex: /\+(\d+) to maximum Life/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '+#% Chance to Block Attack Damage if you were Damaged by a Hit Recently',
    regex: /\+(\d+)% Chance to Block Attack Damage if you were Damaged by a Hit Recently/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '+#% Chance to Block Spell Damage if you were Damaged by a Hit Recently',
    regex: /\+(\d+)% Chance to Block Spell Damage if you were Damaged by a Hit Recently/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '+#% chance to Evade Attacks',
    regex: /\+(\d+)% chance to Evade Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '+#% Chaos Resistance against Damage Over Time',
    regex: /\+(\d+)% Chaos Resistance against Damage Over Time/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '+#% to Chaos Resistance',
    regex: /\+(\d+)% to Chaos Resistance/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '+#% to Cold Resistance',
    regex: /\+(\d+)% to Cold Resistance/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '+#% to Critical Strike Multiplier if you\'ve Killed Recently',
    regex: /\+(\d+)% to Critical Strike Multiplier if you've Killed Recently/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '+#% to Fire Resistance',
    regex: /\+(\d+)% to Fire Resistance/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '+#% to Global Critical Strike Multiplier',
    regex: /\+(\d+)% to Global Critical Strike Multiplier/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '+#% to Lightning Resistance',
    regex: /\+(\d+)% to Lightning Resistance/,
    type: ModFilterType.ABYSS,
  },
  {
    label: '+#% to Quality',
    regex: /\+(\d+)% to Quality/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Chaos Damage',
    regex: /Adds (\d+) to (\d+) Chaos Damage/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Chaos Damage to Attacks',
    regex: /Adds (\d+) to (\d+) Chaos Damage to Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Chaos Damage to Spells',
    regex: /Adds (\d+) to (\d+) Chaos Damage to Spells/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Chaos Damage to Spells while Dual Wielding',
    regex: /Adds (\d+) to (\d+) Chaos Damage to Spells while Dual Wielding/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Chaos Damage to Spells while holding a Shield',
    regex: /Adds (\d+) to (\d+) Chaos Damage to Spells while holding a Shield/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Chaos Damage to Spells while wielding a Two Handed Weapon',
    regex: /Adds (\d+) to (\d+) Chaos Damage to Spells while wielding a Two Handed Weapon/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Cold Damage',
    regex: /Adds (\d+) to (\d+) Cold Damage/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Cold Damage to Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Cold Damage to Axe Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Axe Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Cold Damage to Bow Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Bow Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Cold Damage to Claw Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Claw Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Cold Damage to Dagger Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Dagger Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Cold Damage to Mace and Sceptre Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Mace and Sceptre Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Cold Damage to Spells',
    regex: /Adds (\d+) to (\d+) Cold Damage to Spells/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Cold Damage to Spells while Dual Wielding',
    regex: /Adds (\d+) to (\d+) Cold Damage to Spells while Dual Wielding/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Cold Damage to Spells while holding a Shield',
    regex: /Adds (\d+) to (\d+) Cold Damage to Spells while holding a Shield/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Cold Damage to Spells while wielding a Two Handed Weapon',
    regex: /Adds (\d+) to (\d+) Cold Damage to Spells while wielding a Two Handed Weapon/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Cold Damage to Staff Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Staff Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Cold Damage to Sword Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Sword Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Cold Damage to Wand Attacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Wand Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Fire Damage',
    regex: /Adds (\d+) to (\d+) Fire Damage/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Fire Damage to Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Fire Damage to Axe Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Axe Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Fire Damage to Bow Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Bow Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Fire Damage to Claw Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Claw Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Fire Damage to Dagger Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Dagger Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Fire Damage to Mace and Sceptre Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Mace and Sceptre Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Fire Damage to Spells',
    regex: /Adds (\d+) to (\d+) Fire Damage to Spells/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Fire Damage to Spells while Dual Wielding',
    regex: /Adds (\d+) to (\d+) Fire Damage to Spells while Dual Wielding/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Fire Damage to Spells while holding a Shield',
    regex: /Adds (\d+) to (\d+) Fire Damage to Spells while holding a Shield/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Fire Damage to Spells while wielding a Two Handed Weapon',
    regex: /Adds (\d+) to (\d+) Fire Damage to Spells while wielding a Two Handed Weapon/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Fire Damage to Staff Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Staff Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Fire Damage to Sword Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Sword Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Fire Damage to Wand Attacks',
    regex: /Adds (\d+) to (\d+) Fire Damage to Wand Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Lightning Damage',
    regex: /Adds (\d+) to (\d+) Lightning Damage/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Lightning Damage to Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Lightning Damage to Axe Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Axe Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Lightning Damage to Bow Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Bow Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Lightning Damage to Claw Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Claw Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Lightning Damage to Dagger Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Dagger Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Lightning Damage to Mace and Sceptre Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Mace and Sceptre Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Lightning Damage to Spells',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Spells/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Lightning Damage to Spells while Dual Wielding',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Spells while Dual Wielding/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Lightning Damage to Spells while holding a Shield',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Spells while holding a Shield/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Lightning Damage to Spells while wielding a Two Handed Weapon',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Spells while wielding a Two Handed Weapon/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Lightning Damage to Staff Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Staff Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Lightning Damage to Sword Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Sword Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Lightning Damage to Wand Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Wand Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Physical Damage',
    regex: /Adds (\d+) to (\d+) Physical Damage/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Physical Damage against Bleeding Enemies',
    regex: /Adds (\d+) to (\d+) Physical Damage against Bleeding Enemies/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Physical Damage against Poisoned Enemies',
    regex: /Adds (\d+) to (\d+) Physical Damage against Poisoned Enemies/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Physical Damage to Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Physical Damage to Axe Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Axe Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Physical Damage to Bow Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Bow Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Physical Damage to Claw Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Claw Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Physical Damage to Dagger Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Dagger Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Physical Damage to Mace and Sceptre Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Mace and Sceptre Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Physical Damage to Spells',
    regex: /Adds (\d+) to (\d+) Physical Damage to Spells/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Physical Damage to Spells while Dual Wielding',
    regex: /Adds (\d+) to (\d+) Physical Damage to Spells while Dual Wielding/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Physical Damage to Spells while holding a Shield',
    regex: /Adds (\d+) to (\d+) Physical Damage to Spells while holding a Shield/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Physical Damage to Spells while wielding a Two Handed Weapon',
    regex: /Adds (\d+) to (\d+) Physical Damage to Spells while wielding a Two Handed Weapon/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Physical Damage to Staff Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Staff Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Physical Damage to Sword Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Sword Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Adds # to # Physical Damage to Wand Attacks',
    regex: /Adds (\d+) to (\d+) Physical Damage to Wand Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Attacks with this Weapon Penetrate #% Elemental Resistances',
    regex: /Attacks with this Weapon Penetrate (\d+)% Elemental Resistances/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Auras from your Skills grant #% increased Damage to you and Allies',
    regex: /Auras from your Skills grant (\d+)% increased Damage to you and Allies/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Cannot be Chilled or Frozen while moving',
    regex: /Cannot be Chilled or Frozen while moving/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Cannot be Shocked or Ignited while moving',
    regex: /Cannot be Shocked or Ignited while moving/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Curse Enemies with Level # Despair on Hit',
    regex: /Curse Enemies with Level (\d+) Despair on Hit/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Damage Penetrates #% Cold Resistance',
    regex: /Damage Penetrates (\d+)% Cold Resistance/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Damage Penetrates #% Elemental Resistance if you haven\'t Killed Recently',
    regex: /Damage Penetrates (\d+)% Elemental Resistance if you haven't Killed Recently/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Damage Penetrates #% Elemental Resistances',
    regex: /Damage Penetrates (\d+)% Elemental Resistances/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Damage Penetrates #% Fire Resistance',
    regex: /Damage Penetrates (\d+)% Fire Resistance/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Damage Penetrates #% Lightning Resistance',
    regex: /Damage Penetrates (\d+)% Lightning Resistance/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Gain #% of Physical Damage as Extra Fire Damage if you\'ve dealt a Critical Strike Recently',
    regex: /Gain (\d+)% of Physical Damage as Extra Fire Damage if you've dealt a Critical Strike Recently/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Has 1 Abyssal Socket',
    regex: /Has 1 Abyssal Socket/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Ignore all Movement Penalties from Armour',
    regex: /Ignore all Movement Penalties from Armour/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Minions deal # to # additional Chaos Damage',
    regex: /Minions deal (\d+) to (\d+) additional Chaos Damage/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Minions deal # to # additional Cold Damage',
    regex: /Minions deal (\d+) to (\d+) additional Cold Damage/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Minions deal # to # additional Fire Damage',
    regex: /Minions deal (\d+) to (\d+) additional Fire Damage/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Minions deal # to # additional Lightning Damage',
    regex: /Minions deal (\d+) to (\d+) additional Lightning Damage/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Minions deal # to # additional Physical Damage',
    regex: /Minions deal (\d+) to (\d+) additional Physical Damage/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Minions deal #% increased Damage',
    regex: /Minions deal (\d+)% increased Damage/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Minions deal #% increased Damage against Abyssal Monsters',
    regex: /Minions deal (\d+)% increased Damage against Abyssal Monsters/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Minions deal #% increased Damage if you\'ve used a Minion Skill Recently',
    regex: /Minions deal (\d+)% increased Damage if you've used a Minion Skill Recently/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Minions have #% chance to Blind on Hit with Attacks',
    regex: /Minions have (\d+)% chance to Blind on Hit with Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Minions have #% chance to Hinder Enemies on Hit with Spells, with 30% reduced Movement Speed',
    regex: /Minions have (\d+)% chance to Hinder Enemies on Hit with Spells, with 30% reduced Movement Speed/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Minions have #% chance to Taunt on Hit with Attacks',
    regex: /Minions have (\d+)% chance to Taunt on Hit with Attacks/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Minions have #% increased Attack and Cast Speed if you or your Minions have Killed Recently',
    regex: /Minions have (\d+)% increased Attack and Cast Speed if you or your Minions have Killed Recently/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Minions have #% increased Attack Speed',
    regex: /Minions have (\d+)% increased Attack Speed/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Minions have #% increased Cast Speed',
    regex: /Minions have (\d+)% increased Cast Speed/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Minions have #% increased maximum Life',
    regex: /Minions have (\d+)% increased maximum Life/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Minions have #% increased Movement Speed',
    regex: /Minions have (\d+)% increased Movement Speed/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Minions have +# to Accuracy Rating',
    regex: /Minions have \+(\d+) to Accuracy Rating/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Minions have +#% to all Elemental Resistances',
    regex: /Minions have \+(\d+)% to all Elemental Resistances/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Minions have +#% to Chaos Resistance',
    regex: /Minions have \+(\d+)% to Chaos Resistance/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Minions Leech #% of Damage as Life',
    regex: /Minions Leech (\d+)% of Damage as Life/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Minions Regenerate # Life per second',
    regex: /Minions Regenerate (\d+) Life per second/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Minions Regenerate #% of Life per second',
    regex: /Minions Regenerate (\d+)% of Life per second/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Nearby Enemies have #% to Chaos Resistance',
    regex: /Nearby Enemies have (\d+)% to Chaos Resistance/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Nearby Enemies have #% to Cold Resistance',
    regex: /Nearby Enemies have (\d+)% to Cold Resistance/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Nearby Enemies have #% to Fire Resistance',
    regex: /Nearby Enemies have (\d+)% to Fire Resistance/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Nearby Enemies have #% to Lightning Resistance',
    regex: /Nearby Enemies have (\d+)% to Lightning Resistance/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Nearby Enemies take #% increased Physical Damage',
    regex: /Nearby Enemies take (\d+)% increased Physical Damage/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Regenerate # Energy Shield per second',
    regex: /Regenerate (\d+) Energy Shield per second/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Regenerate # Life per second',
    regex: /Regenerate (\d+) Life per second/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Regenerate #% of Energy Shield per second',
    regex: /Regenerate (\d+)% of Energy Shield per second/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Regenerate #% of Energy Shield per second if you\'ve Hit an Enemy Recently',
    regex: /Regenerate (\d+)% of Energy Shield per second if you've Hit an Enemy Recently/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Regenerate #% of Life per second',
    regex: /Regenerate (\d+)% of Life per second/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Regenerate #% of Life per second while moving',
    regex: /Regenerate (\d+)% of Life per second while moving/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Regenerate #% of Mana per second',
    regex: /Regenerate (\d+)% of Mana per second/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Regenerate #% of Mana per second if you\'ve Hit an Enemy Recently',
    regex: /Regenerate (\d+)% of Mana per second if you've Hit an Enemy Recently/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Socketed Attacks have -# to Total Mana Cost',
    regex: /Socketed Attacks have -(\d+) to Total Mana Cost/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Socketed Gems are Supported by Level # Arcane Surge',
    regex: /Socketed Gems are Supported by Level (\d+) Arcane Surge/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Socketed Gems are Supported by Level # Maim',
    regex: /Socketed Gems are Supported by Level (\d+) Maim/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Socketed Skills deal #% more Attack Damage',
    regex: /Socketed Skills deal (\d+)% more Attack Damage/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Socketed Skills deal #% more Spell Damage',
    regex: /Socketed Skills deal (\d+)% more Spell Damage/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Socketed Skills have #% increased Attack Speed',
    regex: /Socketed Skills have (\d+)% increased Attack Speed/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Socketed Skills have #% increased Cast Speed',
    regex: /Socketed Skills have (\d+)% increased Cast Speed/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Socketed Spells have #% reduced Mana Cost',
    regex: /Socketed Spells have (\d+)% reduced Mana Cost/,
    type: ModFilterType.ABYSS,
  },
  {
    label: 'Vaal Skills deal #% increased Damage',
    regex: /Vaal Skills deal (\d+)% increased Damage/,
    type: ModFilterType.ABYSS,
  },
];
/* unique explicit */
export const uniqueModRegexes: IMod[] = [
  {
    label: '# Chaos Damage taken per second',
    regex: /(\d+) Chaos Damage taken per second/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '# Cold Damage taken from Hits',
    regex: /(\d+) Cold Damage taken from Hits/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '# Cold Damage taken per second per Frenzy Charge while moving',
    regex: /(\d+) Cold Damage taken per second per Frenzy Charge while moving/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '# Fire Damage taken from Hits',
    regex: /(\d+) Fire Damage taken from Hits/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '# Fire Damage taken per second per Endurance Charge if you\'ve been Hit Recently',
    regex: /(\d+) Fire Damage taken per second per Endurance Charge if you've been Hit Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '# Intelligence per 1 Intelligence on Allocated Passives in Radius',
    regex: /(\d+) Intelligence per 1 Intelligence on Allocated Passives in Radius/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '# Life gained for each Enemy Hit if you have used a Vaal Skill Recently',
    regex: /(\d+) Life gained for each Enemy Hit if you have used a Vaal Skill Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '# Lightning Damage taken from Hits',
    regex: /(\d+) Lightning Damage taken from Hits/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '# Lightning Damage taken per second per Power Charge if your Skills have dealt a Critical Strike Recently',
    regex: /(\d+) Lightning Damage taken per second per Power Charge if your Skills have dealt a Critical Strike Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '# Maximum Void Charges',
    regex: /(\d+) Maximum Void Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '# Physical Damage taken from Hits by Animals',
    regex: /(\d+) Physical Damage taken from Hits by Animals/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '# Physical Damage taken on Minion Death',
    regex: /(\d+) Physical Damage taken on Minion Death/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '# Strength per 1 Strength on Allocated Passives in Radius',
    regex: /(\d+) Strength per 1 Strength on Allocated Passives in Radius/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '# to # Fire Damage per Endurance Charge',
    regex: /(\d+) to (\d+) Fire Damage per Endurance Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '# to # Lightning Damage per Power Charge',
    regex: /(\d+) to (\d+) Lightning Damage per Power Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '# to Total Mana Cost of Skills for each Corrupted Item Equipped',
    regex: /(\d+) to Total Mana Cost of Skills for each Corrupted Item Equipped/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% additional chance for Slain monsters to drop Scrolls of Wisdom',
    regex: /(\d+)% additional chance for Slain monsters to drop Scrolls of Wisdom/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% additional Physical Damage Reduction from Hits per Siphoning Charge',
    regex: /(\d+)% additional Physical Damage Reduction from Hits per Siphoning Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% additional Physical Damage Reduction per 10 Strength on Allocated Passives in Radius',
    regex: /(\d+)% additional Physical Damage Reduction per 10 Strength on Allocated Passives in Radius/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% additional Physical Damage Reduction per Frenzy Charge',
    regex: /(\d+)% additional Physical Damage Reduction per Frenzy Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% additional Physical Damage Reduction per Keystone',
    regex: /(\d+)% additional Physical Damage Reduction per Keystone/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% additional Physical Damage Reduction per Power Charge',
    regex: /(\d+)% additional Physical Damage Reduction per Power Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% additional Physical Damage Reduction while affected by Determination',
    regex: /(\d+)% additional Physical Damage Reduction while affected by Determination/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% additional Physical Damage Reduction while affected by Herald of Purity',
    regex: /(\d+)% additional Physical Damage Reduction while affected by Herald of Purity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% additional Physical Damage Reduction while Bleeding',
    regex: /(\d+)% additional Physical Damage Reduction while Bleeding/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% additional Physical Damage Reduction while stationary',
    regex: /(\d+)% additional Physical Damage Reduction while stationary/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance for Energy Shield Recharge to start when you Block',
    regex: /(\d+)% chance for Energy Shield Recharge to start when you Block/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance for Energy Shield Recharge to start when you use a Skill',
    regex: /(\d+)% chance for Energy Shield Recharge to start when you use a Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance for Poisons inflicted with this Weapon to deal 300% more Damage',
    regex: /(\d+)% chance for Poisons inflicted with this Weapon to deal 300% more Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% Chance for Traps to Trigger an additional time',
    regex: /(\d+)% Chance for Traps to Trigger an additional time/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance that if you would gain a Crab Barrier, you instead gain up to your maximum number of Crab Barriers',
    regex: /(\d+)% chance that if you would gain a Crab Barrier, you instead gain up to your maximum number of Crab Barriers/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance that if you would gain Endurance Charges, you instead gain up to your maximum number of Endurance Charges',
    regex: /(\d+)% chance that if you would gain Endurance Charges, you instead gain up to your maximum number of Endurance Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance that if you would gain Frenzy Charges, you instead gain up to your maximum number of Frenzy Charges',
    regex: /(\d+)% chance that if you would gain Frenzy Charges, you instead gain up to your maximum number of Frenzy Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance that if you would gain Power Charges, you instead gain up to your maximum number of Power Charges',
    regex: /(\d+)% chance that if you would gain Power Charges, you instead gain up to your maximum number of Power Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Avoid Elemental Damage from Hits per Frenzy Charge',
    regex: /(\d+)% chance to Avoid Elemental Damage from Hits per Frenzy Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Avoid Projectiles while Phasing',
    regex: /(\d+)% chance to Avoid Projectiles while Phasing/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to be cursed with Level 10 Punishment on Kill',
    regex: /(\d+)% chance to be cursed with Level 10 Punishment on Kill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to be inflicted with Bleeding when Hit by an Attack',
    regex: /(\d+)% chance to be inflicted with Bleeding when Hit by an Attack/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Blind Enemies on Critical Strike',
    regex: /(\d+)% chance to Blind Enemies on Critical Strike/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Blind Enemies on hit',
    regex: /(\d+)% chance to Blind Enemies on hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Blind Enemies which Hit you while affected by Grace',
    regex: /(\d+)% chance to Blind Enemies which Hit you while affected by Grace/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Blind nearby Enemies when gaining Her Blessing',
    regex: /(\d+)% chance to Blind nearby Enemies when gaining Her Blessing/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Block Spell Damage if you have Blocked Attack Damage Recently',
    regex: /(\d+)% chance to Block Spell Damage if you have Blocked Attack Damage Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% Chance to cause Bleeding Enemies to Flee on hit',
    regex: /(\d+)% Chance to cause Bleeding Enemies to Flee on hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Cause Bleeding on Critical Strike',
    regex: /(\d+)% chance to Cause Bleeding on Critical Strike/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% Chance to Cause Monster to Flee on Block',
    regex: /(\d+)% Chance to Cause Monster to Flee on Block/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Cause Monsters to Flee',
    regex: /(\d+)% chance to Cause Monsters to Flee/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Cause Poison on Critical Strike',
    regex: /(\d+)% chance to Cause Poison on Critical Strike/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to create a Smoke Cloud when Hit',
    regex: /(\d+)% chance to create a Smoke Cloud when Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to create Chilled Ground when Hit with an Attack',
    regex: /(\d+)% chance to create Chilled Ground when Hit with an Attack/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to create Chilled Ground when you Freeze an Enemy',
    regex: /(\d+)% chance to create Chilled Ground when you Freeze an Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to create Consecrated Ground when you Block',
    regex: /(\d+)% chance to create Consecrated Ground when you Block/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to create Desecrated Ground when you Block',
    regex: /(\d+)% chance to create Desecrated Ground when you Block/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to create Shocked Ground when Hit',
    regex: /(\d+)% chance to create Shocked Ground when Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Curse Enemies with Level 10 Vulnerability on Hit',
    regex: /(\d+)% chance to Curse Enemies with Level 10 Vulnerability on Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Curse non-Cursed Enemies with a random Curse on Hit',
    regex: /(\d+)% chance to Curse non-Cursed Enemies with a random Curse on Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Curse non-Cursed Enemies with Enfeeble on Hit',
    regex: /(\d+)% chance to Curse non-Cursed Enemies with Enfeeble on Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to deal Double Damage per 500 Strength',
    regex: /(\d+)% chance to deal Double Damage per 500 Strength/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to deal Double Damage while using Pride',
    regex: /(\d+)% chance to deal Double Damage while using Pride/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Dodge Attack and Spell Hits per 500 Maximum Mana, up to 20%',
    regex: /(\d+)% chance to Dodge Attack and Spell Hits per 500 Maximum Mana, up to 20%/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Dodge Attack Hits if you\'ve taken Spell Damage Recently',
    regex: /(\d+)% chance to Dodge Attack Hits if you've taken Spell Damage Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Dodge Attack Hits per Endurance Charge',
    regex: /(\d+)% chance to Dodge Attack Hits per Endurance Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Dodge Attack Hits per Frenzy Charge',
    regex: /(\d+)% chance to Dodge Attack Hits per Frenzy Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Dodge Attack Hits per Power Charge',
    regex: /(\d+)% chance to Dodge Attack Hits per Power Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Dodge Attack Hits while affected by Grace',
    regex: /(\d+)% chance to Dodge Attack Hits while affected by Grace/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Dodge Attack Hits while Phasing',
    regex: /(\d+)% chance to Dodge Attack Hits while Phasing/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Dodge Attack Hits while your Off Hand is empty',
    regex: /(\d+)% chance to Dodge Attack Hits while your Off Hand is empty/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Dodge Spell Hits if you\'ve taken Attack Damage Recently',
    regex: /(\d+)% chance to Dodge Spell Hits if you've taken Attack Damage Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Dodge Spell Hits while affected by Haste',
    regex: /(\d+)% chance to Dodge Spell Hits while affected by Haste/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Dodge Spell Hits while Phasing',
    regex: /(\d+)% chance to Dodge Spell Hits while Phasing/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to double Stun Duration',
    regex: /(\d+)% chance to double Stun Duration/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Fortify on Melee hit',
    regex: /(\d+)% chance to Fortify on Melee hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Freeze during any Flask Effect',
    regex: /(\d+)% chance to Freeze during any Flask Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to gain a Frenzy Charge on Hit',
    regex: /(\d+)% chance to gain a Frenzy Charge on Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to gain a Frenzy Charge on Killing a Frozen Enemy',
    regex: /(\d+)% chance to gain a Frenzy Charge on Killing a Frozen Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to gain a Frenzy Charge on Killing an Enemy affected by at least 5 Poisons',
    regex: /(\d+)% chance to gain a Frenzy Charge on Killing an Enemy affected by at least 5 Poisons/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to gain a Frenzy Charge when you Stun an Enemy',
    regex: /(\d+)% chance to gain a Frenzy Charge when you Stun an Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to gain a Frenzy Charge when your Trap is triggered by an Enemy',
    regex: /(\d+)% chance to gain a Frenzy Charge when your Trap is triggered by an Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to gain a Power Charge if you Knock an Enemy Back with Melee Damage',
    regex: /(\d+)% chance to gain a Power Charge if you Knock an Enemy Back with Melee Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to gain a Power Charge on Hit',
    regex: /(\d+)% chance to gain a Power Charge on Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to gain a Power Charge on hitting an Enemy affected by a Spider\'s Web',
    regex: /(\d+)% chance to gain a Power Charge on hitting an Enemy affected by a Spider's Web/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to gain a Power Charge on Killing a Frozen Enemy',
    regex: /(\d+)% chance to gain a Power Charge on Killing a Frozen Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to gain a Power Charge on Killing an Enemy affected by fewer than 5 Poisons',
    regex: /(\d+)% chance to gain a Power Charge on Killing an Enemy affected by fewer than 5 Poisons/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to gain a Power Charge when you Stun',
    regex: /(\d+)% chance to gain a Power Charge when you Stun/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to gain a Power Charge when you Stun with Melee Damage',
    regex: /(\d+)% chance to gain a Power Charge when you Stun with Melee Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to gain a Power Charge when you Throw a Trap',
    regex: /(\d+)% chance to gain a Power Charge when you Throw a Trap/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to gain a Siphoning Charge when you use a Skill',
    regex: /(\d+)% chance to gain a Siphoning Charge when you use a Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to gain a Spirit Charge on Kill',
    regex: /(\d+)% chance to gain a Spirit Charge on Kill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to gain an additional Vaal Soul per Enemy Shattered',
    regex: /(\d+)% chance to gain an additional Vaal Soul per Enemy Shattered/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to gain an Endurance, Frenzy or Power Charge when any of your Traps are Triggered by an Enemy',
    regex: /(\d+)% chance to gain an Endurance, Frenzy or Power Charge when any of your Traps are Triggered by an Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to gain Onslaught for 10 seconds on Kill',
    regex: /(\d+)% chance to gain Onslaught for 10 seconds on Kill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to gain Phasing for # seconds when your Trap is triggered by an Enemy',
    regex: /(\d+)% chance to gain Phasing for (\d+) seconds when your Trap is triggered by an Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to gain Unholy Might for 10 seconds on Kill',
    regex: /(\d+)% chance to gain Unholy Might for 10 seconds on Kill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to gain Unholy Might on block for 3 seconds',
    regex: /(\d+)% chance to gain Unholy Might on block for 3 seconds/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to grant a Frenzy Charge to nearby Allies on Hit',
    regex: /(\d+)% chance to grant a Frenzy Charge to nearby Allies on Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to grant a Power Charge to nearby Allies on Kill',
    regex: /(\d+)% chance to grant a Power Charge to nearby Allies on Kill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to grant Onslaught to nearby Enemies on Kill',
    regex: /(\d+)% chance to grant Onslaught to nearby Enemies on Kill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to grant Unholy Might to nearby Enemies on Kill',
    regex: /(\d+)% chance to grant Unholy Might to nearby Enemies on Kill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Ignite during any Flask Effect',
    regex: /(\d+)% chance to Ignite during any Flask Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Ignite when in Main Hand',
    regex: /(\d+)% chance to Ignite when in Main Hand/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Impale Enemies on Hit with Attacks',
    regex: /(\d+)% chance to Impale Enemies on Hit with Attacks/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Impale Enemies on Hit with Attacks while using Pride',
    regex: /(\d+)% chance to Impale Enemies on Hit with Attacks while using Pride/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to inflict Bleeding on Critical Strike with Attacks',
    regex: /(\d+)% chance to inflict Bleeding on Critical Strike with Attacks/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to inflict Brittle',
    regex: /(\d+)% chance to inflict Brittle/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to knockback on Counterattack',
    regex: /(\d+)% chance to knockback on Counterattack/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to lose a Frenzy Charge when you use a Travel Skill',
    regex: /(\d+)% chance to lose a Frenzy Charge when you use a Travel Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to lose a Power Charge when you gain Elusive',
    regex: /(\d+)% chance to lose a Power Charge when you gain Elusive/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Maim Enemies on Critical Strike with Attacks',
    regex: /(\d+)% chance to Maim Enemies on Critical Strike with Attacks/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Poison on Hit against Cursed Enemies',
    regex: /(\d+)% chance to Poison on Hit against Cursed Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Poison on Hit with Attacks',
    regex: /(\d+)% chance to Poison on Hit with Attacks/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Poison per Power Charge',
    regex: /(\d+)% chance to Poison per Power Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Recover 10% of Mana when you use a Skill while affected by Clarity',
    regex: /(\d+)% chance to Recover 10% of Mana when you use a Skill while affected by Clarity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Sap Enemies',
    regex: /(\d+)% chance to Sap Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Scorch Enemies',
    regex: /(\d+)% chance to Scorch Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Shock Chilled Enemies',
    regex: /(\d+)% chance to Shock Chilled Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Shock during any Flask Effect',
    regex: /(\d+)% chance to Shock during any Flask Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to spread Tar when Hit',
    regex: /(\d+)% chance to spread Tar when Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Steal Power, Frenzy, and Endurance Charges on Hit',
    regex: /(\d+)% chance to Steal Power, Frenzy, and Endurance Charges on Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Trigger a Socketed Spell when you Attack with a Bow',
    regex: /(\d+)% chance to Trigger a Socketed Spell when you Attack with a Bow/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Trigger Level 1 Raise Spiders on Kill',
    regex: /(\d+)% chance to Trigger Level 1 Raise Spiders on Kill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Trigger Level 16 Molten Burst on Melee Hit',
    regex: /(\d+)% chance to Trigger Level 16 Molten Burst on Melee Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Trigger Level 18 Animate Guardian\'s Weapon when Animated Weapon Kills an Enemy',
    regex: /(\d+)% chance to Trigger Level 18 Animate Guardian's Weapon when Animated Weapon Kills an Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% Chance to Trigger Level 18 Summon Spectral Wolf on Kill',
    regex: /(\d+)% Chance to Trigger Level 18 Summon Spectral Wolf on Kill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Trigger Level 20 Animate Weapon on Kill',
    regex: /(\d+)% chance to Trigger Level 20 Animate Weapon on Kill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Trigger Level 20 Shade Form when you Use a Socketed Skill',
    regex: /(\d+)% chance to Trigger Level 20 Shade Form when you Use a Socketed Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Trigger Level 20 Summon Volatile Anomaly on Kill',
    regex: /(\d+)% chance to Trigger Level 20 Summon Volatile Anomaly on Kill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Trigger Level 20 Tentacle Whip on Kill',
    regex: /(\d+)% chance to Trigger Level 20 Tentacle Whip on Kill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Trigger Level 20 Tornado when you gain Avian\'s Might or Avian\'s Flight',
    regex: /(\d+)% chance to Trigger Level 20 Tornado when you gain Avian's Might or Avian's Flight/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Trigger Level 8 Summon Raging Spirit on Kill',
    regex: /(\d+)% chance to Trigger Level 8 Summon Raging Spirit on Kill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Trigger Socketed Spells on Killing a Shocked Enemy',
    regex: /(\d+)% chance to Trigger Socketed Spells on Killing a Shocked Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% chance to Trigger Socketed Spells when you Spend at least # Mana to Use a Skill',
    regex: /(\d+)% chance to Trigger Socketed Spells when you Spend at least (\d+) Mana to Use a Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% faster start of Energy Shield Recharge while affected by Discipline',
    regex: /(\d+)% faster start of Energy Shield Recharge while affected by Discipline/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Accuracy Rating when on Low Life',
    regex: /(\d+)% increased Accuracy Rating when on Low Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Accuracy Rating with Axes',
    regex: /(\d+)% increased Accuracy Rating with Axes/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Accuracy Rating with Bows',
    regex: /(\d+)% increased Accuracy Rating with Bows/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Accuracy Rating with Claws',
    regex: /(\d+)% increased Accuracy Rating with Claws/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Accuracy Rating with Daggers',
    regex: /(\d+)% increased Accuracy Rating with Daggers/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Accuracy Rating with Maces and Sceptres',
    regex: /(\d+)% increased Accuracy Rating with Maces and Sceptres/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Accuracy Rating with Staves',
    regex: /(\d+)% increased Accuracy Rating with Staves/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Accuracy Rating with Swords',
    regex: /(\d+)% increased Accuracy Rating with Swords/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Accuracy Rating with Wands',
    regex: /(\d+)% increased Accuracy Rating with Wands/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Arctic Armour Buff Effect',
    regex: /(\d+)% increased Arctic Armour Buff Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Area Damage per 10 Devotion',
    regex: /(\d+)% increased Area Damage per 10 Devotion/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Area of Effect for Attacks',
    regex: /(\d+)% increased Area of Effect for Attacks/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Area of Effect for Skills used by Totems',
    regex: /(\d+)% increased Area of Effect for Skills used by Totems/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Area of Effect per 20 Intelligence',
    regex: /(\d+)% increased Area of Effect per 20 Intelligence/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Area of Effect per 25 Rampage Kills',
    regex: /(\d+)% increased Area of Effect per 25 Rampage Kills/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Area of Effect per Enemy killed recently, up to 50%',
    regex: /(\d+)% increased Area of Effect per Enemy killed recently, up to 50%/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Area of Effect while Unarmed',
    regex: /(\d+)% increased Area of Effect while Unarmed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Area of Effect while you have no Frenzy Charges',
    regex: /(\d+)% increased Area of Effect while you have no Frenzy Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Armour against Projectiles',
    regex: /(\d+)% increased Armour against Projectiles/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Armour and Evasion Rating if you\'ve killed a Taunted Enemy Recently',
    regex: /(\d+)% increased Armour and Evasion Rating if you've killed a Taunted Enemy Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Armour per Endurance Charge',
    regex: /(\d+)% increased Armour per Endurance Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Armour while Bleeding',
    regex: /(\d+)% increased Armour while Bleeding/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Armour while Chilled or Frozen',
    regex: /(\d+)% increased Armour while Chilled or Frozen/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Armour while not Ignited, Frozen or Shocked',
    regex: /(\d+)% increased Armour while not Ignited, Frozen or Shocked/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Armour while stationary',
    regex: /(\d+)% increased Armour while stationary/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Aspect of the Avian Buff Effect',
    regex: /(\d+)% increased Aspect of the Avian Buff Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Aspect of the Spider Area of Effect',
    regex: /(\d+)% increased Aspect of the Spider Area of Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Aspect of the Spider Debuff Duration',
    regex: /(\d+)% increased Aspect of the Spider Debuff Duration/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Attack and Cast Speed during Onslaught',
    regex: /(\d+)% increased Attack and Cast Speed during Onslaught/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Attack and Cast Speed if Corrupted',
    regex: /(\d+)% increased Attack and Cast Speed if Corrupted/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Attack and Cast Speed if you\'ve used a Movement Skill Recently',
    regex: /(\d+)% increased Attack and Cast Speed if you've used a Movement Skill Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Attack and Cast Speed per Endurance Charge',
    regex: /(\d+)% increased Attack and Cast Speed per Endurance Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Attack and Cast Speed per Power Charge',
    regex: /(\d+)% increased Attack and Cast Speed per Power Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Attack and Cast Speed per Summoned Raging Spirit',
    regex: /(\d+)% increased Attack and Cast Speed per Summoned Raging Spirit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Attack and Movement Speed while you have a Bestial Minion',
    regex: /(\d+)% increased Attack and Movement Speed while you have a Bestial Minion/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Attack and Movement Speed with Her Blessing',
    regex: /(\d+)% increased Attack and Movement Speed with Her Blessing/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Attack Critical Strike Chance per 200 Accuracy Rating',
    regex: /(\d+)% increased Attack Critical Strike Chance per 200 Accuracy Rating/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Attack Damage against Bleeding Enemies',
    regex: /(\d+)% increased Attack Damage against Bleeding Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Attack Damage for each Map Item Modifier affecting the Area',
    regex: /(\d+)% increased Attack Damage for each Map Item Modifier affecting the Area/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Attack Damage if Corrupted',
    regex: /(\d+)% increased Attack Damage if Corrupted/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Attack Damage if your other Ring is a Shaper Item',
    regex: /(\d+)% increased Attack Damage if your other Ring is a Shaper Item/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Attack Damage per 450 Evasion Rating',
    regex: /(\d+)% increased Attack Damage per 450 Evasion Rating/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Attack Damage per 500 Maximum Mana',
    regex: /(\d+)% increased Attack Damage per 500 Maximum Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Attack Damage per Level',
    regex: /(\d+)% increased Attack Damage per Level/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Attack Damage while affected by Precision',
    regex: /(\d+)% increased Attack Damage while affected by Precision/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Attack Physical Damage while using Pride',
    regex: /(\d+)% increased Attack Physical Damage while using Pride/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Attack Speed for each Map Item Modifier affecting the Area',
    regex: /(\d+)% increased Attack Speed for each Map Item Modifier affecting the Area/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Attack Speed per 10 Dexterity',
    regex: /(\d+)% increased Attack Speed per 10 Dexterity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Attack Speed per 25 Dexterity',
    regex: /(\d+)% increased Attack Speed per 25 Dexterity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Attack Speed per Frenzy Charge',
    regex: /(\d+)% increased Attack Speed per Frenzy Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Attack Speed when on Full Life',
    regex: /(\d+)% increased Attack Speed when on Full Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Attack Speed when on Low Life',
    regex: /(\d+)% increased Attack Speed when on Low Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Attack Speed while affected by Precision',
    regex: /(\d+)% increased Attack Speed while affected by Precision/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Attack Speed while Ignited',
    regex: /(\d+)% increased Attack Speed while Ignited/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Attack Speed with Movement Skills',
    regex: /(\d+)% increased Attack Speed with Movement Skills/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Attack, Cast and Movement Speed while you do not have Iron Reflexes',
    regex: /(\d+)% increased Attack, Cast and Movement Speed while you do not have Iron Reflexes/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Attribute Requirements',
    regex: /(\d+)% increased Attribute Requirements/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Attributes per allocated Keystone',
    regex: /(\d+)% increased Attributes per allocated Keystone/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Bleeding Duration per 12 Intelligence',
    regex: /(\d+)% increased Bleeding Duration per 12 Intelligence/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Block Recovery',
    regex: /(\d+)% increased Block Recovery/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Brand Attachment range',
    regex: /(\d+)% increased Brand Attachment range/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Burning Damage for each time you have Shocked a Non-Shocked Enemy Recently',
    regex: /(\d+)% increased Burning Damage for each time you have Shocked a Non-Shocked Enemy Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Burning Damage if you\'ve Ignited an Enemy Recently',
    regex: /(\d+)% increased Burning Damage if you've Ignited an Enemy Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Cast Speed for each corpse Consumed Recently',
    regex: /(\d+)% increased Cast Speed for each corpse Consumed Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Cast Speed per Power Charge',
    regex: /(\d+)% increased Cast Speed per Power Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Cast Speed when on Full Life',
    regex: /(\d+)% increased Cast Speed when on Full Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Cast Speed when on Low Life',
    regex: /(\d+)% increased Cast Speed when on Low Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Cast Speed while affected by Zealotry',
    regex: /(\d+)% increased Cast Speed while affected by Zealotry/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Cast Speed while Ignited',
    regex: /(\d+)% increased Cast Speed while Ignited/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Chaos Damage per 10 Intelligence from Allocated Passives in Radius',
    regex: /(\d+)% increased Chaos Damage per 10 Intelligence from Allocated Passives in Radius/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Chaos Damage per Level',
    regex: /(\d+)% increased Chaos Damage per Level/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Chaos Damage while affected by Herald of Agony',
    regex: /(\d+)% increased Chaos Damage while affected by Herald of Agony/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Chaos Damage with Attack Skills',
    regex: /(\d+)% increased Chaos Damage with Attack Skills/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Chaos Damage with Spell Skills',
    regex: /(\d+)% increased Chaos Damage with Spell Skills/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Character Size',
    regex: /(\d+)% increased Character Size/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Chill Duration on Enemies',
    regex: /(\d+)% increased Chill Duration on Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Chill Duration on Enemies when in Off Hand',
    regex: /(\d+)% increased Chill Duration on Enemies when in Off Hand/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Chill Duration on you',
    regex: /(\d+)% increased Chill Duration on you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Claw Physical Damage when on Low Life',
    regex: /(\d+)% increased Claw Physical Damage when on Low Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Cold Damage if you have used a Fire Skill Recently',
    regex: /(\d+)% increased Cold Damage if you have used a Fire Skill Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Cold Damage per 1% Chance to Block Attack Damage',
    regex: /(\d+)% increased Cold Damage per 1% Chance to Block Attack Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Cold Damage per 1% Cold Resistance above 75%',
    regex: /(\d+)% increased Cold Damage per 1% Cold Resistance above 75%/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Cold Damage per Frenzy Charge',
    regex: /(\d+)% increased Cold Damage per Frenzy Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Cold Damage while affected by Hatred',
    regex: /(\d+)% increased Cold Damage while affected by Hatred/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Cold Damage while affected by Herald of Ice',
    regex: /(\d+)% increased Cold Damage while affected by Herald of Ice/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Cold Damage while your Off Hand is empty',
    regex: /(\d+)% increased Cold Damage while your Off Hand is empty/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Cold Damage with Attack Skills',
    regex: /(\d+)% increased Cold Damage with Attack Skills/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Cold Damage with Spell Skills',
    regex: /(\d+)% increased Cold Damage with Spell Skills/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Conductivity Curse Effect',
    regex: /(\d+)% increased Conductivity Curse Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Cooldown Recovery of Travel Skills per Frenzy Charge',
    regex: /(\d+)% increased Cooldown Recovery of Travel Skills per Frenzy Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased cooldown recovery speed of Movement Skills used while affected by Haste',
    regex: /(\d+)% increased cooldown recovery speed of Movement Skills used while affected by Haste/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Critical Strike Chance against Chilled Enemies',
    regex: /(\d+)% increased Critical Strike Chance against Chilled Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Critical Strike Chance against Enemies on Consecrated Ground while affected by Zealotry',
    regex: /(\d+)% increased Critical Strike Chance against Enemies on Consecrated Ground while affected by Zealotry/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Critical Strike Chance against Enemies on Full Life',
    regex: /(\d+)% increased Critical Strike Chance against Enemies on Full Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Critical Strike Chance for Spells if you\'ve Killed Recently',
    regex: /(\d+)% increased Critical Strike Chance for Spells if you've Killed Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Critical Strike Chance for Spells per 100 Player Maximum Life',
    regex: /(\d+)% increased Critical Strike Chance for Spells per 100 Player Maximum Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Critical Strike Chance for Spells per Raised Spectre',
    regex: /(\d+)% increased Critical Strike Chance for Spells per Raised Spectre/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Critical Strike Chance for Spells while Dual Wielding',
    regex: /(\d+)% increased Critical Strike Chance for Spells while Dual Wielding/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Critical Strike Chance for Spells while holding a Shield',
    regex: /(\d+)% increased Critical Strike Chance for Spells while holding a Shield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Critical Strike Chance for Spells while wielding a Staff',
    regex: /(\d+)% increased Critical Strike Chance for Spells while wielding a Staff/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Critical Strike Chance per 8 Strength',
    regex: /(\d+)% increased Critical Strike Chance per 8 Strength/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Critical Strike Chance per Endurance Charge',
    regex: /(\d+)% increased Critical Strike Chance per Endurance Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Critical Strike Chance per Frenzy Charge',
    regex: /(\d+)% increased Critical Strike Chance per Frenzy Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Critical Strike Chance while affected by Wrath',
    regex: /(\d+)% increased Critical Strike Chance while affected by Wrath/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Critical Strike Chance while you have at least 200 Intelligence',
    regex: /(\d+)% increased Critical Strike Chance while you have at least 200 Intelligence/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Critical Strike Chance while you have Avatar of Fire',
    regex: /(\d+)% increased Critical Strike Chance while you have Avatar of Fire/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Critical Strike Chance with arrows that Fork',
    regex: /(\d+)% increased Critical Strike Chance with arrows that Fork/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage against Ignited Enemies',
    regex: /(\d+)% increased Damage against Ignited Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage for each Magic Item Equipped',
    regex: /(\d+)% increased Damage for each Magic Item Equipped/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage for each type of Abyss Jewel affecting you',
    regex: /(\d+)% increased Damage for each type of Abyss Jewel affecting you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage if Corrupted',
    regex: /(\d+)% increased Damage if Corrupted/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage if you have Shocked an Enemy Recently',
    regex: /(\d+)% increased Damage if you have Shocked an Enemy Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage if you Summoned a Golem in the past 8 seconds',
    regex: /(\d+)% increased Damage if you Summoned a Golem in the past 8 seconds/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage if you\'ve Frozen an Enemy Recently',
    regex: /(\d+)% increased Damage if you've Frozen an Enemy Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage on Burning Ground',
    regex: /(\d+)% increased Damage on Burning Ground/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage per 5 of your lowest Attribute',
    regex: /(\d+)% increased Damage per 5 of your lowest Attribute/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage per Crab Barrier',
    regex: /(\d+)% increased Damage per Crab Barrier/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage per Curse on you',
    regex: /(\d+)% increased Damage per Curse on you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage per Endurance Charge',
    regex: /(\d+)% increased Damage per Endurance Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage per Frenzy Charge',
    regex: /(\d+)% increased Damage per Frenzy Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage per Frenzy Charge with Hits against Enemies on Low Life',
    regex: /(\d+)% increased Damage per Frenzy Charge with Hits against Enemies on Low Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage per Power Charge with Hits against Enemies on Full Life',
    regex: /(\d+)% increased Damage per Power Charge with Hits against Enemies on Full Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage per Power Charge with Hits against Enemies on Low Life',
    regex: /(\d+)% increased Damage per Power Charge with Hits against Enemies on Low Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage per Raised Zombie',
    regex: /(\d+)% increased Damage per Raised Zombie/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage taken',
    regex: /(\d+)% increased Damage taken/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage taken from Ghosts',
    regex: /(\d+)% increased Damage taken from Ghosts/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage taken from Melee Attacks',
    regex: /(\d+)% increased Damage taken from Melee Attacks/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage taken from Skeletons',
    regex: /(\d+)% increased Damage taken from Skeletons/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage taken if you\'ve taken a Savage Hit Recently',
    regex: /(\d+)% increased Damage taken if you've taken a Savage Hit Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage taken per Frenzy Charge',
    regex: /(\d+)% increased Damage taken per Frenzy Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage taken while on Full Energy Shield',
    regex: /(\d+)% increased Damage taken while on Full Energy Shield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage when on Low Life',
    regex: /(\d+)% increased Damage when on Low Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage when you have no Energy Shield',
    regex: /(\d+)% increased Damage when you have no Energy Shield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage while Ignited',
    regex: /(\d+)% increased Damage while Ignited/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage while Leeching',
    regex: /(\d+)% increased Damage while Leeching/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage while Leeching Life',
    regex: /(\d+)% increased Damage while Leeching Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage while Leeching Mana',
    regex: /(\d+)% increased Damage while Leeching Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage while on Consecrated Ground',
    regex: /(\d+)% increased Damage while on Consecrated Ground/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage while Shocked',
    regex: /(\d+)% increased Damage while Shocked/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage while you have no Frenzy Charges',
    regex: /(\d+)% increased Damage while you have no Frenzy Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage with Ailments per Elder Item Equipped',
    regex: /(\d+)% increased Damage with Ailments per Elder Item Equipped/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage with Brand Skills per 10 Devotion',
    regex: /(\d+)% increased Damage with Brand Skills per 10 Devotion/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage with Hits against Frozen Enemies',
    regex: /(\d+)% increased Damage with Hits against Frozen Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage with Hits against Rare monsters',
    regex: /(\d+)% increased Damage with Hits against Rare monsters/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage with Hits against Shocked Enemies',
    regex: /(\d+)% increased Damage with Hits against Shocked Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage with Hits and Ailments against Bleeding Enemies',
    regex: /(\d+)% increased Damage with Hits and Ailments against Bleeding Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage with Hits and Ailments against Blinded Enemies',
    regex: /(\d+)% increased Damage with Hits and Ailments against Blinded Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage with Hits and Ailments against Chilled Enemies',
    regex: /(\d+)% increased Damage with Hits and Ailments against Chilled Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage with Hits and Ailments against Enemies affected by 3 Spider\'s Webs',
    regex: /(\d+)% increased Damage with Hits and Ailments against Enemies affected by 3 Spider's Webs/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage with Hits and Ailments against Hindered Enemies',
    regex: /(\d+)% increased Damage with Hits and Ailments against Hindered Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage with Hits and Ailments per Freeze, Shock and Ignite on Enemy',
    regex: /(\d+)% increased Damage with Hits and Ailments per Freeze, Shock and Ignite on Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage with Hits for each Level higher the Enemy is than you',
    regex: /(\d+)% increased Damage with Hits for each Level higher the Enemy is than you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage with Ignite inflicted on Chilled Enemies',
    regex: /(\d+)% increased Damage with Ignite inflicted on Chilled Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage with Movement Skills',
    regex: /(\d+)% increased Damage with Movement Skills/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage with Poison if you have at least 300 Dexterity',
    regex: /(\d+)% increased Damage with Poison if you have at least 300 Dexterity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage with Poison per Frenzy Charge',
    regex: /(\d+)% increased Damage with Poison per Frenzy Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage with Poison per Power Charge',
    regex: /(\d+)% increased Damage with Poison per Power Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Damage with Unarmed Attacks against Bleeding Enemies',
    regex: /(\d+)% increased Damage with Unarmed Attacks against Bleeding Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Defences from Equipped Shield per 10 Devotion',
    regex: /(\d+)% increased Defences from Equipped Shield per 10 Devotion/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Dexterity if Strength is higher than Intelligence',
    regex: /(\d+)% increased Dexterity if Strength is higher than Intelligence/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Duration of Ailments on Enemies',
    regex: /(\d+)% increased Duration of Ailments on Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Duration of Curses on you',
    regex: /(\d+)% increased Duration of Curses on you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Duration of Elemental Ailments on Enemies',
    regex: /(\d+)% increased Duration of Elemental Ailments on Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Duration of Shrine Effects on you',
    regex: /(\d+)% increased Duration of Shrine Effects on you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Effect of Auras on your Minions',
    regex: /(\d+)% increased Effect of Auras on your Minions/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Effect of Buffs granted by Socketed Golem Skills',
    regex: /(\d+)% increased Effect of Buffs granted by Socketed Golem Skills/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Effect of Buffs granted by your Golems',
    regex: /(\d+)% increased Effect of Buffs granted by your Golems/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Effect of Buffs on you',
    regex: /(\d+)% increased Effect of Buffs on you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Effect of Chilled Ground',
    regex: /(\d+)% increased Effect of Chilled Ground/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Effect of Curses on you',
    regex: /(\d+)% increased Effect of Curses on you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Effect of Elusive on you per Power Charge',
    regex: /(\d+)% increased Effect of Elusive on you per Power Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased effect of Non-Curse Auras from your Skills',
    regex: /(\d+)% increased effect of Non-Curse Auras from your Skills/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased effect of Non-Curse Auras per 10 Devotion',
    regex: /(\d+)% increased effect of Non-Curse Auras per 10 Devotion/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Effect of non-Damaging Ailments on Enemies',
    regex: /(\d+)% increased Effect of non-Damaging Ailments on Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Effect of non-Damaging Ailments on Enemies per 10 Devotion',
    regex: /(\d+)% increased Effect of non-Damaging Ailments on Enemies per 10 Devotion/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Effect of non-Damaging Ailments per Elder Item Equipped',
    regex: /(\d+)% increased Effect of non-Damaging Ailments per Elder Item Equipped/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Effect of non-Keystone Passive Skills in Radius',
    regex: /(\d+)% increased Effect of non-Keystone Passive Skills in Radius/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Effect of Shrine Buffs on you',
    regex: /(\d+)% increased Effect of Shrine Buffs on you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Effect of Socketed Jewels',
    regex: /(\d+)% increased Effect of Socketed Jewels/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Elemental Ailment Duration on you',
    regex: /(\d+)% increased Elemental Ailment Duration on you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Elemental Damage if you\'ve Killed a Cursed Enemy Recently',
    regex: /(\d+)% increased Elemental Damage if you've Killed a Cursed Enemy Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Elemental Damage if you\'ve used a Warcry Recently',
    regex: /(\d+)% increased Elemental Damage if you've used a Warcry Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Elemental Damage per 10 Devotion',
    regex: /(\d+)% increased Elemental Damage per 10 Devotion/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Elemental Damage per 10 Dexterity',
    regex: /(\d+)% increased Elemental Damage per 10 Dexterity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Elemental Damage per Frenzy Charge',
    regex: /(\d+)% increased Elemental Damage per Frenzy Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Elemental Damage per Grand Spectrum',
    regex: /(\d+)% increased Elemental Damage per Grand Spectrum/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Elemental Damage per Level',
    regex: /(\d+)% increased Elemental Damage per Level/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Elemental Damage per Sextant affecting the area',
    regex: /(\d+)% increased Elemental Damage per Sextant affecting the area/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Elemental Damage while in an area affected by a Sextant',
    regex: /(\d+)% increased Elemental Damage while in an area affected by a Sextant/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Elemental Damage with Attack Skills during any Flask Effect',
    regex: /(\d+)% increased Elemental Damage with Attack Skills during any Flask Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Elemental Damage with Attack Skills per Power Charge',
    regex: /(\d+)% increased Elemental Damage with Attack Skills per Power Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Elemental Weakness Curse Effect',
    regex: /(\d+)% increased Elemental Weakness Curse Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Endurance, Frenzy and Power Charge Duration',
    regex: /(\d+)% increased Endurance, Frenzy and Power Charge Duration/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Energy Shield per 10 Strength',
    regex: /(\d+)% increased Energy Shield per 10 Strength/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Energy Shield per Power Charge',
    regex: /(\d+)% increased Energy Shield per Power Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Energy Shield Recharge Rate during any Flask Effect',
    regex: /(\d+)% increased Energy Shield Recharge Rate during any Flask Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Energy Shield Recovery Rate while affected by Discipline',
    regex: /(\d+)% increased Energy Shield Recovery Rate while affected by Discipline/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Evasion Rating during Onslaught',
    regex: /(\d+)% increased Evasion Rating during Onslaught/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Evasion Rating if you have been Hit Recently',
    regex: /(\d+)% increased Evasion Rating if you have been Hit Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Evasion Rating per 10 Intelligence',
    regex: /(\d+)% increased Evasion Rating per 10 Intelligence/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Evasion Rating per Frenzy Charge',
    regex: /(\d+)% increased Evasion Rating per Frenzy Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Experience Gain for Corrupted Gems',
    regex: /(\d+)% increased Experience Gain for Corrupted Gems/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Fire Damage if you have used a Cold Skill Recently',
    regex: /(\d+)% increased Fire Damage if you have used a Cold Skill Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Fire Damage per 20 Strength',
    regex: /(\d+)% increased Fire Damage per 20 Strength/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Fire Damage taken',
    regex: /(\d+)% increased Fire Damage taken/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Fire Damage while affected by Anger',
    regex: /(\d+)% increased Fire Damage while affected by Anger/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Fire Damage while affected by Herald of Ash',
    regex: /(\d+)% increased Fire Damage while affected by Herald of Ash/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Fire Damage with Attack Skills',
    regex: /(\d+)% increased Fire Damage with Attack Skills/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Fire Damage with Hits and Ailments against Bleeding Enemies',
    regex: /(\d+)% increased Fire Damage with Hits and Ailments against Bleeding Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Fire Damage with Hits and Ailments against Blinded Enemies',
    regex: /(\d+)% increased Fire Damage with Hits and Ailments against Blinded Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Fire Damage with Spell Skills',
    regex: /(\d+)% increased Fire Damage with Spell Skills/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Fish Bite Sensitivity',
    regex: /(\d+)% increased Fish Bite Sensitivity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Flammability Curse Effect',
    regex: /(\d+)% increased Flammability Curse Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Flask Charges gained during any Flask Effect',
    regex: /(\d+)% increased Flask Charges gained during any Flask Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Freeze Duration on you',
    regex: /(\d+)% increased Freeze Duration on you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Frostbite Curse Effect',
    regex: /(\d+)% increased Frostbite Curse Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Global Armour while you have no Energy Shield',
    regex: /(\d+)% increased Global Armour while you have no Energy Shield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Global Attack Speed per Green Socket',
    regex: /(\d+)% increased Global Attack Speed per Green Socket/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Global Critical Strike Chance if Corrupted',
    regex: /(\d+)% increased Global Critical Strike Chance if Corrupted/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Global Critical Strike Chance per Level',
    regex: /(\d+)% increased Global Critical Strike Chance per Level/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Global Critical Strike Chance when in Main Hand',
    regex: /(\d+)% increased Global Critical Strike Chance when in Main Hand/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Global Damage',
    regex: /(\d+)% increased Global Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Global Defences per White Socket',
    regex: /(\d+)% increased Global Defences per White Socket/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Global Evasion Rating when on Low Life',
    regex: /(\d+)% increased Global Evasion Rating when on Low Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Global Physical Damage while Frozen',
    regex: /(\d+)% increased Global Physical Damage while Frozen/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Global Physical Damage with Weapons per Red Socket',
    regex: /(\d+)% increased Global Physical Damage with Weapons per Red Socket/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Golem Damage for each Type of Golem you have Summoned',
    regex: /(\d+)% increased Golem Damage for each Type of Golem you have Summoned/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Herald of Ice Damage',
    regex: /(\d+)% increased Herald of Ice Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Ignite Duration on you',
    regex: /(\d+)% increased Ignite Duration on you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Intelligence for each Unique Item Equipped',
    regex: /(\d+)% increased Intelligence for each Unique Item Equipped/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Intelligence Requirement',
    regex: /(\d+)% increased Intelligence Requirement/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Item Quantity per White Socket',
    regex: /(\d+)% increased Item Quantity per White Socket/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Life Recovery from Flasks while affected by Vitality',
    regex: /(\d+)% increased Life Recovery from Flasks while affected by Vitality/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Life Recovery Rate while affected by Vitality',
    regex: /(\d+)% increased Life Recovery Rate while affected by Vitality/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Lightning Damage per 1% Lightning Resistance above 75%',
    regex: /(\d+)% increased Lightning Damage per 1% Lightning Resistance above 75%/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Lightning Damage per 10 Intelligence',
    regex: /(\d+)% increased Lightning Damage per 10 Intelligence/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Lightning Damage per Frenzy Charge',
    regex: /(\d+)% increased Lightning Damage per Frenzy Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Lightning Damage taken',
    regex: /(\d+)% increased Lightning Damage taken/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Lightning Damage while affected by Herald of Thunder',
    regex: /(\d+)% increased Lightning Damage while affected by Herald of Thunder/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Lightning Damage while affected by Wrath',
    regex: /(\d+)% increased Lightning Damage while affected by Wrath/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Lightning Damage with Attack Skills',
    regex: /(\d+)% increased Lightning Damage with Attack Skills/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Lightning Damage with Spell Skills',
    regex: /(\d+)% increased Lightning Damage with Spell Skills/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Mana Cost of Skills',
    regex: /(\d+)% increased Mana Cost of Skills/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Mana Cost of Skills for each 200 total Mana you have Spent Recently',
    regex: /(\d+)% increased Mana Cost of Skills for each 200 total Mana you have Spent Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Mana Recovery from Flasks',
    regex: /(\d+)% increased Mana Recovery from Flasks/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Mana Recovery Rate while affected by Clarity',
    regex: /(\d+)% increased Mana Recovery Rate while affected by Clarity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Mana Regeneration Rate during any Flask Effect',
    regex: /(\d+)% increased Mana Regeneration Rate during any Flask Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Mana Regeneration Rate per Power Charge',
    regex: /(\d+)% increased Mana Regeneration Rate per Power Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Mana Regeneration Rate per Raised Spectre',
    regex: /(\d+)% increased Mana Regeneration Rate per Raised Spectre/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Mana Regeneration Rate while stationary',
    regex: /(\d+)% increased Mana Regeneration Rate while stationary/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Mana Reserved',
    regex: /(\d+)% increased Mana Reserved/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Maximum Energy Shield for each Corrupted Item Equipped',
    regex: /(\d+)% increased Maximum Energy Shield for each Corrupted Item Equipped/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased maximum Energy Shield if Corrupted',
    regex: /(\d+)% increased maximum Energy Shield if Corrupted/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Maximum Life for each Corrupted Item Equipped',
    regex: /(\d+)% increased Maximum Life for each Corrupted Item Equipped/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased maximum Life if Corrupted',
    regex: /(\d+)% increased maximum Life if Corrupted/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Maximum Life if no Equipped Items are Corrupted',
    regex: /(\d+)% increased Maximum Life if no Equipped Items are Corrupted/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Maximum Life per Abyss Jewel affecting you',
    regex: /(\d+)% increased Maximum Life per Abyss Jewel affecting you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Maximum Mana per 2% Chance to Block Spell Damage',
    regex: /(\d+)% increased Maximum Mana per 2% Chance to Block Spell Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Maximum Mana per Abyss Jewel affecting you',
    regex: /(\d+)% increased Maximum Mana per Abyss Jewel affecting you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Maximum total Recovery per second from Energy Shield Leech',
    regex: /(\d+)% increased Maximum total Recovery per second from Energy Shield Leech/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Maximum total Recovery per second from Energy Shield Leech while affected by Zealotry',
    regex: /(\d+)% increased Maximum total Recovery per second from Energy Shield Leech while affected by Zealotry/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Maximum total Recovery per second from Mana Leech',
    regex: /(\d+)% increased Maximum total Recovery per second from Mana Leech/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Melee Damage against Bleeding Enemies',
    regex: /(\d+)% increased Melee Damage against Bleeding Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Melee Damage against Frozen Enemies',
    regex: /(\d+)% increased Melee Damage against Frozen Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Melee Damage against Ignited Enemies',
    regex: /(\d+)% increased Melee Damage against Ignited Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Melee Damage against Shocked Enemies',
    regex: /(\d+)% increased Melee Damage against Shocked Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Melee Damage per Endurance Charge',
    regex: /(\d+)% increased Melee Damage per Endurance Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Melee Damage when on Full Life',
    regex: /(\d+)% increased Melee Damage when on Full Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Melee Physical Damage against Ignited Enemies',
    regex: /(\d+)% increased Melee Physical Damage against Ignited Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Melee Physical Damage per 10 Dexterity',
    regex: /(\d+)% increased Melee Physical Damage per 10 Dexterity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Minion Attack and Cast Speed per 10 Devotion',
    regex: /(\d+)% increased Minion Attack and Cast Speed per 10 Devotion/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Minion Attack and Cast Speed per Skeleton you own',
    regex: /(\d+)% increased Minion Attack and Cast Speed per Skeleton you own/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Minion Attack Speed per 50 Dexterity',
    regex: /(\d+)% increased Minion Attack Speed per 50 Dexterity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Minion Damage per Raised Spectre',
    regex: /(\d+)% increased Minion Damage per Raised Spectre/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Minion Duration per Raised Zombie',
    regex: /(\d+)% increased Minion Duration per Raised Zombie/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Minion Movement Speed per 50 Dexterity',
    regex: /(\d+)% increased Minion Movement Speed per 50 Dexterity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Monster Damage',
    regex: /(\d+)% increased Monster Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Movement Skill Mana Cost',
    regex: /(\d+)% increased Movement Skill Mana Cost/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Movement Speed for # seconds on Throwing a Trap',
    regex: /(\d+)% increased Movement Speed for (\d+) seconds on Throwing a Trap/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Movement Speed for you and nearby Allies',
    regex: /(\d+)% increased Movement Speed for you and nearby Allies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Movement Speed if Corrupted',
    regex: /(\d+)% increased Movement Speed if Corrupted/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Movement Speed if you have used a Vaal Skill Recently',
    regex: /(\d+)% increased Movement Speed if you have used a Vaal Skill Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Movement Speed if you\'ve used a Warcry Recently',
    regex: /(\d+)% increased Movement Speed if you've used a Warcry Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Movement Speed on Shocked Ground',
    regex: /(\d+)% increased Movement Speed on Shocked Ground/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Movement Speed per 10 Dexterity on Allocated Passives in Radius',
    regex: /(\d+)% increased Movement Speed per 10 Dexterity on Allocated Passives in Radius/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Movement Speed per Endurance Charge',
    regex: /(\d+)% increased Movement Speed per Endurance Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Movement Speed per Frenzy Charge',
    regex: /(\d+)% increased Movement Speed per Frenzy Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Movement Speed per Power Charge',
    regex: /(\d+)% increased Movement Speed per Power Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Movement Speed when on Full Life',
    regex: /(\d+)% increased Movement Speed when on Full Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Movement Speed when on Low Life',
    regex: /(\d+)% increased Movement Speed when on Low Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Movement Speed while affected by Grace',
    regex: /(\d+)% increased Movement Speed while affected by Grace/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Movement Speed while Bleeding',
    regex: /(\d+)% increased Movement Speed while Bleeding/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Movement Speed while Cursed',
    regex: /(\d+)% increased Movement Speed while Cursed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Movement Speed while Ignited',
    regex: /(\d+)% increased Movement Speed while Ignited/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Movement Speed while on Full Energy Shield',
    regex: /(\d+)% increased Movement Speed while on Full Energy Shield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Movement Speed while Phasing',
    regex: /(\d+)% increased Movement Speed while Phasing/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Movement Speed while Shocked',
    regex: /(\d+)% increased Movement Speed while Shocked/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Movement Speed while you have Cat\'s Stealth',
    regex: /(\d+)% increased Movement Speed while you have Cat's Stealth/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Onslaught Effect',
    regex: /(\d+)% increased Onslaught Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Physical Damage Over Time per 10 Dexterity',
    regex: /(\d+)% increased Physical Damage Over Time per 10 Dexterity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Physical Damage per Endurance Charge',
    regex: /(\d+)% increased Physical Damage per Endurance Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Physical Damage taken while moving',
    regex: /(\d+)% increased Physical Damage taken while moving/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Physical Damage while affected by Herald of Purity',
    regex: /(\d+)% increased Physical Damage while affected by Herald of Purity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Physical Damage while you have Resolute Technique',
    regex: /(\d+)% increased Physical Damage while you have Resolute Technique/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Physical Damage while you have Unholy Might',
    regex: /(\d+)% increased Physical Damage while you have Unholy Might/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Physical Damage with Attack Skills',
    regex: /(\d+)% increased Physical Damage with Attack Skills/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Physical Damage with Axes',
    regex: /(\d+)% increased Physical Damage with Axes/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Physical Damage with Bows',
    regex: /(\d+)% increased Physical Damage with Bows/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Physical Damage with Claws',
    regex: /(\d+)% increased Physical Damage with Claws/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Physical Damage with Daggers',
    regex: /(\d+)% increased Physical Damage with Daggers/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Physical Damage with Hits and Ailments against Ignited Enemies',
    regex: /(\d+)% increased Physical Damage with Hits and Ailments against Ignited Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Physical Damage with Maces and Sceptres',
    regex: /(\d+)% increased Physical Damage with Maces and Sceptres/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Physical Damage with Ranged Weapons',
    regex: /(\d+)% increased Physical Damage with Ranged Weapons/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Physical Damage with Spell Skills',
    regex: /(\d+)% increased Physical Damage with Spell Skills/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Physical Damage with Staves',
    regex: /(\d+)% increased Physical Damage with Staves/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Physical Damage with Swords',
    regex: /(\d+)% increased Physical Damage with Swords/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Physical Damage with Wands',
    regex: /(\d+)% increased Physical Damage with Wands/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Physical Weapon Damage per 10 Strength',
    regex: /(\d+)% increased Physical Weapon Damage per 10 Strength/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Poison Duration if you have at least 150 Intelligence',
    regex: /(\d+)% increased Poison Duration if you have at least 150 Intelligence/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Poison Duration per Power Charge',
    regex: /(\d+)% increased Poison Duration per Power Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Projectile Attack Damage while you have at least 200 Dexterity',
    regex: /(\d+)% increased Projectile Attack Damage while you have at least 200 Dexterity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Projectile Damage per Power Charge',
    regex: /(\d+)% increased Projectile Damage per Power Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Projectile Speed per Frenzy Charge',
    regex: /(\d+)% increased Projectile Speed per Frenzy Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Quantity of Items Dropped by Slain Frozen Enemies',
    regex: /(\d+)% increased Quantity of Items Dropped by Slain Frozen Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Quantity of Items Dropped by Slain Maimed Enemies',
    regex: /(\d+)% increased Quantity of Items Dropped by Slain Maimed Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Quantity of Items Dropped by Slain Normal Enemies',
    regex: /(\d+)% increased Quantity of Items Dropped by Slain Normal Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Quantity of Items found per Chest opened Recently',
    regex: /(\d+)% increased Quantity of Items found per Chest opened Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Quantity of Items found when on Low Life',
    regex: /(\d+)% increased Quantity of Items found when on Low Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Quantity of Items found with a Magic Item Equipped',
    regex: /(\d+)% increased Quantity of Items found with a Magic Item Equipped/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Raised Zombie Size',
    regex: /(\d+)% increased Raised Zombie Size/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Rarity of Items Dropped by Enemies killed with a Critical Strike',
    regex: /(\d+)% increased Rarity of Items Dropped by Enemies killed with a Critical Strike/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Rarity of Items Dropped by Frozen Enemies',
    regex: /(\d+)% increased Rarity of Items Dropped by Frozen Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Rarity of Items Dropped by Slain Magic Enemies',
    regex: /(\d+)% increased Rarity of Items Dropped by Slain Magic Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Rarity of Items Dropped by Slain Maimed Enemies',
    regex: /(\d+)% increased Rarity of Items Dropped by Slain Maimed Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Rarity of Items Dropped by Slain Shocked Enemies',
    regex: /(\d+)% increased Rarity of Items Dropped by Slain Shocked Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Rarity of Items found when on Low Life',
    regex: /(\d+)% increased Rarity of Items found when on Low Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Rarity of Items found with a Normal Item Equipped',
    regex: /(\d+)% increased Rarity of Items found with a Normal Item Equipped/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Recovery rate of Life and Energy Shield per Power Charge',
    regex: /(\d+)% increased Recovery rate of Life and Energy Shield per Power Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Recovery rate of Life and Energy Shield while affected by Malevolence',
    regex: /(\d+)% increased Recovery rate of Life and Energy Shield while affected by Malevolence/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Scorching Ray beam length',
    regex: /(\d+)% increased Scorching Ray beam length/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Shock Duration on you',
    regex: /(\d+)% increased Shock Duration on you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Skeleton Attack Speed',
    regex: /(\d+)% increased Skeleton Attack Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Skeleton Cast Speed',
    regex: /(\d+)% increased Skeleton Cast Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Skeleton Duration',
    regex: /(\d+)% increased Skeleton Duration/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Skeleton Movement Speed',
    regex: /(\d+)% increased Skeleton Movement Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Skill Effect Duration while affected by Malevolence',
    regex: /(\d+)% increased Skill Effect Duration while affected by Malevolence/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Spell Damage for each 200 total Mana you have Spent Recently, up to 2000%',
    regex: /(\d+)% increased Spell Damage for each 200 total Mana you have Spent Recently, up to 2000%/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Spell Damage if Corrupted',
    regex: /(\d+)% increased Spell Damage if Corrupted/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Spell Damage if you\'ve dealt a Critical Strike in the past 8 seconds',
    regex: /(\d+)% increased Spell Damage if you've dealt a Critical Strike in the past 8 seconds/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Spell Damage if you\'ve dealt a Critical Strike Recently',
    regex: /(\d+)% increased Spell Damage if you've dealt a Critical Strike Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Spell Damage if your other Ring is an Elder Item',
    regex: /(\d+)% increased Spell Damage if your other Ring is an Elder Item/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Spell Damage per 100 Player Maximum Life',
    regex: /(\d+)% increased Spell Damage per 100 Player Maximum Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Spell Damage per 5% Chance to Block Attack Damage',
    regex: /(\d+)% increased Spell Damage per 5% Chance to Block Attack Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Spell Damage per 500 Maximum Mana',
    regex: /(\d+)% increased Spell Damage per 500 Maximum Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Spell Damage per Level',
    regex: /(\d+)% increased Spell Damage per Level/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Spell Damage per Power Charge',
    regex: /(\d+)% increased Spell Damage per Power Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Spell Damage taken when on Low Mana',
    regex: /(\d+)% increased Spell Damage taken when on Low Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Spell Damage while no Mana is Reserved',
    regex: /(\d+)% increased Spell Damage while no Mana is Reserved/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Spell Damage while Shocked',
    regex: /(\d+)% increased Spell Damage while Shocked/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Strength Requirement',
    regex: /(\d+)% increased Strength Requirement/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Stun Duration on you',
    regex: /(\d+)% increased Stun Duration on you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Taunt Duration',
    regex: /(\d+)% increased Taunt Duration/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased total Recovery per second from Mana Leech',
    regex: /(\d+)% increased total Recovery per second from Mana Leech/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Totem Damage per 10 Devotion',
    regex: /(\d+)% increased Totem Damage per 10 Devotion/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Totem Life per 10 Strength Allocated in Radius',
    regex: /(\d+)% increased Totem Life per 10 Strength Allocated in Radius/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Trap Trigger Area of Effect',
    regex: /(\d+)% increased Trap Trigger Area of Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Vulnerability Curse Effect',
    regex: /(\d+)% increased Vulnerability Curse Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Warcry Buff Effect',
    regex: /(\d+)% increased Warcry Buff Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% increased Warcry Cooldown Recovery Speed',
    regex: /(\d+)% increased Warcry Cooldown Recovery Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% less Animate Weapon Duration',
    regex: /(\d+)% less Animate Weapon Duration/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% less Critical Strike Chance',
    regex: /(\d+)% less Critical Strike Chance/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% less Damage',
    regex: /(\d+)% less Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% less Damage taken if you have not been Hit Recently',
    regex: /(\d+)% less Damage taken if you have not been Hit Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% less Elemental Damage taken per Raised Zombie',
    regex: /(\d+)% less Elemental Damage taken per Raised Zombie/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% less Mine Damage',
    regex: /(\d+)% less Mine Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% less Minimum Physical Attack Damage',
    regex: /(\d+)% less Minimum Physical Attack Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% less Poison Duration',
    regex: /(\d+)% less Poison Duration/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% maximum Critical Strike Chance',
    regex: /(\d+)% maximum Critical Strike Chance/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% More Damage with Arrow Hits at Close Range',
    regex: /(\d+)% More Damage with Arrow Hits at Close Range/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% more Damage with Arrow Hits at Close Range while you have Iron Reflexes',
    regex: /(\d+)% more Damage with Arrow Hits at Close Range while you have Iron Reflexes/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% more Maximum Physical Attack Damage',
    regex: /(\d+)% more Maximum Physical Attack Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% more Physical Damage with Unarmed Attacks',
    regex: /(\d+)% more Physical Damage with Unarmed Attacks/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Attack Damage Leeched as Life against Bleeding Enemies',
    regex: /(\d+)% of Attack Damage Leeched as Life against Bleeding Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Attack Damage Leeched as Life against Chilled Enemies',
    regex: /(\d+)% of Attack Damage Leeched as Life against Chilled Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Attack Damage Leeched as Life against Maimed Enemies',
    regex: /(\d+)% of Attack Damage Leeched as Life against Maimed Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Attack Damage Leeched as Life against Taunted Enemies',
    regex: /(\d+)% of Attack Damage Leeched as Life against Taunted Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Attack Damage Leeched as Life on Critical Strike',
    regex: /(\d+)% of Attack Damage Leeched as Life on Critical Strike/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Attack Damage Leeched as Life per Frenzy Charge',
    regex: /(\d+)% of Attack Damage Leeched as Life per Frenzy Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Attack Damage Leeched as Mana',
    regex: /(\d+)% of Attack Damage Leeched as Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Attack Damage Leeched as Mana against Poisoned Enemies',
    regex: /(\d+)% of Attack Damage Leeched as Mana against Poisoned Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Attack Damage Leeched as Mana per Power Charge',
    regex: /(\d+)% of Attack Damage Leeched as Mana per Power Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Cold Damage Converted to Fire Damage',
    regex: /(\d+)% of Cold Damage Converted to Fire Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Cold Damage from Hits taken as Fire Damage',
    regex: /(\d+)% of Cold Damage from Hits taken as Fire Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Cold Damage from Hits taken as Lightning Damage',
    regex: /(\d+)% of Cold Damage from Hits taken as Lightning Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Damage against Frozen Enemies Leeched as Life',
    regex: /(\d+)% of Damage against Frozen Enemies Leeched as Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Damage against Shocked Enemies Leeched as Mana',
    regex: /(\d+)% of Damage against Shocked Enemies Leeched as Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Damage dealt by your Mines is Leeched to you as Life',
    regex: /(\d+)% of Damage dealt by your Mines is Leeched to you as Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Damage dealt by your Totems is Leeched to you as Life',
    regex: /(\d+)% of Damage dealt by your Totems is Leeched to you as Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Damage from Hits is taken from your Spectres\' Life before you',
    regex: /(\d+)% of Damage from Hits is taken from your Spectres' Life before you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Damage is taken from Mana before Life per Power Charge',
    regex: /(\d+)% of Damage is taken from Mana before Life per Power Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Damage Leeched as Energy Shield against Frozen Enemies',
    regex: /(\d+)% of Damage Leeched as Energy Shield against Frozen Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Damage Leeched as Life',
    regex: /(\d+)% of Damage Leeched as Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Damage Leeched as Life against Cursed Enemies',
    regex: /(\d+)% of Damage Leeched as Life against Cursed Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Damage Leeched as Life against Shocked Enemies',
    regex: /(\d+)% of Damage Leeched as Life against Shocked Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Damage Leeched as Life for Skills used by Totems',
    regex: /(\d+)% of Damage Leeched as Life for Skills used by Totems/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Damage Leeched as Life on Critical Strike',
    regex: /(\d+)% of Damage Leeched as Life on Critical Strike/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Damage Leeched as Life per Siphoning Charge',
    regex: /(\d+)% of Damage Leeched as Life per Siphoning Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Damage leeched as Life while affected by Vitality',
    regex: /(\d+)% of Damage leeched as Life while affected by Vitality/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Damage Leeched as Mana against Frozen Enemies',
    regex: /(\d+)% of Damage Leeched as Mana against Frozen Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Damage taken from Mana before Life while affected by Clarity',
    regex: /(\d+)% of Damage taken from Mana before Life while affected by Clarity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Damage taken gained as Life over 4 seconds when Hit',
    regex: /(\d+)% of Damage taken gained as Life over 4 seconds when Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Damage taken gained as Mana over 4 seconds when Hit while affected by Clarity',
    regex: /(\d+)% of Damage taken gained as Mana over 4 seconds when Hit while affected by Clarity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Damage you Reflect to Enemies when Hit is gained as Life',
    regex: /(\d+)% of Damage you Reflect to Enemies when Hit is gained as Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Elemental Damage from Hits taken as Chaos Damage',
    regex: /(\d+)% of Elemental Damage from Hits taken as Chaos Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Elemental Damage Leeched as Life',
    regex: /(\d+)% of Elemental Damage Leeched as Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Fire Damage Converted to Chaos Damage',
    regex: /(\d+)% of Fire Damage Converted to Chaos Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Fire Damage from Hits taken as Cold Damage',
    regex: /(\d+)% of Fire Damage from Hits taken as Cold Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Fire Damage from Hits taken as Lightning Damage',
    regex: /(\d+)% of Fire Damage from Hits taken as Lightning Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Fire Damage from Hits taken as Physical Damage',
    regex: /(\d+)% of Fire Damage from Hits taken as Physical Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Fire Damage Leeched as Life while affected by Anger',
    regex: /(\d+)% of Fire Damage Leeched as Life while affected by Anger/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Fire Damage Leeched as Life while Ignited',
    regex: /(\d+)% of Fire Damage Leeched as Life while Ignited/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Fire Damage taken causes extra Physical Damage',
    regex: /(\d+)% of Fire Damage taken causes extra Physical Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Life Leech applies to Enemies as Chaos Damage',
    regex: /(\d+)% of Life Leech applies to Enemies as Chaos Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Lightning Damage Converted to Chaos Damage',
    regex: /(\d+)% of Lightning Damage Converted to Chaos Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Lightning Damage Converted to Cold Damage',
    regex: /(\d+)% of Lightning Damage Converted to Cold Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Lightning Damage from Hits taken as Cold Damage',
    regex: /(\d+)% of Lightning Damage from Hits taken as Cold Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Lightning Damage from Hits taken as Fire Damage',
    regex: /(\d+)% of Lightning Damage from Hits taken as Fire Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Lightning Damage is Leeched as Energy Shield while affected by Wrath',
    regex: /(\d+)% of Lightning Damage is Leeched as Energy Shield while affected by Wrath/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Lightning Damage is Leeched as Mana while affected by Wrath',
    regex: /(\d+)% of Lightning Damage is Leeched as Mana while affected by Wrath/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Lightning Damage is taken from Mana before Life',
    regex: /(\d+)% of Lightning Damage is taken from Mana before Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Lightning Damage Leeched as Mana',
    regex: /(\d+)% of Lightning Damage Leeched as Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Maximum Energy Shield taken as Physical Damage on Minion Death',
    regex: /(\d+)% of Maximum Energy Shield taken as Physical Damage on Minion Death/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Maximum Life Converted to Energy Shield',
    regex: /(\d+)% of Maximum Life Converted to Energy Shield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Melee Physical Damage taken reflected to Attacker',
    regex: /(\d+)% of Melee Physical Damage taken reflected to Attacker/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Physical Attack Damage Leeched as Life and Mana',
    regex: /(\d+)% of Physical Attack Damage Leeched as Life and Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Physical Attack Damage Leeched as Life per Red Socket',
    regex: /(\d+)% of Physical Attack Damage Leeched as Life per Red Socket/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Physical Attack Damage Leeched as Mana per Blue Socket',
    regex: /(\d+)% of Physical Attack Damage Leeched as Mana per Blue Socket/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Physical Attack Damage Leeched as Mana per Power Charge',
    regex: /(\d+)% of Physical Attack Damage Leeched as Mana per Power Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Physical Damage Converted to Cold Damage while affected by Hatred',
    regex: /(\d+)% of Physical Damage Converted to Cold Damage while affected by Hatred/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Physical Damage Converted to Fire Damage against Ignited Enemies',
    regex: /(\d+)% of Physical Damage Converted to Fire Damage against Ignited Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Physical Damage Converted to Fire Damage while affected by Anger',
    regex: /(\d+)% of Physical Damage Converted to Fire Damage while affected by Anger/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Physical Damage Converted to Fire while you have Avatar of Fire',
    regex: /(\d+)% of Physical Damage Converted to Fire while you have Avatar of Fire/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Physical Damage Converted to Lightning Damage while affected by Wrath',
    regex: /(\d+)% of Physical Damage Converted to Lightning Damage while affected by Wrath/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Physical Damage from Hits taken as Cold Damage while affected by Purity of Elements',
    regex: /(\d+)% of Physical Damage from Hits taken as Cold Damage while affected by Purity of Elements/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Physical Damage from Hits taken as Cold Damage while affected by Purity of Ice',
    regex: /(\d+)% of Physical Damage from Hits taken as Cold Damage while affected by Purity of Ice/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Physical Damage from Hits taken as Damage of a Random Element',
    regex: /(\d+)% of Physical Damage from Hits taken as Damage of a Random Element/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Physical Damage from Hits taken as Fire Damage while affected by Purity of Elements',
    regex: /(\d+)% of Physical Damage from Hits taken as Fire Damage while affected by Purity of Elements/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Physical Damage from Hits taken as Fire Damage while affected by Purity of Fire',
    regex: /(\d+)% of Physical Damage from Hits taken as Fire Damage while affected by Purity of Fire/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Physical Damage from Hits taken as Lightning Damage while affected by Purity of Elements',
    regex: /(\d+)% of Physical Damage from Hits taken as Lightning Damage while affected by Purity of Elements/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Physical Damage from Hits taken as Lightning Damage while affected by Purity of Lightning',
    regex: /(\d+)% of Physical Damage from Hits taken as Lightning Damage while affected by Purity of Lightning/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Physical Damage from Hits with this Weapon is Converted to a random Element',
    regex: /(\d+)% of Physical Damage from Hits with this Weapon is Converted to a random Element/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Physical Damage is taken from Mana before Life',
    regex: /(\d+)% of Physical Damage is taken from Mana before Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Spell Damage Leeched as Energy Shield for each Curse on Enemy',
    regex: /(\d+)% of Spell Damage Leeched as Energy Shield for each Curse on Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% of Spell Damage Leeched as Life if Equipped Shield has at least 30% Chance to Block',
    regex: /(\d+)% of Spell Damage Leeched as Life if Equipped Shield has at least 30% Chance to Block/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Area of Effect of Curse Skills',
    regex: /(\d+)% reduced Area of Effect of Curse Skills/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Attack and Cast Speed',
    regex: /(\d+)% reduced Attack and Cast Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Attack and Cast Speed per Frenzy Charge',
    regex: /(\d+)% reduced Attack and Cast Speed per Frenzy Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Attack Speed',
    regex: /(\d+)% reduced Attack Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Bleeding Duration',
    regex: /(\d+)% reduced Bleeding Duration/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Cast Speed',
    regex: /(\d+)% reduced Cast Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Chance to Block Attack and Spell Damage',
    regex: /(\d+)% reduced Chance to Block Attack and Spell Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Character Size',
    regex: /(\d+)% reduced Character Size/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Chill Duration on you',
    regex: /(\d+)% reduced Chill Duration on you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Cold Resistance',
    regex: /(\d+)% reduced Cold Resistance/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Critical Strike Chance per Power Charge',
    regex: /(\d+)% reduced Critical Strike Chance per Power Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Damage',
    regex: /(\d+)% reduced Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Damage taken',
    regex: /(\d+)% reduced Damage taken/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Damage taken from Damage Over Time',
    regex: /(\d+)% reduced Damage taken from Damage Over Time/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Damage taken from Hits',
    regex: /(\d+)% reduced Damage taken from Hits/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Damage taken from Projectiles',
    regex: /(\d+)% reduced Damage taken from Projectiles/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Damage taken if Corrupted',
    regex: /(\d+)% reduced Damage taken if Corrupted/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Damage taken per 250 Dexterity',
    regex: /(\d+)% reduced Damage taken per 250 Dexterity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Damage taken per 250 Intelligence',
    regex: /(\d+)% reduced Damage taken per 250 Intelligence/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Damage taken per 250 Strength',
    regex: /(\d+)% reduced Damage taken per 250 Strength/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Damage when on Low Life',
    regex: /(\d+)% reduced Damage when on Low Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Dexterity',
    regex: /(\d+)% reduced Dexterity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Duration of Ailments on Enemies',
    regex: /(\d+)% reduced Duration of Ailments on Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Duration of Curses on you',
    regex: /(\d+)% reduced Duration of Curses on you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Duration of Curses on you per 10 Devotion',
    regex: /(\d+)% reduced Duration of Curses on you per 10 Devotion/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Effect of Chill on you',
    regex: /(\d+)% reduced Effect of Chill on you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Elemental Ailment Duration on you per 10 Devotion',
    regex: /(\d+)% reduced Elemental Ailment Duration on you per 10 Devotion/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Elemental Damage taken from Hits per Endurance Charge',
    regex: /(\d+)% reduced Elemental Damage taken from Hits per Endurance Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Elemental Damage taken while stationary',
    regex: /(\d+)% reduced Elemental Damage taken while stationary/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Endurance Charge Duration',
    regex: /(\d+)% reduced Endurance Charge Duration/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Enemy Stun Threshold during any Flask Effect',
    regex: /(\d+)% reduced Enemy Stun Threshold during any Flask Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Enemy Stun Threshold with this Weapon',
    regex: /(\d+)% reduced Enemy Stun Threshold with this Weapon/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Energy Shield Recharge Rate',
    regex: /(\d+)% reduced Energy Shield Recharge Rate/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Experience gain',
    regex: /(\d+)% reduced Experience gain/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Fire Resistance',
    regex: /(\d+)% reduced Fire Resistance/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Flask Charges gained',
    regex: /(\d+)% reduced Flask Charges gained/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Flask Charges gained during any Flask Effect',
    regex: /(\d+)% reduced Flask Charges gained during any Flask Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Flask Effect Duration',
    regex: /(\d+)% reduced Flask Effect Duration/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Flask Life Recovery rate',
    regex: /(\d+)% reduced Flask Life Recovery rate/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Freeze Duration on you',
    regex: /(\d+)% reduced Freeze Duration on you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Frenzy Charge Duration',
    regex: /(\d+)% reduced Frenzy Charge Duration/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Frenzy Charge Duration per Frenzy Charge',
    regex: /(\d+)% reduced Frenzy Charge Duration per Frenzy Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Global Accuracy Rating',
    regex: /(\d+)% reduced Global Accuracy Rating/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Global Physical Damage',
    regex: /(\d+)% reduced Global Physical Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Golem Size',
    regex: /(\d+)% reduced Golem Size/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Ignite Duration on Enemies',
    regex: /(\d+)% reduced Ignite Duration on Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Intelligence',
    regex: /(\d+)% reduced Intelligence/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Life Regeneration rate',
    regex: /(\d+)% reduced Life Regeneration rate/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Light Radius',
    regex: /(\d+)% reduced Light Radius/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Lightning Resistance',
    regex: /(\d+)% reduced Lightning Resistance/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Mana Cost of Minion Skills',
    regex: /(\d+)% reduced Mana Cost of Minion Skills/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Mana Cost of Raise Spectre',
    regex: /(\d+)% reduced Mana Cost of Raise Spectre/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Mana Cost of Skills per 10 Devotion',
    regex: /(\d+)% reduced Mana Cost of Skills per 10 Devotion/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Mana Cost of Skills when on Low Life',
    regex: /(\d+)% reduced Mana Cost of Skills when on Low Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Mana Cost of Totem Skills that cast an Aura',
    regex: /(\d+)% reduced Mana Cost of Totem Skills that cast an Aura/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Mana Cost per Endurance Charge',
    regex: /(\d+)% reduced Mana Cost per Endurance Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Mana Regeneration Rate',
    regex: /(\d+)% reduced Mana Regeneration Rate/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Mana Reserved per 250 total Attributes',
    regex: /(\d+)% reduced Mana Reserved per 250 total Attributes/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced maximum Energy Shield',
    regex: /(\d+)% reduced maximum Energy Shield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced maximum Life',
    regex: /(\d+)% reduced maximum Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced maximum Mana',
    regex: /(\d+)% reduced maximum Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced maximum number of Raised Zombies',
    regex: /(\d+)% reduced maximum number of Raised Zombies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Maximum number of Summoned Raging Spirits',
    regex: /(\d+)% reduced Maximum number of Summoned Raging Spirits/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Maximum Recovery per Life Leech',
    regex: /(\d+)% reduced Maximum Recovery per Life Leech/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Mine Throwing Speed',
    regex: /(\d+)% reduced Mine Throwing Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Movement Speed',
    regex: /(\d+)% reduced Movement Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Movement Speed per Chest opened Recently',
    regex: /(\d+)% reduced Movement Speed per Chest opened Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Movement Speed when on Low Life',
    regex: /(\d+)% reduced Movement Speed when on Low Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Power Charge Duration',
    regex: /(\d+)% reduced Power Charge Duration/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Projectile Damage',
    regex: /(\d+)% reduced Projectile Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Projectile Speed',
    regex: /(\d+)% reduced Projectile Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Quantity of Fish Caught',
    regex: /(\d+)% reduced Quantity of Fish Caught/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Quantity of Items found',
    regex: /(\d+)% reduced Quantity of Items found/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Rarity of Items found',
    regex: /(\d+)% reduced Rarity of Items found/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Recovery rate of Life and Energy Shield',
    regex: /(\d+)% reduced Recovery rate of Life and Energy Shield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Reflected Cold Damage taken while affected by Purity of Ice',
    regex: /(\d+)% reduced Reflected Cold Damage taken while affected by Purity of Ice/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Reflected Elemental Damage taken while affected by Purity of Elements',
    regex: /(\d+)% reduced Reflected Elemental Damage taken while affected by Purity of Elements/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Reflected Fire Damage taken while affected by Purity of Fire',
    regex: /(\d+)% reduced Reflected Fire Damage taken while affected by Purity of Fire/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Reflected Lightning Damage taken while affected by Purity of Lightning',
    regex: /(\d+)% reduced Reflected Lightning Damage taken while affected by Purity of Lightning/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Reflected Physical Damage taken while affected by Determination',
    regex: /(\d+)% reduced Reflected Physical Damage taken while affected by Determination/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Skeleton Duration',
    regex: /(\d+)% reduced Skeleton Duration/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Skill Effect Duration',
    regex: /(\d+)% reduced Skill Effect Duration/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Spark Duration',
    regex: /(\d+)% reduced Spark Duration/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Spell Damage',
    regex: /(\d+)% reduced Spell Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Spell Damage taken from Blinded Enemies',
    regex: /(\d+)% reduced Spell Damage taken from Blinded Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Strength',
    regex: /(\d+)% reduced Strength/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Strength Requirement',
    regex: /(\d+)% reduced Strength Requirement/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Stun and Block Recovery',
    regex: /(\d+)% reduced Stun and Block Recovery/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced total Recovery per second from Life Leech',
    regex: /(\d+)% reduced total Recovery per second from Life Leech/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Totem Damage',
    regex: /(\d+)% reduced Totem Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Trap Duration',
    regex: /(\d+)% reduced Trap Duration/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% reduced Trap Throwing Speed',
    regex: /(\d+)% reduced Trap Throwing Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% slower start of Energy Shield Recharge during any Flask Effect',
    regex: /(\d+)% slower start of Energy Shield Recharge during any Flask Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '#% to all Resistances for each Corrupted Item Equipped',
    regex: /(\d+)% to all Resistances for each Corrupted Item Equipped/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# Accuracy Rating per 2 Intelligence',
    regex: /\+(\d+) Accuracy Rating per 2 Intelligence/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# Armour per active Totem',
    regex: /\+(\d+) Armour per active Totem/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# Armour while stationary',
    regex: /\+(\d+) Armour while stationary/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# Armour while you do not have Avatar of Fire',
    regex: /\+(\d+) Armour while you do not have Avatar of Fire/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# Dexterity Requirement',
    regex: /\+(\d+) Dexterity Requirement/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# Energy Shield gained for each Enemy Hit while affected by Discipline',
    regex: /\+(\d+) Energy Shield gained for each Enemy Hit while affected by Discipline/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# Energy Shield gained on Kill',
    regex: /\+(\d+) Energy Shield gained on Kill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# Energy Shield gained on Kill per Level',
    regex: /\+(\d+) Energy Shield gained on Kill per Level/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# Energy Shield gained on Killing a Shocked Enemy',
    regex: /\+(\d+) Energy Shield gained on Killing a Shocked Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# Intelligence Requirement',
    regex: /\+(\d+) Intelligence Requirement/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# Life and Mana gained for each Enemy hit',
    regex: /\+(\d+) Life and Mana gained for each Enemy hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# Life gained for each Elemental Ailment on Enemies hit by your Attacks',
    regex: /\+(\d+) Life gained for each Elemental Ailment on Enemies hit by your Attacks/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# Life gained for each Elemental Ailment on Enemies hit by your Spells',
    regex: /\+(\d+) Life gained for each Elemental Ailment on Enemies hit by your Spells/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# Life gained for each Enemy Hit while affected by Vitality',
    regex: /\+(\d+) Life gained for each Enemy Hit while affected by Vitality/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# Life gained for each Ignited Enemy hit by your Attacks',
    regex: /\+(\d+) Life gained for each Ignited Enemy hit by your Attacks/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# Life gained on Kill per Frenzy Charge',
    regex: /\+(\d+) Life gained on Kill per Frenzy Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# Life gained on Kill per Level',
    regex: /\+(\d+) Life gained on Kill per Level/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# Life gained on Killing Ignited Enemies',
    regex: /\+(\d+) Life gained on Killing Ignited Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# Life per 2% increased Rarity of Items found',
    regex: /\+(\d+) Life per 2% increased Rarity of Items found/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# Life per 4 Dexterity',
    regex: /\+(\d+) Life per 4 Dexterity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# Mana gained for each Enemy hit by Attacks',
    regex: /\+(\d+) Mana gained for each Enemy hit by Attacks/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# Mana gained on Kill per Level',
    regex: /\+(\d+) Mana gained on Kill per Level/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# Mana gained on Killing a Frozen Enemy',
    regex: /\+(\d+) Mana gained on Killing a Frozen Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# Mana per 4 Strength',
    regex: /\+(\d+) Mana per 4 Strength/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# maximum Energy Shield per 5 Strength',
    regex: /\+(\d+) maximum Energy Shield per 5 Strength/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# Maximum Energy Shield per Level',
    regex: /\+(\d+) Maximum Energy Shield per Level/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# Maximum Life per Level',
    regex: /\+(\d+) Maximum Life per Level/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# Maximum Mana per Level',
    regex: /\+(\d+) Maximum Mana per Level/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# Physical Damage taken from Attack Hits',
    regex: /\+(\d+) Physical Damage taken from Attack Hits/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# second to Summon Skeleton Cooldown',
    regex: /\+(\d+) second to Summon Skeleton Cooldown/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# seconds to Avian\'s Flight Duration',
    regex: /\+(\d+) seconds to Avian's Flight Duration/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# seconds to Avian\'s Might Duration',
    regex: /\+(\d+) seconds to Avian's Might Duration/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# seconds to Cat\'s Stealth Duration',
    regex: /\+(\d+) seconds to Cat's Stealth Duration/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# Strength and Intelligence Requirement',
    regex: /\+(\d+) Strength and Intelligence Requirement/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# Strength Requirement',
    regex: /\+(\d+) Strength Requirement/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Accuracy against Bleeding Enemies',
    regex: /\+(\d+) to Accuracy against Bleeding Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Accuracy Rating per 10 Intelligence on Unallocated Passives in Radius',
    regex: /\+(\d+) to Accuracy Rating per 10 Intelligence on Unallocated Passives in Radius/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Accuracy Rating while at Maximum Frenzy Charges',
    regex: /\+(\d+) to Accuracy Rating while at Maximum Frenzy Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Armour and Evasion Rating',
    regex: /\+(\d+) to Armour and Evasion Rating/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Armour and Evasion Rating while you have Fortify',
    regex: /\+(\d+) to Armour and Evasion Rating while you have Fortify/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Armour per 5 Evasion Rating on Equipped Shield',
    regex: /\+(\d+) to Armour per 5 Evasion Rating on Equipped Shield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Armour per Endurance Charge',
    regex: /\+(\d+) to Armour per Endurance Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Armour while affected by Determination',
    regex: /\+(\d+) to Armour while affected by Determination/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Armour while Frozen',
    regex: /\+(\d+) to Armour while Frozen/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Evasion Rating and Energy Shield',
    regex: /\+(\d+) to Evasion Rating and Energy Shield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Evasion Rating per 5 Maximum Energy Shield on Equipped Shield',
    regex: /\+(\d+) to Evasion Rating per 5 Maximum Energy Shield on Equipped Shield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Evasion Rating while on Full Life',
    regex: /\+(\d+) to Evasion Rating while on Full Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Evasion Rating while on Low Life',
    regex: /\+(\d+) to Evasion Rating while on Low Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Level of all Raise Zombie Gems',
    regex: /\+(\d+) to Level of all Raise Zombie Gems/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Level of Socketed AoE Gems',
    regex: /\+(\d+) to Level of Socketed AoE Gems/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Level of Socketed Elemental Gems',
    regex: /\+(\d+) to Level of Socketed Elemental Gems/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Level of Socketed Golem Gems',
    regex: /\+(\d+) to Level of Socketed Golem Gems/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Level of Socketed Herald Gems',
    regex: /\+(\d+) to Level of Socketed Herald Gems/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Level of Socketed Movement Gems',
    regex: /\+(\d+) to Level of Socketed Movement Gems/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Level of Socketed Projectile Gems',
    regex: /\+(\d+) to Level of Socketed Projectile Gems/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Level of Socketed Vaal Gems',
    regex: /\+(\d+) to Level of Socketed Vaal Gems/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Level of Socketed Warcry Gems',
    regex: /\+(\d+) to Level of Socketed Warcry Gems/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to maximum Divine Charges',
    regex: /\+(\d+) to maximum Divine Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Maximum Energy Shield per 5 Armour on Equipped Shield',
    regex: /\+(\d+) to Maximum Energy Shield per 5 Armour on Equipped Shield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Maximum Energy Shield per Blue Socket',
    regex: /\+(\d+) to Maximum Energy Shield per Blue Socket/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Maximum Life per 10 Dexterity',
    regex: /\+(\d+) to Maximum Life per 10 Dexterity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Maximum Life per 10 Intelligence',
    regex: /\+(\d+) to Maximum Life per 10 Intelligence/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Maximum Life per 2 Intelligence',
    regex: /\+(\d+) to Maximum Life per 2 Intelligence/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Maximum Life per Elder Item Equipped',
    regex: /\+(\d+) to Maximum Life per Elder Item Equipped/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Maximum Life per Red Socket',
    regex: /\+(\d+) to Maximum Life per Red Socket/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Maximum Mana per 10 Dexterity on Unallocated Passives in Radius',
    regex: /\+(\d+) to Maximum Mana per 10 Dexterity on Unallocated Passives in Radius/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Maximum Mana per Green Socket',
    regex: /\+(\d+) to Maximum Mana per Green Socket/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Maximum number of Crab Barriers',
    regex: /\+(\d+) to Maximum number of Crab Barriers/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to maximum number of Golems',
    regex: /\+(\d+) to maximum number of Golems/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to maximum number of Summoned Golems if you have 3 Primordial Items Socketed or Equipped',
    regex: /\+(\d+) to maximum number of Summoned Golems if you have 3 Primordial Items Socketed or Equipped/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to maximum number of Summoned Holy Relics',
    regex: /\+(\d+) to maximum number of Summoned Holy Relics/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Maximum Siphoning Charges per Elder or Shaper Item Equipped',
    regex: /\+(\d+) to Maximum Siphoning Charges per Elder or Shaper Item Equipped/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Maximum Spirit Charges per Abyss Jewel affecting you',
    regex: /\+(\d+) to Maximum Spirit Charges per Abyss Jewel affecting you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Melee Weapon Range per White Socket',
    regex: /\+(\d+) to Melee Weapon Range per White Socket/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Minimum Endurance Charges',
    regex: /\+(\d+) to Minimum Endurance Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Minimum Endurance Charges while on Low Life',
    regex: /\+(\d+) to Minimum Endurance Charges while on Low Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Minimum Frenzy Charges',
    regex: /\+(\d+) to Minimum Frenzy Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Minimum Power Charges',
    regex: /\+(\d+) to Minimum Power Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Minimum Power Charges while on Low Life',
    regex: /\+(\d+) to Minimum Power Charges while on Low Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Spectre maximum Life',
    regex: /\+(\d+) to Spectre maximum Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+# to Total Mana Cost of Skills',
    regex: /\+(\d+) to Total Mana Cost of Skills/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% chance to be Ignited',
    regex: /\+(\d+)% chance to be Ignited/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% chance to be Poisoned',
    regex: /\+(\d+)% chance to be Poisoned/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% chance to be Shocked',
    regex: /\+(\d+)% chance to be Shocked/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% Chance to Block Attack Damage',
    regex: /\+(\d+)% Chance to Block Attack Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% Chance to Block Attack Damage from Taunted Enemies',
    regex: /\+(\d+)% Chance to Block Attack Damage from Taunted Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% Chance to Block Attack Damage if you have Blocked Spell Damage Recently',
    regex: /\+(\d+)% Chance to Block Attack Damage if you have Blocked Spell Damage Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% Chance to Block Attack Damage per 50 Strength',
    regex: /\+(\d+)% Chance to Block Attack Damage per 50 Strength/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% Chance to Block Attack Damage per Frenzy Charge',
    regex: /\+(\d+)% Chance to Block Attack Damage per Frenzy Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% Chance to Block Attack Damage per Power Charge',
    regex: /\+(\d+)% Chance to Block Attack Damage per Power Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% Chance to Block Attack Damage per Summoned Skeleton',
    regex: /\+(\d+)% Chance to Block Attack Damage per Summoned Skeleton/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% Chance to Block Attack Damage when in Off Hand',
    regex: /\+(\d+)% Chance to Block Attack Damage when in Off Hand/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% Chance to Block Attack Damage while affected by Determination',
    regex: /\+(\d+)% Chance to Block Attack Damage while affected by Determination/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% Chance to Block Attack Damage while Dual Wielding Claws',
    regex: /\+(\d+)% Chance to Block Attack Damage while Dual Wielding Claws/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% Chance to Block Attack Damage while not Cursed',
    regex: /\+(\d+)% Chance to Block Attack Damage while not Cursed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% Chance to Block Attack Damage while on Consecrated Ground',
    regex: /\+(\d+)% Chance to Block Attack Damage while on Consecrated Ground/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% Chance to Block Attack Damage while you have at least 10 Crab Barriers',
    regex: /\+(\d+)% Chance to Block Attack Damage while you have at least 10 Crab Barriers/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% Chance to Block Attack Damage while you have at least 5 Crab Barriers',
    regex: /\+(\d+)% Chance to Block Attack Damage while you have at least 5 Crab Barriers/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% Chance to Block Spell Damage',
    regex: /\+(\d+)% Chance to Block Spell Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% Chance to Block Spell Damage per Power Charge',
    regex: /\+(\d+)% Chance to Block Spell Damage per Power Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% Chance to Block Spell Damage while affected by Discipline',
    regex: /\+(\d+)% Chance to Block Spell Damage while affected by Discipline/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% Chance to Block Spell Damage while Cursed',
    regex: /\+(\d+)% Chance to Block Spell Damage while Cursed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% Chance to Block Spell Damage while on Low Life',
    regex: /\+(\d+)% Chance to Block Spell Damage while on Low Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% chance to Evade Attacks while affected by Grace',
    regex: /\+(\d+)% chance to Evade Attacks while affected by Grace/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% Critical Strike Chance per Power Charge',
    regex: /\+(\d+)% Critical Strike Chance per Power Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% Global Critical Strike Multiplier while you have no Frenzy Charges',
    regex: /\+(\d+)% Global Critical Strike Multiplier while you have no Frenzy Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to all Elemental Resistances if Corrupted',
    regex: /\+(\d+)% to all Elemental Resistances if Corrupted/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to all Elemental Resistances per 10 Devotion',
    regex: /\+(\d+)% to all Elemental Resistances per 10 Devotion/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to all Elemental Resistances per Endurance Charge',
    regex: /\+(\d+)% to all Elemental Resistances per Endurance Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to all Elemental Resistances while on Low Life',
    regex: /\+(\d+)% to all Elemental Resistances while on Low Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to all Elemental Resistances while you have at least 200 Strength',
    regex: /\+(\d+)% to all Elemental Resistances while you have at least 200 Strength/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to all maximum Resistances while Poisoned',
    regex: /\+(\d+)% to all maximum Resistances while Poisoned/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to all maximum Resistances while you have no Endurance Charges',
    regex: /\+(\d+)% to all maximum Resistances while you have no Endurance Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Animated Guardian Elemental Resistances',
    regex: /\+(\d+)% to Animated Guardian Elemental Resistances/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Chaos Resistance per Endurance Charge',
    regex: /\+(\d+)% to Chaos Resistance per Endurance Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Chaos Resistance per Poison on you',
    regex: /\+(\d+)% to Chaos Resistance per Poison on you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Chaos Resistance when on Low Life',
    regex: /\+(\d+)% to Chaos Resistance when on Low Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Chaos Resistance while affected by Herald of Agony',
    regex: /\+(\d+)% to Chaos Resistance while affected by Herald of Agony/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Chaos Resistance while affected by Purity of Elements',
    regex: /\+(\d+)% to Chaos Resistance while affected by Purity of Elements/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Cold Resistance when Socketed with a Green Gem',
    regex: /\+(\d+)% to Cold Resistance when Socketed with a Green Gem/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Cold Resistance while affected by Herald of Ice',
    regex: /\+(\d+)% to Cold Resistance while affected by Herald of Ice/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Critical Strike Chance against Enemies on Consecrated Ground during Effect',
    regex: /\+(\d+)% to Critical Strike Chance against Enemies on Consecrated Ground during Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Critical Strike Chance while affected by Aspect of the Cat',
    regex: /\+(\d+)% to Critical Strike Chance while affected by Aspect of the Cat/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Critical Strike Chance while affected by Hatred',
    regex: /\+(\d+)% to Critical Strike Chance while affected by Hatred/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Critical Strike Multiplier for Spells if you haven\'t Killed Recently',
    regex: /\+(\d+)% to Critical Strike Multiplier for Spells if you haven't Killed Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Critical Strike Multiplier for Spells while Dual Wielding',
    regex: /\+(\d+)% to Critical Strike Multiplier for Spells while Dual Wielding/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Critical Strike Multiplier for Spells while holding a Shield',
    regex: /\+(\d+)% to Critical Strike Multiplier for Spells while holding a Shield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Critical Strike Multiplier for Spells while wielding a Staff',
    regex: /\+(\d+)% to Critical Strike Multiplier for Spells while wielding a Staff/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Critical Strike Multiplier if Dexterity is higher than Intelligence',
    regex: /\+(\d+)% to Critical Strike Multiplier if Dexterity is higher than Intelligence/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Critical Strike Multiplier if you\'ve dealt a Non-Critical Strike Recently',
    regex: /\+(\d+)% to Critical Strike Multiplier if you've dealt a Non-Critical Strike Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Critical Strike Multiplier per 1% Chance to Block Attack Damage',
    regex: /\+(\d+)% to Critical Strike Multiplier per 1% Chance to Block Attack Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Critical Strike Multiplier per 10 Strength on Unallocated Passives in Radius',
    regex: /\+(\d+)% to Critical Strike Multiplier per 10 Strength on Unallocated Passives in Radius/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Critical Strike Multiplier per Power Charge',
    regex: /\+(\d+)% to Critical Strike Multiplier per Power Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Critical Strike Multiplier while affected by Anger',
    regex: /\+(\d+)% to Critical Strike Multiplier while affected by Anger/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Critical Strike Multiplier while affected by Precision',
    regex: /\+(\d+)% to Critical Strike Multiplier while affected by Precision/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Damage over Time Multiplier for Ailments per Elder Item Equipped',
    regex: /\+(\d+)% to Damage over Time Multiplier for Ailments per Elder Item Equipped/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Damage over Time Multiplier while affected by Malevolence',
    regex: /\+(\d+)% to Damage over Time Multiplier while affected by Malevolence/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Fire Resistance when Socketed with a Red Gem',
    regex: /\+(\d+)% to Fire Resistance when Socketed with a Red Gem/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Fire Resistance while affected by Herald of Ash',
    regex: /\+(\d+)% to Fire Resistance while affected by Herald of Ash/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Fire Resistance while on Low Life',
    regex: /\+(\d+)% to Fire Resistance while on Low Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Global Critical Strike Multiplier per Green Socket',
    regex: /\+(\d+)% to Global Critical Strike Multiplier per Green Socket/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Lightning Resistance when Socketed with a Blue Gem',
    regex: /\+(\d+)% to Lightning Resistance when Socketed with a Blue Gem/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Lightning Resistance while affected by Herald of Thunder',
    regex: /\+(\d+)% to Lightning Resistance while affected by Herald of Thunder/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to maximum Chance to Block Spell Damage',
    regex: /\+(\d+)% to maximum Chance to Block Spell Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to maximum Chance to Dodge Attack Hits',
    regex: /\+(\d+)% to maximum Chance to Dodge Attack Hits/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to maximum Chance to Dodge Spell Hits',
    regex: /\+(\d+)% to maximum Chance to Dodge Spell Hits/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to maximum Cold Resistance while affected by Herald of Ice',
    regex: /\+(\d+)% to maximum Cold Resistance while affected by Herald of Ice/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to maximum Fire Resistance while affected by Herald of Ash',
    regex: /\+(\d+)% to maximum Fire Resistance while affected by Herald of Ash/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to maximum Lightning Resistance while affected by Herald of Thunder',
    regex: /\+(\d+)% to maximum Lightning Resistance while affected by Herald of Thunder/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Quality of Socketed AoE Gems',
    regex: /\+(\d+)% to Quality of Socketed AoE Gems/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Quality of Socketed Aura Gems',
    regex: /\+(\d+)% to Quality of Socketed Aura Gems/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Quality of Socketed Bow Gems',
    regex: /\+(\d+)% to Quality of Socketed Bow Gems/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Quality of Socketed Chaos Gems',
    regex: /\+(\d+)% to Quality of Socketed Chaos Gems/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Quality of Socketed Cold Gems',
    regex: /\+(\d+)% to Quality of Socketed Cold Gems/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Quality of Socketed Dexterity Gems',
    regex: /\+(\d+)% to Quality of Socketed Dexterity Gems/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Quality of Socketed Fire Gems',
    regex: /\+(\d+)% to Quality of Socketed Fire Gems/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Quality of Socketed Gems',
    regex: /\+(\d+)% to Quality of Socketed Gems/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Quality of Socketed Intelligence Gems',
    regex: /\+(\d+)% to Quality of Socketed Intelligence Gems/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Quality of Socketed Lightning Gems',
    regex: /\+(\d+)% to Quality of Socketed Lightning Gems/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Quality of Socketed Melee Gems',
    regex: /\+(\d+)% to Quality of Socketed Melee Gems/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Quality of Socketed Minion Gems',
    regex: /\+(\d+)% to Quality of Socketed Minion Gems/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Quality of Socketed Projectile Gems',
    regex: /\+(\d+)% to Quality of Socketed Projectile Gems/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Quality of Socketed Strength Gems',
    regex: /\+(\d+)% to Quality of Socketed Strength Gems/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Unarmed Attack Critical Strike Chance',
    regex: /\+(\d+)% to Unarmed Attack Critical Strike Chance/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+#% to Vaal Skill Critical Strike Multiplier',
    regex: /\+(\d+)% to Vaal Skill Critical Strike Multiplier/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+1 to Level of Socketed Active Skill Gems per # Player Levels',
    regex: /\+1 to Level of Socketed Active Skill Gems per (\d+) Player Levels/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '+1 to maximum number of Raised Zombies per # Strength',
    regex: /\+1 to maximum number of Raised Zombies per (\d+) Strength/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '-# Chaos Damage taken',
    regex: /-(\d+) Chaos Damage taken/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '-# Dexterity per 1 Dexterity on Allocated Passives in Radius',
    regex: /-(\d+) Dexterity per 1 Dexterity on Allocated Passives in Radius/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '-# Physical Damage taken from Attacks',
    regex: /-(\d+) Physical Damage taken from Attacks/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '-# Physical Damage taken from Projectile Attacks',
    regex: /-(\d+) Physical Damage taken from Projectile Attacks/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '-# Physical Damage taken when Hit by Animals',
    regex: /-(\d+) Physical Damage taken when Hit by Animals/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '-# to Maximum Endurance Charges',
    regex: /-(\d+) to Maximum Endurance Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '-# to Maximum Power Charges',
    regex: /-(\d+) to Maximum Power Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '-# to Total Mana Cost of Skills while affected by Clarity',
    regex: /-(\d+) to Total Mana Cost of Skills while affected by Clarity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '-#% to all Elemental Resistances',
    regex: /-(\d+)% to all Elemental Resistances/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '-#% to Chaos Resistance',
    regex: /-(\d+)% to Chaos Resistance/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '1% increased Armour per # Strength when in Off Hand',
    regex: /1% increased Armour per (\d+) Strength when in Off Hand/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '1% increased Attack Damage per 300 of the lowest of Armour and Evasion Rating',
    regex: /1% increased Attack Damage per 300 of the lowest of Armour and Evasion Rating/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '1% increased Claw Physical Damage per # Dexterity Allocated in Radius',
    regex: /1% increased Claw Physical Damage per (\d+) Dexterity Allocated in Radius/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '1% increased Damage per # Strength when in Main Hand',
    regex: /1% increased Damage per (\d+) Strength when in Main Hand/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '1% increased Evasion Rating per # Dexterity Allocated in Radius',
    regex: /1% increased Evasion Rating per (\d+) Dexterity Allocated in Radius/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '1% increased Melee Physical Damage with Unarmed Attacks per # Dexterity Allocated in Radius',
    regex: /1% increased Melee Physical Damage with Unarmed Attacks per (\d+) Dexterity Allocated in Radius/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '1% increased Movement Speed per # Evasion Rating, up to 75%',
    regex: /1% increased Movement Speed per (\d+) Evasion Rating, up to 75%/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '1% increased Rarity of Items found per # Rampage Kills',
    regex: /1% increased Rarity of Items found per (\d+) Rampage Kills/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '10% Chance to Trigger Level 18 Summon Spectral Wolf on Kill',
    regex: /10% Chance to Trigger Level 18 Summon Spectral Wolf on Kill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '25% chance to cause Bleeding on Hit',
    regex: /25% chance to cause Bleeding on Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '30% increased Global Critical Strike Chance',
    regex: /30% increased Global Critical Strike Chance/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '30% increased Movement Speed for # seconds on Throwing a Trap',
    regex: /30% increased Movement Speed for (\d+) seconds on Throwing a Trap/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '35% chance to avoid being Stunned for each Herald Skill affecting you',
    regex: /35% chance to avoid being Stunned for each Herald Skill affecting you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '40% increased Global Critical Strike Chance',
    regex: /40% increased Global Critical Strike Chance/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '50% chance to cause Bleeding on Critical Strike',
    regex: /50% chance to cause Bleeding on Critical Strike/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '50% chance to cause Bleeding on Hit',
    regex: /50% chance to cause Bleeding on Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: '50% increased Global Critical Strike Chance',
    regex: /50% increased Global Critical Strike Chance/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Acrobatics',
    regex: /Acrobatics/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Action Speed cannot be modified to below base value',
    regex: /Action Speed cannot be modified to below base value/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds # to # Chaos Damage for each Spider\'s Web on the Enemy',
    regex: /Adds (\d+) to (\d+) Chaos Damage for each Spider's Web on the Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds # to # Chaos Damage in Off Hand',
    regex: /Adds (\d+) to (\d+) Chaos Damage in Off Hand/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds # to # Chaos Damage to Spells and Attacks during any Flask Effect',
    regex: /Adds (\d+) to (\d+) Chaos Damage to Spells and Attacks during any Flask Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds # to # Cold Damage against Chilled Enemies',
    regex: /Adds (\d+) to (\d+) Cold Damage against Chilled Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds # to # Cold Damage in Off Hand',
    regex: /Adds (\d+) to (\d+) Cold Damage in Off Hand/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds # to # Cold Damage to Attacks per 10 Dexterity',
    regex: /Adds (\d+) to (\d+) Cold Damage to Attacks per 10 Dexterity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds # to # Cold Damage to Counterattacks',
    regex: /Adds (\d+) to (\d+) Cold Damage to Counterattacks/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds # to # Cold Damage to Spells per Power Charge',
    regex: /Adds (\d+) to (\d+) Cold Damage to Spells per Power Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds # to # Cold Damage to Spells while no Life is Reserved',
    regex: /Adds (\d+) to (\d+) Cold Damage to Spells while no Life is Reserved/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds # to # Cold Damage while affected by Hatred',
    regex: /Adds (\d+) to (\d+) Cold Damage while affected by Hatred/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds # to # Cold Damage while you have Avian\'s Might',
    regex: /Adds (\d+) to (\d+) Cold Damage while you have Avian's Might/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds # to # Fire Attack Damage per Buff on you',
    regex: /Adds (\d+) to (\d+) Fire Attack Damage per Buff on you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds # to # Fire Damage in Main Hand',
    regex: /Adds (\d+) to (\d+) Fire Damage in Main Hand/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds # to # Fire Damage to Attacks against Ignited Enemies',
    regex: /Adds (\d+) to (\d+) Fire Damage to Attacks against Ignited Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds # to # Fire Damage to Attacks per 10 Strength',
    regex: /Adds (\d+) to (\d+) Fire Damage to Attacks per 10 Strength/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds # to # Fire Damage to Hits with this Weapon against Blinded Enemies',
    regex: /Adds (\d+) to (\d+) Fire Damage to Hits with this Weapon against Blinded Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds # to # Fire Damage to Spells while no Life is Reserved',
    regex: /Adds (\d+) to (\d+) Fire Damage to Spells while no Life is Reserved/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds # to # Fire Spell Damage per Buff on you',
    regex: /Adds (\d+) to (\d+) Fire Spell Damage per Buff on you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds # to # Lightning Damage for each Shocked Enemy you\'ve Killed Recently',
    regex: /Adds (\d+) to (\d+) Lightning Damage for each Shocked Enemy you've Killed Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds # to # Lightning Damage to Attacks per 10 Intelligence',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Attacks per 10 Intelligence/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds # to # Lightning Damage to Hits against Ignited Enemies',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Hits against Ignited Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds # to # Lightning Damage to Spells per Power Charge',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Spells per Power Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds # to # Lightning Damage to Spells while no Life is Reserved',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Spells while no Life is Reserved/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds # to # Lightning Damage to Spells while Unarmed',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Spells while Unarmed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds # to # Lightning Damage to Unarmed Attacks',
    regex: /Adds (\d+) to (\d+) Lightning Damage to Unarmed Attacks/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds # to # Lightning Damage while you have Avian\'s Might',
    regex: /Adds (\d+) to (\d+) Lightning Damage while you have Avian's Might/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds # to # Physical Damage per Endurance Charge',
    regex: /Adds (\d+) to (\d+) Physical Damage per Endurance Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds # to # Physical Damage to Attacks against Frozen Enemies',
    regex: /Adds (\d+) to (\d+) Physical Damage to Attacks against Frozen Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds # to # Physical Damage to Attacks and Spells per Siphoning Charge',
    regex: /Adds (\d+) to (\d+) Physical Damage to Attacks and Spells per Siphoning Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds # to # Physical Damage to Attacks per 25 Dexterity',
    regex: /Adds (\d+) to (\d+) Physical Damage to Attacks per 25 Dexterity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds # to # Physical Damage to Attacks per Level',
    regex: /Adds (\d+) to (\d+) Physical Damage to Attacks per Level/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds # to # Physical Damage to Attacks with this Weapon per 3 Player Levels',
    regex: /Adds (\d+) to (\d+) Physical Damage to Attacks with this Weapon per 3 Player Levels/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds #-# Chaos Damage to Attacks while you have a Bestial Minion',
    regex: /Adds (\d+)-(\d+) Chaos Damage to Attacks while you have a Bestial Minion/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds #-# Physical Damage to Attacks while you have a Bestial Minion',
    regex: /Adds (\d+)-(\d+) Physical Damage to Attacks while you have a Bestial Minion/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds 1 maximum Lightning Damage to Attacks per # Dexterity Allocated in Radius',
    regex: /Adds 1 maximum Lightning Damage to Attacks per (\d+) Dexterity Allocated in Radius/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Adds 1 to Maximum Life per # Intelligence Allocated in Radius',
    regex: /Adds 1 to Maximum Life per (\d+) Intelligence Allocated in Radius/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Agony Crawler deals #% increased Damage',
    regex: /Agony Crawler deals (\d+)% increased Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'All Attack Damage Chills when you Stun',
    regex: /All Attack Damage Chills when you Stun/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'All Attacks with this Weapon are Critical Strikes',
    regex: /All Attacks with this Weapon are Critical Strikes/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'All bonuses from an Equipped Shield apply to your Minions instead of you',
    regex: /All bonuses from an Equipped Shield apply to your Minions instead of you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'All Sockets are White',
    regex: /All Sockets are White/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Allies\' Aura Buffs do not affect you',
    regex: /Allies' Aura Buffs do not affect you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Allocated Small Passive Skills in Radius grant nothing',
    regex: /Allocated Small Passive Skills in Radius grant nothing/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Always Critically Strike Shocked Enemies',
    regex: /Always Critically Strike Shocked Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'An additional Curse can be applied to you',
    regex: /An additional Curse can be applied to you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Ancestral Bond',
    regex: /Ancestral Bond/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'and nearby Allies Regenerate 200 Life per second',
    regex: /and nearby Allies Regenerate 200 Life per second/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Anger Reserves no Mana',
    regex: /Anger Reserves no Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Animated Guardian deals #% increased Damage per Animated Weapon',
    regex: /Animated Guardian deals (\d+)% increased Damage per Animated Weapon/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Animated Minions\' Melee Attacks deal #% less Damage to surrounding targets',
    regex: /Animated Minions' Melee Attacks deal (\d+)% less Damage to surrounding targets/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Animated Minions\' Melee Attacks deal Splash Damage to surrounding targets',
    regex: /Animated Minions' Melee Attacks deal Splash Damage to surrounding targets/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Applies Level 15 Elemental Weakness on Blocking a Spell, ignoring Curse Limit',
    regex: /Applies Level 15 Elemental Weakness on Blocking a Spell, ignoring Curse Limit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Applies Level 15 Punishment on Blocking a Melee Attack, ignoring Curse Limit',
    regex: /Applies Level 15 Punishment on Blocking a Melee Attack, ignoring Curse Limit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Applies Level 15 Temporal Chains on Blocking a Projectile Attack, ignoring Curse Limit',
    regex: /Applies Level 15 Temporal Chains on Blocking a Projectile Attack, ignoring Curse Limit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Arctic Armour has #% reduced Mana Reservation',
    regex: /Arctic Armour has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Area contains additional waves of Bone Rhoas',
    regex: /Area contains additional waves of Bone Rhoas/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Area contains additional waves of Ghosts',
    regex: /Area contains additional waves of Ghosts/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Area contains additional waves of Oriathan Zombies',
    regex: /Area contains additional waves of Oriathan Zombies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Area contains additional waves of Phantasms',
    regex: /Area contains additional waves of Phantasms/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Area contains additional waves of Raging Spirits',
    regex: /Area contains additional waves of Raging Spirits/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Area contains additional waves of Ravager Maws',
    regex: /Area contains additional waves of Ravager Maws/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Area contains additional waves of Zombies',
    regex: /Area contains additional waves of Zombies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Area is inhabited by # additional Rogue Exiles',
    regex: /Area is inhabited by (\d+) additional Rogue Exiles/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Areas contain Beasts to hunt',
    regex: /Areas contain Beasts to hunt/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Armour is increased by Uncapped Fire Resistance',
    regex: /Armour is increased by Uncapped Fire Resistance/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Arrow Dancing',
    regex: /Arrow Dancing/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Arrows deal #% increased Damage with Hits and Ailments to Targets they Pierce',
    regex: /Arrows deal (\d+)% increased Damage with Hits and Ailments to Targets they Pierce/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Arrows deal 50% increased Damage with Hits and Ailments to Targets they Pierce',
    regex: /Arrows deal 50% increased Damage with Hits and Ailments to Targets they Pierce/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Arrows Pierce # additional Targets',
    regex: /Arrows Pierce (\d+) additional Targets/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Arrows Pierce 1 additional Target',
    regex: /Arrows Pierce 1 additional Target/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Arrows Pierce all Targets',
    regex: /Arrows Pierce all Targets/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Arrows Pierce all Targets after Chaining',
    regex: /Arrows Pierce all Targets after Chaining/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Arrows Pierce all Targets after Forking',
    regex: /Arrows Pierce all Targets after Forking/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Arrows Pierce an additional Target',
    regex: /Arrows Pierce an additional Target/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Arrows that Pierce have +#% to Critical Strike Multiplier',
    regex: /Arrows that Pierce have \+(\d+)% to Critical Strike Multiplier/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Arrows that Pierce have 50% chance to inflict Bleeding',
    regex: /Arrows that Pierce have 50% chance to inflict Bleeding/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Aspect of the Avian also grants Avian\'s Might and Avian\'s Flight to nearby Allies',
    regex: /Aspect of the Avian also grants Avian's Might and Avian's Flight to nearby Allies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Aspect of the Cat Reserves no Mana',
    regex: /Aspect of the Cat Reserves no Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Aspect of the Spider can inflict Spider\'s Web on Enemies an additional time',
    regex: /Aspect of the Spider can inflict Spider's Web on Enemies an additional time/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Aspect of the Spider inflicts Spider\'s Webs and Hinder every # Seconds instead',
    regex: /Aspect of the Spider inflicts Spider's Webs and Hinder every (\d+) Seconds instead/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Attack Skills gain #% of Physical Damage as Extra Fire Damage per Socketed Red Gem',
    regex: /Attack Skills gain (\d+)% of Physical Damage as Extra Fire Damage per Socketed Red Gem/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Attack Skills have +# to maximum number of Summoned Totems',
    regex: /Attack Skills have \+(\d+) to maximum number of Summoned Totems/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Attacks always inflict Bleeding while you have Cat\'s Stealth',
    regex: /Attacks always inflict Bleeding while you have Cat's Stealth/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Attacks Chain an additional time when in Main Hand',
    regex: /Attacks Chain an additional time when in Main Hand/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Attacks deal no Physical Damage',
    regex: /Attacks deal no Physical Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Attacks fire an additional Projectile when in Off Hand',
    regex: /Attacks fire an additional Projectile when in Off Hand/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Attacks have #% chance to Poison while at maximum Frenzy Charges',
    regex: /Attacks have (\d+)% chance to Poison while at maximum Frenzy Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Attacks have 25% chance to inflict Bleeding when Hitting Cursed Enemies',
    regex: /Attacks have 25% chance to inflict Bleeding when Hitting Cursed Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Attacks have Blood Magic',
    regex: /Attacks have Blood Magic/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Attacks with this Weapon deal # to # added Fire Damage to Bleeding Enemies',
    regex: /Attacks with this Weapon deal (\d+) to (\d+) added Fire Damage to Bleeding Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Attacks with this Weapon deal # to # added Physical Damage to Ignited Enemies',
    regex: /Attacks with this Weapon deal (\d+) to (\d+) added Physical Damage to Ignited Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Attacks with this Weapon deal #-# added Chaos Damage against Enemies affected by at least 5 Poisons',
    regex: /Attacks with this Weapon deal (\d+)-(\d+) added Chaos Damage against Enemies affected by at least 5 Poisons/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Attacks with this Weapon deal Double Damage',
    regex: /Attacks with this Weapon deal Double Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Attacks with this Weapon deal Double Damage to Chilled Enemies',
    regex: /Attacks with this Weapon deal Double Damage to Chilled Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Attacks with this Weapon have #% chance to inflict Bleeding against Ignited Enemies',
    regex: /Attacks with this Weapon have (\d+)% chance to inflict Bleeding against Ignited Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Attacks with this Weapon have #% chance to inflict Bleeding while you do not have Avatar of Fire',
    regex: /Attacks with this Weapon have (\d+)% chance to inflict Bleeding while you do not have Avatar of Fire/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Attacks with this Weapon have #% increased Elemental Damage',
    regex: /Attacks with this Weapon have (\d+)% increased Elemental Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Attacks with this Weapon Maim on hit',
    regex: /Attacks with this Weapon Maim on hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Avatar of Fire',
    regex: /Avatar of Fire/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Bathed in the blood of # sacrificed in the name of Doryani Passives in radius are Conquered by the Vaal',
    regex: /Bathed in the blood of (\d+) sacrificed in the name of Doryani Passives in radius are Conquered by the Vaal/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Bathed in the blood of # sacrificed in the name of Xibaqua Passives in radius are Conquered by the Vaal',
    regex: /Bathed in the blood of (\d+) sacrificed in the name of Xibaqua Passives in radius are Conquered by the Vaal/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Bathed in the blood of # sacrificed in the name of Zerphi Passives in radius are Conquered by the Vaal',
    regex: /Bathed in the blood of (\d+) sacrificed in the name of Zerphi Passives in radius are Conquered by the Vaal/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Bleeding cannot be inflicted on you',
    regex: /Bleeding cannot be inflicted on you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Bleeding Enemies you Kill Explode, dealing #% of their Maximum Life as Physical Damage',
    regex: /Bleeding Enemies you Kill Explode, dealing (\d+)% of their Maximum Life as Physical Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Bleeding Enemies you Kill with Hits Shatter',
    regex: /Bleeding Enemies you Kill with Hits Shatter/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Bleeding you inflict deals Damage #% faster',
    regex: /Bleeding you inflict deals Damage (\d+)% faster/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Bleeding you inflict is Reflected to you',
    regex: /Bleeding you inflict is Reflected to you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Blight has #% increased Hinder Duration',
    regex: /Blight has (\d+)% increased Hinder Duration/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Blind Chilled Enemies on Hit',
    regex: /Blind Chilled Enemies on Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Blood Magic',
    regex: /Blood Magic/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Bow Attacks fire # additional Arrows',
    regex: /Bow Attacks fire (\d+) additional Arrows/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Bow Attacks fire an additional Arrow while Main Hand Accuracy Rating is at least 3000',
    regex: /Bow Attacks fire an additional Arrow while Main Hand Accuracy Rating is at least 3000/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Bow Knockback at Close Range',
    regex: /Bow Knockback at Close Range/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Burning Hoofprints',
    regex: /Burning Hoofprints/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Can have a second Enchantment Modifier',
    regex: /Can have a second Enchantment Modifier/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Can have up to # additional Trap placed at a time',
    regex: /Can have up to (\d+) additional Trap placed at a time/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Can roll Minion Modifiers',
    regex: /Can roll Minion Modifiers/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Can\'t use Chest armour',
    regex: /Can't use Chest armour/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Can\'t use other Rings',
    regex: /Can't use other Rings/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot be Blinded',
    regex: /Cannot be Blinded/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot be Blinded while affected by Precision',
    regex: /Cannot be Blinded while affected by Precision/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot be Chilled',
    regex: /Cannot be Chilled/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot be Chilled during Onslaught',
    regex: /Cannot be Chilled during Onslaught/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot be Chilled or Frozen if you have used a Fire Skill Recently',
    regex: /Cannot be Chilled or Frozen if you have used a Fire Skill Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot be Frozen if Dexterity is higher than Intelligence',
    regex: /Cannot be Frozen if Dexterity is higher than Intelligence/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot be Frozen, Chilled or Ignited with Her Blessing',
    regex: /Cannot be Frozen, Chilled or Ignited with Her Blessing/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot be Ignited',
    regex: /Cannot be Ignited/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot be Ignited if Strength is higher than Dexterity',
    regex: /Cannot be Ignited if Strength is higher than Dexterity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot be Ignited while on Low Life',
    regex: /Cannot be Ignited while on Low Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot be Knocked Back',
    regex: /Cannot be Knocked Back/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot be Shocked',
    regex: /Cannot be Shocked/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot be Shocked if Intelligence is higher than Strength',
    regex: /Cannot be Shocked if Intelligence is higher than Strength/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot be Shocked while Chilled',
    regex: /Cannot be Shocked while Chilled/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot be Stunned',
    regex: /Cannot be Stunned/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot be Stunned by Attacks if your other Ring is an Elder Item',
    regex: /Cannot be Stunned by Attacks if your other Ring is an Elder Item/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot be Stunned by Spells if your other Ring is a Shaper Item',
    regex: /Cannot be Stunned by Spells if your other Ring is a Shaper Item/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot be Stunned if you have at least 10 Crab Barriers',
    regex: /Cannot be Stunned if you have at least 10 Crab Barriers/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot be Stunned when on Low Life',
    regex: /Cannot be Stunned when on Low Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot be used with Chaos Inoculation',
    regex: /Cannot be used with Chaos Inoculation/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot Block',
    regex: /Cannot Block/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot Block Attacks',
    regex: /Cannot Block Attacks/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot Block Spells',
    regex: /Cannot Block Spells/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot Cast Spells',
    regex: /Cannot Cast Spells/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot Evade Enemy Attacks',
    regex: /Cannot Evade Enemy Attacks/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot gain Endurance Charges',
    regex: /Cannot gain Endurance Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot gain Energy Shield',
    regex: /Cannot gain Energy Shield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot gain Power Charges',
    regex: /Cannot gain Power Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot inflict Freeze or Chill',
    regex: /Cannot inflict Freeze or Chill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot inflict Ignite',
    regex: /Cannot inflict Ignite/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot inflict Shock',
    regex: /Cannot inflict Shock/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot Knock Enemies Back',
    regex: /Cannot Knock Enemies Back/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot Leech',
    regex: /Cannot Leech/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot Leech Life',
    regex: /Cannot Leech Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot Leech Life from Critical Strikes',
    regex: /Cannot Leech Life from Critical Strikes/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot Leech Mana',
    regex: /Cannot Leech Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot Leech or Regenerate Mana',
    regex: /Cannot Leech or Regenerate Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot Leech when on Low Life',
    regex: /Cannot Leech when on Low Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cannot lose Crab Barriers if you have lost Crab Barriers Recently',
    regex: /Cannot lose Crab Barriers if you have lost Crab Barriers Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Carved to glorify # new faithful converted by High Templar Avarius Passives in radius are Conquered by the Templars',
    regex: /Carved to glorify (\d+) new faithful converted by High Templar Avarius Passives in radius are Conquered by the Templars/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Carved to glorify # new faithful converted by High Templar Dominus Passives in radius are Conquered by the Templars',
    regex: /Carved to glorify (\d+) new faithful converted by High Templar Dominus Passives in radius are Conquered by the Templars/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Carved to glorify # new faithful converted by High Templar Venarius Passives in radius are Conquered by the Templars',
    regex: /Carved to glorify (\d+) new faithful converted by High Templar Venarius Passives in radius are Conquered by the Templars/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Causes Bleeding on Hit',
    regex: /Causes Bleeding on Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Causes Bleeding when you Stun',
    regex: /Causes Bleeding when you Stun/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Celestial Footprints',
    regex: /Celestial Footprints/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Chance to Block Spell Damage is Unlucky',
    regex: /Chance to Block Spell Damage is Unlucky/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Channelling Skills deal #% increased Damage',
    regex: /Channelling Skills deal (\d+)% increased Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Channelling Skills deal #% increased Damage per 10 Devotion',
    regex: /Channelling Skills deal (\d+)% increased Damage per 10 Devotion/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Chaos Damage can Ignite, Chill and Shock',
    regex: /Chaos Damage can Ignite, Chill and Shock/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Chaos Damage does not bypass Energy Shield',
    regex: /Chaos Damage does not bypass Energy Shield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Chaos Damage does not bypass Energy Shield while not on Low Life or Low Mana',
    regex: /Chaos Damage does not bypass Energy Shield while not on Low Life or Low Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Chaos Resistance is doubled',
    regex: /Chaos Resistance is doubled/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Chaos Skills have #% increased Skill Effect Duration',
    regex: /Chaos Skills have (\d+)% increased Skill Effect Duration/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Chill Effect and Freeze Duration on you are based on #% of Energy Shield',
    regex: /Chill Effect and Freeze Duration on you are based on (\d+)% of Energy Shield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Chill Enemies for # second on Hit with this Weapon when in Off Hand',
    regex: /Chill Enemies for (\d+) second on Hit with this Weapon when in Off Hand/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Chill Enemy for # second when Hit, reducing their Action Speed by 30%',
    regex: /Chill Enemy for (\d+) second when Hit, reducing their Action Speed by 30%/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Chill nearby Enemies when you Focus, causing 30% reduced Action Speed',
    regex: /Chill nearby Enemies when you Focus, causing 30% reduced Action Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Clarity Reserves no Mana',
    regex: /Clarity Reserves no Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cold Damage is increased by 1% per # Intelligence from Allocated Passives in Radius',
    regex: /Cold Damage is increased by 1% per (\d+) Intelligence from Allocated Passives in Radius/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cold Resistance is #%',
    regex: /Cold Resistance is (\d+)%/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cold Skills have #% chance to Poison on Hit',
    regex: /Cold Skills have (\d+)% chance to Poison on Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Commanded leadership over # warriors under Kaom Passives in radius are Conquered by the Karui',
    regex: /Commanded leadership over (\d+) warriors under Kaom Passives in radius are Conquered by the Karui/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Commanded leadership over # warriors under Kiloava Passives in radius are Conquered by the Karui',
    regex: /Commanded leadership over (\d+) warriors under Kiloava Passives in radius are Conquered by the Karui/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Commanded leadership over # warriors under Rakiata Passives in radius are Conquered by the Karui',
    regex: /Commanded leadership over (\d+) warriors under Rakiata Passives in radius are Conquered by the Karui/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Commissioned # coins to commemorate Cadiro Passives in radius are Conquered by the Eternal Empire',
    regex: /Commissioned (\d+) coins to commemorate Cadiro Passives in radius are Conquered by the Eternal Empire/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Commissioned # coins to commemorate Chitus Passives in radius are Conquered by the Eternal Empire',
    regex: /Commissioned (\d+) coins to commemorate Chitus Passives in radius are Conquered by the Eternal Empire/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Commissioned # coins to commemorate Victario Passives in radius are Conquered by the Eternal Empire',
    regex: /Commissioned (\d+) coins to commemorate Victario Passives in radius are Conquered by the Eternal Empire/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Conductivity has #% reduced Mana Reservation',
    regex: /Conductivity has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Conduit',
    regex: /Conduit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Consecrated Ground created by this Flask has Tripled Radius',
    regex: /Consecrated Ground created by this Flask has Tripled Radius/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Consecrated Ground created during Effect applies #% increased Damage taken to Enemies',
    regex: /Consecrated Ground created during Effect applies (\d+)% increased Damage taken to Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Consecrated Ground you create while affected by Zealotry causes enemies to take #% increased Damage',
    regex: /Consecrated Ground you create while affected by Zealotry causes enemies to take (\d+)% increased Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Consumes a Void Charge to Trigger Level # Void Shot when you fire Arrows',
    regex: /Consumes a Void Charge to Trigger Level (\d+) Void Shot when you fire Arrows/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Consumes Socketed Support Gems when they reach Maximum Level Can Consume # Support Gems Has not Consumed any Gems',
    regex: /Consumes Socketed Support Gems when they reach Maximum Level Can Consume (\d+) Support Gems Has not Consumed any Gems/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Contains additional waves of Undead Monsters',
    regex: /Contains additional waves of Undead Monsters/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Contains waves of Monsters',
    regex: /Contains waves of Monsters/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Counts as all One Handed Melee Weapon Types',
    regex: /Counts as all One Handed Melee Weapon Types/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Counts as Dual Wielding',
    regex: /Counts as Dual Wielding/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Cover Enemies in Ash when they Hit you',
    regex: /Cover Enemies in Ash when they Hit you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Create a Blighted Spore when you Kill a Rare Monster',
    regex: /Create a Blighted Spore when you Kill a Rare Monster/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Create Consecrated Ground when you Shatter an Enemy',
    regex: /Create Consecrated Ground when you Shatter an Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Creates a Smoke Cloud on Rampage',
    regex: /Creates a Smoke Cloud on Rampage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Creates Consecrated Ground on Critical Strike',
    regex: /Creates Consecrated Ground on Critical Strike/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Crimson Dance',
    regex: /Crimson Dance/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Critical Strike Chance is increased by Lightning Resistance',
    regex: /Critical Strike Chance is increased by Lightning Resistance/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Critical Strikes deal no Damage',
    regex: /Critical Strikes deal no Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Critical Strikes do not always Freeze',
    regex: /Critical Strikes do not always Freeze/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Critical Strikes have #% chance to Blind Enemies while you have Cat\'s Stealth',
    regex: /Critical Strikes have (\d+)% chance to Blind Enemies while you have Cat's Stealth/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Critical Strikes have Culling Strike',
    regex: /Critical Strikes have Culling Strike/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Critical Strikes Penetrate #% of Enemy Elemental Resistances while affected by Zealotry',
    regex: /Critical Strikes Penetrate (\d+)% of Enemy Elemental Resistances while affected by Zealotry/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Culling Strike against Burning Enemies',
    regex: /Culling Strike against Burning Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Culling Strike against Enemies Cursed with Poacher\'s Mark',
    regex: /Culling Strike against Enemies Cursed with Poacher's Mark/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Curse Enemies with Flammability on Hit',
    regex: /Curse Enemies with Flammability on Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Curse Enemies with Level # Elemental Weakness on Hit',
    regex: /Curse Enemies with Level (\d+) Elemental Weakness on Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Curse Enemies with Level # Poacher\'s Mark on Hit, which can apply to Hexproof Enemies',
    regex: /Curse Enemies with Level (\d+) Poacher's Mark on Hit, which can apply to Hexproof Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Curse Enemies with Level # Temporal Chains on Hit',
    regex: /Curse Enemies with Level (\d+) Temporal Chains on Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Curse Enemies with Level 5 Vulnerability on Block',
    regex: /Curse Enemies with Level 5 Vulnerability on Block/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Curse Enemies with Socketed Curse Gem on Hit',
    regex: /Curse Enemies with Socketed Curse Gem on Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Curse Enemies with Temporal Chains on Hit',
    regex: /Curse Enemies with Temporal Chains on Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Curse Reflection',
    regex: /Curse Reflection/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Curses in this item are reflected back to you',
    regex: /Curses in this item are reflected back to you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Curses on Slain Enemies are transferred to a nearby Enemy',
    regex: /Curses on Slain Enemies are transferred to a nearby Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Damage from Enemies Hitting you is Unlucky while you are Cursed with Vulnerability',
    regex: /Damage from Enemies Hitting you is Unlucky while you are Cursed with Vulnerability/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Damage from Enemies Hitting you is Unlucky while you are on Full Life',
    regex: /Damage from Enemies Hitting you is Unlucky while you are on Full Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Damage from Enemies Hitting you is Unlucky while you are on Low Life',
    regex: /Damage from Enemies Hitting you is Unlucky while you are on Low Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Damage Penetrates #% Cold Resistance against Chilled Enemies',
    regex: /Damage Penetrates (\d+)% Cold Resistance against Chilled Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Damage Penetrates #% Cold Resistance while affected by Hatred',
    regex: /Damage Penetrates (\d+)% Cold Resistance while affected by Hatred/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Damage Penetrates #% Fire Resistance against Blinded Enemies',
    regex: /Damage Penetrates (\d+)% Fire Resistance against Blinded Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Damage Penetrates #% Fire Resistance while affected by Anger',
    regex: /Damage Penetrates (\d+)% Fire Resistance while affected by Anger/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Damage Penetrates #% Lightning Resistance while affected by Wrath',
    regex: /Damage Penetrates (\d+)% Lightning Resistance while affected by Wrath/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Damage Penetrates #% of Fire Resistance if you have Blocked Recently',
    regex: /Damage Penetrates (\d+)% of Fire Resistance if you have Blocked Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Damage with Weapons Penetrates #% Cold Resistance',
    regex: /Damage with Weapons Penetrates (\d+)% Cold Resistance/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Damage with Weapons Penetrates #% Elemental Resistance',
    regex: /Damage with Weapons Penetrates (\d+)% Elemental Resistance/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Damage with Weapons Penetrates #% Fire Resistance',
    regex: /Damage with Weapons Penetrates (\d+)% Fire Resistance/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Damage with Weapons Penetrates #% Lightning Resistance',
    regex: /Damage with Weapons Penetrates (\d+)% Lightning Resistance/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Damaging Ailments you inflict deal Damage #% faster while affected by Malevolence',
    regex: /Damaging Ailments you inflict deal Damage (\d+)% faster while affected by Malevolence/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Deal # to # Lightning Damage to nearby Enemies when you lose a Power, Frenzy, or Endurance Charge',
    regex: /Deal (\d+) to (\d+) Lightning Damage to nearby Enemies when you lose a Power, Frenzy, or Endurance Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Deal no Chaos Damage',
    regex: /Deal no Chaos Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Deal no Elemental Damage',
    regex: /Deal no Elemental Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Deal no Non-Elemental Damage',
    regex: /Deal no Non-Elemental Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Deal no Physical Damage',
    regex: /Deal no Physical Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Deals # Chaos Damage per second to nearby Enemies',
    regex: /Deals (\d+) Chaos Damage per second to nearby Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Debuffs on you expire #% faster',
    regex: /Debuffs on you expire (\d+)% faster/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Debuffs on you expire #% faster while affected by Haste',
    regex: /Debuffs on you expire (\d+)% faster while affected by Haste/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Denoted service of # dekhara in the akhara of Asaneth Passives in radius are Conquered by the Maraketh',
    regex: /Denoted service of (\d+) dekhara in the akhara of Asaneth Passives in radius are Conquered by the Maraketh/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Denoted service of # dekhara in the akhara of Deshret Passives in radius are Conquered by the Maraketh',
    regex: /Denoted service of (\d+) dekhara in the akhara of Deshret Passives in radius are Conquered by the Maraketh/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Denoted service of # dekhara in the akhara of Nasima Passives in radius are Conquered by the Maraketh',
    regex: /Denoted service of (\d+) dekhara in the akhara of Nasima Passives in radius are Conquered by the Maraketh/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Despair has #% reduced Mana Reservation',
    regex: /Despair has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Determination has #% increased Aura Effect',
    regex: /Determination has (\d+)% increased Aura Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Determination has #% reduced Mana Reservation',
    regex: /Determination has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Determination Reserves no Mana',
    regex: /Determination Reserves no Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Dexterity and Intelligence from passives in Radius count towards Strength Melee Damage bonus',
    regex: /Dexterity and Intelligence from passives in Radius count towards Strength Melee Damage bonus/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Dexterity from Passives in Radius is Transformed to Intelligence',
    regex: /Dexterity from Passives in Radius is Transformed to Intelligence/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Dexterity from Passives in Radius is Transformed to Strength',
    regex: /Dexterity from Passives in Radius is Transformed to Strength/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Discipline has #% increased Aura Effect',
    regex: /Discipline has (\d+)% increased Aura Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Discipline has #% reduced Mana Reservation',
    regex: /Discipline has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Discipline Reserves no Mana',
    regex: /Discipline Reserves no Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Duplicates your other ring',
    regex: /Duplicates your other ring/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Effects of Consecrated Ground you create while affected by Zealotry Linger for # seconds',
    regex: /Effects of Consecrated Ground you create while affected by Zealotry Linger for (\d+) seconds/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Eldritch Battery',
    regex: /Eldritch Battery/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Elemental Equilibrium',
    regex: /Elemental Equilibrium/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Elemental Overload',
    regex: /Elemental Overload/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Elemental Resistances are Zero',
    regex: /Elemental Resistances are Zero/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Emits a golden glow',
    regex: /Emits a golden glow/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Enemies affected by your Spider\'s Webs deal #% reduced Damage',
    regex: /Enemies affected by your Spider's Webs deal (\d+)% reduced Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Enemies affected by your Spider\'s Webs have #% to All Resistances',
    regex: /Enemies affected by your Spider's Webs have (\d+)% to All Resistances/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Enemies Cannot Leech Life From you',
    regex: /Enemies Cannot Leech Life From you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Enemies Cannot Leech Mana From you',
    regex: /Enemies Cannot Leech Mana From you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Enemies do not block your movement for # seconds on Rampage',
    regex: /Enemies do not block your movement for (\d+) seconds on Rampage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Enemies Frozen by you take 20% increased Damage',
    regex: /Enemies Frozen by you take 20% increased Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Enemies inflict Elemental Ailments on you instead of nearby Allies',
    regex: /Enemies inflict Elemental Ailments on you instead of nearby Allies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Enemies killed by Zombies explode dealing #% of their Maximum Life as Fire Damage',
    regex: /Enemies killed by Zombies explode dealing (\d+)% of their Maximum Life as Fire Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Enemies near corpses affected by your Curses are Blinded Enemies Killed near corpses affected by your Curses explode, dealing #% of their Life as Physical Damage',
    regex: /Enemies near corpses affected by your Curses are Blinded Enemies Killed near corpses affected by your Curses explode, dealing (\d+)% of their Life as Physical Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Enemies on Fungal Ground you Kill Explode, dealing 5% of their Life as Chaos Damage',
    regex: /Enemies on Fungal Ground you Kill Explode, dealing 5% of their Life as Chaos Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Enemies slain by Socketed Gems drop #% increased item quantity',
    regex: /Enemies slain by Socketed Gems drop (\d+)% increased item quantity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Enemies take #% increased Damage for each type of Ailment you have inflicted on them',
    regex: /Enemies take (\d+)% increased Damage for each type of Ailment you have inflicted on them/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Enemies you Attack have #% chance to Reflect # to # Chaos Damage to you',
    regex: /Enemies you Attack have (\d+)% chance to Reflect (\d+) to (\d+) Chaos Damage to you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Enemies you Attack Reflect # Physical Damage to you',
    regex: /Enemies you Attack Reflect (\d+) Physical Damage to you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Enemies you hit are destroyed on Kill',
    regex: /Enemies you hit are destroyed on Kill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Enemies you inflict Bleeding on grant #% increased Flask Charges',
    regex: /Enemies you inflict Bleeding on grant (\d+)% increased Flask Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Enemies you kill are Shocked',
    regex: /Enemies you kill are Shocked/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Enemies you Kill have a #% chance to Explode, dealing a quarter of their maximum Life as Chaos Damage',
    regex: /Enemies you Kill have a (\d+)% chance to Explode, dealing a quarter of their maximum Life as Chaos Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Enemies you Shock have #% reduced Cast Speed',
    regex: /Enemies you Shock have (\d+)% reduced Cast Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Enemies you Shock have #% reduced Movement Speed',
    regex: /Enemies you Shock have (\d+)% reduced Movement Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Enemy hits on you roll low Damage',
    regex: /Enemy hits on you roll low Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Enemy Projectiles Pierce you',
    regex: /Enemy Projectiles Pierce you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Energy Shield Recharge starts when you are Stunned',
    regex: /Energy Shield Recharge starts when you are Stunned/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Envy Reserves no Mana',
    regex: /Envy Reserves no Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Evasion Rating is increased by Uncapped Cold Resistance',
    regex: /Evasion Rating is increased by Uncapped Cold Resistance/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Every 16 seconds you gain Elemental Overload for 8 seconds',
    regex: /Every 16 seconds you gain Elemental Overload for 8 seconds/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Every 16 seconds you gain Iron Reflexes for 8 seconds',
    regex: /Every 16 seconds you gain Iron Reflexes for 8 seconds/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Every 8 seconds, gain Avatar of Fire for 4 seconds',
    regex: /Every 8 seconds, gain Avatar of Fire for 4 seconds/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Extra gore',
    regex: /Extra gore/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Far Shot',
    regex: /Far Shot/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Fire Damage is increased by 1% per # Intelligence from Allocated Passives in Radius',
    regex: /Fire Damage is increased by 1% per (\d+) Intelligence from Allocated Passives in Radius/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Fire Resistance is #%',
    regex: /Fire Resistance is (\d+)%/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Fire Skills have #% chance to Poison on Hit',
    regex: /Fire Skills have (\d+)% chance to Poison on Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Flammability has #% reduced Mana Reservation',
    regex: /Flammability has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Flasks apply to your Raised Zombies and Spectres',
    regex: /Flasks apply to your Raised Zombies and Spectres/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Flasks do not apply to you',
    regex: /Flasks do not apply to you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Focus has #% increased Cooldown Recovery Speed',
    regex: /Focus has (\d+)% increased Cooldown Recovery Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Fortify',
    regex: /Fortify/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Found Magic Items drop Identified',
    regex: /Found Magic Items drop Identified/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Frostbite has #% reduced Mana Reservation',
    regex: /Frostbite has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Frostblink has #% increased Duration',
    regex: /Frostblink has (\d+)% increased Duration/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain # Armour per Grand Spectrum',
    regex: /Gain (\d+) Armour per Grand Spectrum/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain # Energy Shield for each Enemy you Hit which is affected by a Spider\'s Web',
    regex: /Gain (\d+) Energy Shield for each Enemy you Hit which is affected by a Spider's Web/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain # Life when you lose an Endurance Charge',
    regex: /Gain (\d+) Life when you lose an Endurance Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain # Life when you Stun an Enemy',
    regex: /Gain (\d+) Life when you Stun an Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain # Mana per Grand Spectrum',
    regex: /Gain (\d+) Mana per Grand Spectrum/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain # Power Charges when you Warcry',
    regex: /Gain (\d+) Power Charges when you Warcry/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain #% of Cold Damage as Extra Chaos Damage per Frenzy Charge',
    regex: /Gain (\d+)% of Cold Damage as Extra Chaos Damage per Frenzy Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain #% of Elemental Damage as Extra Chaos Damage per Shaper Item Equipped',
    regex: /Gain (\d+)% of Elemental Damage as Extra Chaos Damage per Shaper Item Equipped/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain #% of Fire Damage as Extra Chaos Damage per Endurance Charge',
    regex: /Gain (\d+)% of Fire Damage as Extra Chaos Damage per Endurance Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain #% of Lightning Damage as Extra Chaos Damage per Power Charge',
    regex: /Gain (\d+)% of Lightning Damage as Extra Chaos Damage per Power Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain #% of Maximum Life as Extra Maximum Energy Shield',
    regex: /Gain (\d+)% of Maximum Life as Extra Maximum Energy Shield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain #% of Maximum Mana as Extra Maximum Energy Shield',
    regex: /Gain (\d+)% of Maximum Mana as Extra Maximum Energy Shield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain #% of Maximum Mana as Extra Maximum Energy Shield while affected by Clarity',
    regex: /Gain (\d+)% of Maximum Mana as Extra Maximum Energy Shield while affected by Clarity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain #% of Non-Chaos Damage as extra Chaos Damage per Siphoning Charge',
    regex: /Gain (\d+)% of Non-Chaos Damage as extra Chaos Damage per Siphoning Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain #% of Physical Attack Damage as Extra Fire Damage',
    regex: /Gain (\d+)% of Physical Attack Damage as Extra Fire Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain #% of Physical Attack Damage as Extra Lightning Damage',
    regex: /Gain (\d+)% of Physical Attack Damage as Extra Lightning Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain #% of Physical Damage as Extra Chaos Damage while at maximum Power Charges',
    regex: /Gain (\d+)% of Physical Damage as Extra Chaos Damage while at maximum Power Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain #% of Physical Damage as Extra Fire Damage per 1 Rage',
    regex: /Gain (\d+)% of Physical Damage as Extra Fire Damage per 1 Rage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain #% of Physical Damage as Extra Fire Damage while affected by Anger',
    regex: /Gain (\d+)% of Physical Damage as Extra Fire Damage while affected by Anger/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain #% of Physical Damage as Extra Lightning Damage while affected by Wrath',
    regex: /Gain (\d+)% of Physical Damage as Extra Lightning Damage while affected by Wrath/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain #% of Sword Physical Damage as Extra Fire Damage',
    regex: /Gain (\d+)% of Sword Physical Damage as Extra Fire Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain #% of Weapon Physical Damage as Extra Damage of a random Element',
    regex: /Gain (\d+)% of Weapon Physical Damage as Extra Damage of a random Element/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain #% of Weapon Physical Damage as Extra Damage of each Element',
    regex: /Gain (\d+)% of Weapon Physical Damage as Extra Damage of each Element/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain +# Life when you Hit a Bleeding Enemy',
    regex: /Gain \+(\d+) Life when you Hit a Bleeding Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain +# Life when you Taunt an Enemy',
    regex: /Gain \+(\d+) Life when you Taunt an Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain +# Mana when you hit a Taunted Enemy',
    regex: /Gain \+(\d+) Mana when you hit a Taunted Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain +#% to Critical Strike Chance for 2 seconds after Spending a total of 800 Mana',
    regex: /Gain \+(\d+)% to Critical Strike Chance for 2 seconds after Spending a total of 800 Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain 1 Rage on Critical Hit with attacks, no more than once every # seconds',
    regex: /Gain 1 Rage on Critical Hit with attacks, no more than once every (\d+) seconds/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain a Divine Charge on Hit',
    regex: /Gain a Divine Charge on Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain a Flask Charge when you deal a Critical Strike',
    regex: /Gain a Flask Charge when you deal a Critical Strike/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain a Flask Charge when you deal a Critical Strike while affected by Precision',
    regex: /Gain a Flask Charge when you deal a Critical Strike while affected by Precision/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain a Flask Charge when you deal a Critical Strike while at maximum Frenzy Charges',
    regex: /Gain a Flask Charge when you deal a Critical Strike while at maximum Frenzy Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain a Frenzy Charge if an Attack Ignites an Enemy',
    regex: /Gain a Frenzy Charge if an Attack Ignites an Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain a Frenzy Charge on Critical Strike',
    regex: /Gain a Frenzy Charge on Critical Strike/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain a Frenzy Charge on every 50th Rampage Kill',
    regex: /Gain a Frenzy Charge on every 50th Rampage Kill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain a Frenzy Charge on Hit while Bleeding',
    regex: /Gain a Frenzy Charge on Hit while Bleeding/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain a Frenzy Charge on reaching Maximum Power Charges',
    regex: /Gain a Frenzy Charge on reaching Maximum Power Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain a Frenzy, Endurance, or Power Charge once per second while you are Stationary',
    regex: /Gain a Frenzy, Endurance, or Power Charge once per second while you are Stationary/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain a Power Charge for each Enemy you hit with a Critical Strike',
    regex: /Gain a Power Charge for each Enemy you hit with a Critical Strike/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain a Power Charge on Non-Critical Strike',
    regex: /Gain a Power Charge on Non-Critical Strike/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain a Power Charge when you use a Vaal Skill',
    regex: /Gain a Power Charge when you use a Vaal Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain a Spirit Charge every second',
    regex: /Gain a Spirit Charge every second/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain a Void Charge every # seconds',
    regex: /Gain a Void Charge every (\d+) seconds/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain an Endurance Charge every second if you\'ve been Hit Recently',
    regex: /Gain an Endurance Charge every second if you've been Hit Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain an Endurance Charge when you lose a Power Charge',
    regex: /Gain an Endurance Charge when you lose a Power Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain an Endurance Charge when you take a Critical Strike',
    regex: /Gain an Endurance Charge when you take a Critical Strike/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain Arcane Surge for 4 seconds when you create Consecrated Ground while affected by Zealotry',
    regex: /Gain Arcane Surge for 4 seconds when you create Consecrated Ground while affected by Zealotry/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain Arcane Surge on Hit with Spells',
    regex: /Gain Arcane Surge on Hit with Spells/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain Arcane Surge on Hit with Spells while at maximum Power Charges',
    regex: /Gain Arcane Surge on Hit with Spells while at maximum Power Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain Arcane Surge when you deal a Critical Strike',
    regex: /Gain Arcane Surge when you deal a Critical Strike/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain Armour equal to your Reserved Mana',
    regex: /Gain Armour equal to your Reserved Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain Her Blessing for 3 seconds when you Ignite an Enemy',
    regex: /Gain Her Blessing for 3 seconds when you Ignite an Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain Her Embrace for # seconds when you Ignite an Enemy',
    regex: /Gain Her Embrace for (\d+) seconds when you Ignite an Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain Immunity to Physical Damage for # seconds on Rampage',
    regex: /Gain Immunity to Physical Damage for (\d+) seconds on Rampage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain Maddening Presence for 10 seconds when you Kill a Rare or Unique Enemy',
    regex: /Gain Maddening Presence for 10 seconds when you Kill a Rare or Unique Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain Onslaught for # seconds when you Cast Socketed Golem Skill',
    regex: /Gain Onslaught for (\d+) seconds when you Cast Socketed Golem Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain Onslaught for # seconds when you Warcry',
    regex: /Gain Onslaught for (\d+) seconds when you Warcry/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain Onslaught for 4 seconds on Hit while at maximum Frenzy Charges',
    regex: /Gain Onslaught for 4 seconds on Hit while at maximum Frenzy Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain Rampage while at Maximum Endurance Charges',
    regex: /Gain Rampage while at Maximum Endurance Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain Shaper\'s Presence for 10 seconds when you kill a Rare or Unique Enemy',
    regex: /Gain Shaper's Presence for 10 seconds when you kill a Rare or Unique Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain Soul Eater during any Flask Effect',
    regex: /Gain Soul Eater during any Flask Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain Soul Eater for # seconds when you use a Vaal Skill',
    regex: /Gain Soul Eater for (\d+) seconds when you use a Vaal Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain Unholy Might for # seconds on Rampage',
    regex: /Gain Unholy Might for (\d+) seconds on Rampage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain Unholy Might for 2 seconds on Melee Critical Strike',
    regex: /Gain Unholy Might for 2 seconds on Melee Critical Strike/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain Unholy Might for 4 seconds on Critical Strike',
    regex: /Gain Unholy Might for 4 seconds on Critical Strike/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain Unholy Might on block for # seconds',
    regex: /Gain Unholy Might on block for (\d+) seconds/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gain up to your maximum number of Frenzy and Power Charges when you gain Cat\'s Stealth',
    regex: /Gain up to your maximum number of Frenzy and Power Charges when you gain Cat's Stealth/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gems can be Socketed in this Item ignoring Socket Colour',
    regex: /Gems can be Socketed in this Item ignoring Socket Colour/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gems Socketed in Blue Sockets gain #% increased Experience',
    regex: /Gems Socketed in Blue Sockets gain (\d+)% increased Experience/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gems Socketed in Green Sockets have +#% to Quality',
    regex: /Gems Socketed in Green Sockets have \+(\d+)% to Quality/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gems Socketed in Red Sockets have +# to Level',
    regex: /Gems Socketed in Red Sockets have \+(\d+) to Level/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Ghost Reaver',
    regex: /Ghost Reaver/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Glacial Cascade gains an additional stage with # Intelligence from Passives in Radius',
    regex: /Glacial Cascade gains an additional stage with (\d+) Intelligence from Passives in Radius/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Glows while in an Area containing a Unique Fish',
    regex: /Glows while in an Area containing a Unique Fish/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Golden Radiance',
    regex: /Golden Radiance/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Golem Skills have #% increased Cooldown Recovery Speed',
    regex: /Golem Skills have (\d+)% increased Cooldown Recovery Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Golems Deal #% less Damage',
    regex: /Golems Deal (\d+)% less Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Golems have #% increased Attack and Cast Speed',
    regex: /Golems have (\d+)% increased Attack and Cast Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Golems have #% increased Cooldown Recovery Speed',
    regex: /Golems have (\d+)% increased Cooldown Recovery Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Golems have #% increased Maximum Life',
    regex: /Golems have (\d+)% increased Maximum Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Golems have #% increased Movement Speed',
    regex: /Golems have (\d+)% increased Movement Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Golems have #% less Life',
    regex: /Golems have (\d+)% less Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Golems have +# to Armour',
    regex: /Golems have \+(\d+) to Armour/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Golems Summoned in the past 8 seconds deal #% increased Damage',
    regex: /Golems Summoned in the past 8 seconds deal (\d+)% increased Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Gore Footprints',
    regex: /Gore Footprints/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grace has #% increased Aura Effect',
    regex: /Grace has (\d+)% increased Aura Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grace has #% reduced Mana Reservation',
    regex: /Grace has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grace Reserves no Mana',
    regex: /Grace Reserves no Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants all bonuses of Unallocated Small Passive Skills in Radius',
    regex: /Grants all bonuses of Unallocated Small Passive Skills in Radius/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Level # Bear Trap Skill',
    regex: /Grants Level (\d+) Bear Trap Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Level # Blight Skill',
    regex: /Grants Level (\d+) Blight Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Level # Blood Offering Skill',
    regex: /Grants Level (\d+) Blood Offering Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Level # Death Aura Skill',
    regex: /Grants Level (\d+) Death Aura Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Level # Doryani\'s Touch Skill',
    regex: /Grants Level (\d+) Doryani's Touch Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Level # Frostbite Skill',
    regex: /Grants Level (\d+) Frostbite Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Level # Frostblink Skill',
    regex: /Grants Level (\d+) Frostblink Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Level # Gluttony of Elements Skill',
    regex: /Grants Level (\d+) Gluttony of Elements Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Level # Icestorm Skill',
    regex: /Grants Level (\d+) Icestorm Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Level # Illusory Warp Skill',
    regex: /Grants Level (\d+) Illusory Warp Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Level # Intimidating Cry Skill',
    regex: /Grants Level (\d+) Intimidating Cry Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Level # Lightning Warp Skill',
    regex: /Grants Level (\d+) Lightning Warp Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Level # Petrification Statue Skill',
    regex: /Grants Level (\d+) Petrification Statue Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Level # Precision Skill',
    regex: /Grants Level (\d+) Precision Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Level # Purity of Elements Skill',
    regex: /Grants Level (\d+) Purity of Elements Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Level # Purity of Fire Skill',
    regex: /Grants Level (\d+) Purity of Fire Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Level # Purity of Ice Skill',
    regex: /Grants Level (\d+) Purity of Ice Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Level # Purity of Lightning Skill',
    regex: /Grants Level (\d+) Purity of Lightning Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Level # Reckoning Skill',
    regex: /Grants Level (\d+) Reckoning Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Level # Scorching Ray Skill',
    regex: /Grants Level (\d+) Scorching Ray Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Level # Smite Skill',
    regex: /Grants Level (\d+) Smite Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Level # Summon Doedre\'s Effigy Skill Socketed Curses are Triggered by Doedre\'s Effigy when Summoned Socketed Curses ignore Curse Limit',
    regex: /Grants Level (\d+) Summon Doedre's Effigy Skill Socketed Curses are Triggered by Doedre's Effigy when Summoned Socketed Curses ignore Curse Limit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Level # Summon Stone Golem Skill',
    regex: /Grants Level (\d+) Summon Stone Golem Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Level # Vaal Impurity of Fire Skill',
    regex: /Grants Level (\d+) Vaal Impurity of Fire Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Level # Vaal Impurity of Ice Skill',
    regex: /Grants Level (\d+) Vaal Impurity of Ice Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Level # Vaal Impurity of Lightning Skill',
    regex: /Grants Level (\d+) Vaal Impurity of Lightning Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Level # Vengeance Skill',
    regex: /Grants Level (\d+) Vengeance Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Level 20 Summon Bestial Rhoa Skill',
    regex: /Grants Level 20 Summon Bestial Rhoa Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Level 20 Summon Bestial Snake Skill',
    regex: /Grants Level 20 Summon Bestial Snake Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Level 20 Summon Bestial Ursa Skill',
    regex: /Grants Level 20 Summon Bestial Ursa Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Malachai\'s Endurance, Frenzy and Power for 6 seconds each, in sequence',
    regex: /Grants Malachai's Endurance, Frenzy and Power for 6 seconds each, in sequence/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Summon Harbinger of Brutality Skill',
    regex: /Grants Summon Harbinger of Brutality Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Summon Harbinger of Directions Skill',
    regex: /Grants Summon Harbinger of Directions Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Summon Harbinger of Focus Skill',
    regex: /Grants Summon Harbinger of Focus Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Summon Harbinger of Storms Skill',
    regex: /Grants Summon Harbinger of Storms Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Summon Harbinger of the Arcane Skill',
    regex: /Grants Summon Harbinger of the Arcane Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Grants Summon Harbinger of Time Skill',
    regex: /Grants Summon Harbinger of Time Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Half of your Strength is added to your Minions',
    regex: /Half of your Strength is added to your Minions/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Has # Abyssal Sockets',
    regex: /Has (\d+) Abyssal Sockets/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Has # Sockets',
    regex: /Has (\d+) Sockets/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Has 1 Socket',
    regex: /Has 1 Socket/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Has an additional Implicit Mod',
    regex: /Has an additional Implicit Mod/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Has Consumed 1 Gem',
    regex: /Has Consumed 1 Gem/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Has no Attribute Requirements',
    regex: /Has no Attribute Requirements/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Has no Sockets',
    regex: /Has no Sockets/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Has one socket of each colour',
    regex: /Has one socket of each colour/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Haste Reserves no Mana',
    regex: /Haste Reserves no Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Hatred Reserves no Mana',
    regex: /Hatred Reserves no Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Herald of Agony has #% increased Buff Effect',
    regex: /Herald of Agony has (\d+)% increased Buff Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Herald of Agony has #% reduced Mana Reservation',
    regex: /Herald of Agony has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Herald of Ash has #% increased Buff Effect',
    regex: /Herald of Ash has (\d+)% increased Buff Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Herald of Ash has #% reduced Mana Reservation',
    regex: /Herald of Ash has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Herald of Ice has #% increased Buff Effect',
    regex: /Herald of Ice has (\d+)% increased Buff Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Herald of Ice has #% reduced Mana Reservation',
    regex: /Herald of Ice has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Herald of Purity has #% increased Buff Effect',
    regex: /Herald of Purity has (\d+)% increased Buff Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Herald of Purity has #% reduced Mana Reservation',
    regex: /Herald of Purity has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Herald of Thunder has #% increased Buff Effect',
    regex: /Herald of Thunder has (\d+)% increased Buff Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Herald of Thunder has #% reduced Mana Reservation',
    regex: /Herald of Thunder has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Hindered',
    regex: /Hindered/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Historic',
    regex: /Historic/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Hits against Nearby Enemies have #% increased Critical Strike Chance',
    regex: /Hits against Nearby Enemies have (\d+)% increased Critical Strike Chance/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Hits against Nearby Enemies have 50% increased Critical Strike Chance',
    regex: /Hits against Nearby Enemies have 50% increased Critical Strike Chance/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Hits have #% increased Critical Strike Chance against you',
    regex: /Hits have (\d+)% increased Critical Strike Chance against you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Hits ignore Enemy Monster Chaos Resistance if all Equipped Items are Shaper Items',
    regex: /Hits ignore Enemy Monster Chaos Resistance if all Equipped Items are Shaper Items/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Hits ignore Enemy Monster Fire Resistance while you are Ignited',
    regex: /Hits ignore Enemy Monster Fire Resistance while you are Ignited/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Hits with this Weapon always Ignite, Freeze, and Shock',
    regex: /Hits with this Weapon always Ignite, Freeze, and Shock/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Hits with this Weapon deal #% increased Damage to Frozen Enemies',
    regex: /Hits with this Weapon deal (\d+)% increased Damage to Frozen Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Hits with this Weapon deal #% increased Damage to Ignited Enemies',
    regex: /Hits with this Weapon deal (\d+)% increased Damage to Ignited Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Hits with this Weapon deal #% increased Damage to Shocked Enemies',
    regex: /Hits with this Weapon deal (\d+)% increased Damage to Shocked Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'If you Consumed a corpse Recently, you and nearby Allies Regenerate #% of Life per second',
    regex: /If you Consumed a corpse Recently, you and nearby Allies Regenerate (\d+)% of Life per second/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'If you have Blocked Recently, you and nearby Allies Regenerate #% of Life per second',
    regex: /If you have Blocked Recently, you and nearby Allies Regenerate (\d+)% of Life per second/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'If you\'ve Warcried Recently, you and nearby allies have #% increased Attack, Cast and Movement Speed',
    regex: /If you've Warcried Recently, you and nearby allies have (\d+)% increased Attack, Cast and Movement Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Ignited Enemies Burn #% slower',
    regex: /Ignited Enemies Burn (\d+)% slower/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Ignited Enemies you hit are destroyed on Kill',
    regex: /Ignited Enemies you hit are destroyed on Kill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Ignites you inflict deal Damage #% faster',
    regex: /Ignites you inflict deal Damage (\d+)% faster/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Ignites you inflict spread to other Enemies within a Radius of #',
    regex: /Ignites you inflict spread to other Enemies within a Radius of (\d+)/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Ignites you inflict with Attacks deal Damage #% faster',
    regex: /Ignites you inflict with Attacks deal Damage (\d+)% faster/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Immune to Burning Ground, Shocked Ground and Chilled Ground',
    regex: /Immune to Burning Ground, Shocked Ground and Chilled Ground/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Immune to Curses if Corrupted',
    regex: /Immune to Curses if Corrupted/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Immune to Freeze and Chill while Ignited',
    regex: /Immune to Freeze and Chill while Ignited/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Immune to Freeze while affected by Purity of Ice',
    regex: /Immune to Freeze while affected by Purity of Ice/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Immune to Ignite while affected by Purity of Fire',
    regex: /Immune to Ignite while affected by Purity of Fire/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Immune to Shock while affected by Purity of Lightning',
    regex: /Immune to Shock while affected by Purity of Lightning/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Impales you inflict last # additional Hits while using Pride',
    regex: /Impales you inflict last (\d+) additional Hits while using Pride/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Implicit Modifier magnitudes are doubled',
    regex: /Implicit Modifier magnitudes are doubled/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Implicit Modifier magnitudes are tripled',
    regex: /Implicit Modifier magnitudes are tripled/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Increases and Reductions to Cast Speed also Apply to Trap Throwing Speed',
    regex: /Increases and Reductions to Cast Speed also Apply to Trap Throwing Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Increases and Reductions to Cold Damage in Radius are Transformed to apply to Physical Damage',
    regex: /Increases and Reductions to Cold Damage in Radius are Transformed to apply to Physical Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Increases and Reductions to Damage of Vaal Skills also apply to Non-Vaal Skills',
    regex: /Increases and Reductions to Damage of Vaal Skills also apply to Non-Vaal Skills/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Increases and Reductions to Energy Shield in Radius are Transformed to apply to Armour at 200% of their value',
    regex: /Increases and Reductions to Energy Shield in Radius are Transformed to apply to Armour at 200% of their value/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Increases and Reductions to Life in Radius are Transformed to apply to Energy Shield',
    regex: /Increases and Reductions to Life in Radius are Transformed to apply to Energy Shield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Increases and Reductions to Life in Radius are Transformed to apply to Mana at 200% of their value',
    regex: /Increases and Reductions to Life in Radius are Transformed to apply to Mana at 200% of their value/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Increases and Reductions to Light Radius also apply to Accuracy',
    regex: /Increases and Reductions to Light Radius also apply to Accuracy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Increases and Reductions to Light Radius also apply to Area of Effect at #% of their value',
    regex: /Increases and Reductions to Light Radius also apply to Area of Effect at (\d+)% of their value/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Increases and Reductions to Light Radius also apply to Damage',
    regex: /Increases and Reductions to Light Radius also apply to Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Increases and Reductions to Minion Damage also affect you',
    regex: /Increases and Reductions to Minion Damage also affect you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Increases and Reductions to other Damage Types in Radius are Transformed to apply to Fire Damage',
    regex: /Increases and Reductions to other Damage Types in Radius are Transformed to apply to Fire Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Increases and Reductions to Physical Damage in Radius are Transformed to apply to Cold Damage',
    regex: /Increases and Reductions to Physical Damage in Radius are Transformed to apply to Cold Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Increases and Reductions to Spell Damage also apply to Attacks',
    regex: /Increases and Reductions to Spell Damage also apply to Attacks/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Inflicts a random Level # Curse on you when your Totems die',
    regex: /Inflicts a random Level (\d+) Curse on you when your Totems die/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Inner Conviction',
    regex: /Inner Conviction/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Insufficient Mana doesn\'t prevent your Melee Attacks',
    regex: /Insufficient Mana doesn't prevent your Melee Attacks/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Intelligence from Passives in Radius is Transformed to Dexterity',
    regex: /Intelligence from Passives in Radius is Transformed to Dexterity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Intelligence from Passives in Radius is Transformed to Strength',
    regex: /Intelligence from Passives in Radius is Transformed to Strength/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Intelligence provides no bonus to Maximum Mana',
    regex: /Intelligence provides no bonus to Maximum Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Intimidate Enemies for 4 seconds on Hit with Attacks',
    regex: /Intimidate Enemies for 4 seconds on Hit with Attacks/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Intimidate Enemies for 4 seconds on Hit with Attacks while at maximum Endurance Charges',
    regex: /Intimidate Enemies for 4 seconds on Hit with Attacks while at maximum Endurance Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Iron Grip',
    regex: /Iron Grip/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Iron Reflexes',
    regex: /Iron Reflexes/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Iron Reflexes while stationary',
    regex: /Iron Reflexes while stationary/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Iron Will',
    regex: /Iron Will/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Item drops on death',
    regex: /Item drops on death/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Item drops on Death if Equipped by an Animated Guardian',
    regex: /Item drops on Death if Equipped by an Animated Guardian/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Items and Gems have #% increased Attribute Requirements',
    regex: /Items and Gems have (\d+)% increased Attribute Requirements/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Killed Enemies Explode, dealing #% of their Life as Physical Damage',
    regex: /Killed Enemies Explode, dealing (\d+)% of their Life as Physical Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Kills grant an additional Vaal Soul if you have Rampaged Recently',
    regex: /Kills grant an additional Vaal Soul if you have Rampaged Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Knockback direction is reversed',
    regex: /Knockback direction is reversed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Leech Energy Shield instead of Life',
    regex: /Leech Energy Shield instead of Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Left ring slot: #% increased Mana Regeneration Rate',
    regex: /Left ring slot: (\d+)% increased Mana Regeneration Rate/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Left ring slot: #% reduced Reflected Elemental Damage taken',
    regex: /Left ring slot: (\d+)% reduced Reflected Elemental Damage taken/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Left ring slot: +# to maximum Energy Shield',
    regex: /Left ring slot: \+(\d+) to maximum Energy Shield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Left ring slot: Projectiles from Spells cannot Chain',
    regex: /Left ring slot: Projectiles from Spells cannot Chain/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Left ring slot: Projectiles from Spells Fork',
    regex: /Left ring slot: Projectiles from Spells Fork/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Left ring slot: Regenerate # Mana per Second',
    regex: /Left ring slot: Regenerate (\d+) Mana per Second/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Left ring slot: You cannot Recharge or Regenerate Energy Shield',
    regex: /Left ring slot: You cannot Recharge or Regenerate Energy Shield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Life and Mana Leech from Critical Strikes are instant',
    regex: /Life and Mana Leech from Critical Strikes are instant/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Life Leech effects are not removed at Full Life',
    regex: /Life Leech effects are not removed at Full Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Life Leech effects are not removed at Full Life Life Leech effects Recover Energy Shield instead while on Full Life',
    regex: /Life Leech effects are not removed at Full Life Life Leech effects Recover Energy Shield instead while on Full Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Life Leech from Hits with this Weapon is instant',
    regex: /Life Leech from Hits with this Weapon is instant/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Light Radius is based on Energy Shield instead of Life',
    regex: /Light Radius is based on Energy Shield instead of Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Lightning Damage from Enemies Hitting you is Lucky',
    regex: /Lightning Damage from Enemies Hitting you is Lucky/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Lightning Resistance is #%',
    regex: /Lightning Resistance is (\d+)%/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Lightning Skills have #% chance to Poison on Hit',
    regex: /Lightning Skills have (\d+)% chance to Poison on Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Lose # Life for each Enemy hit by your Attacks',
    regex: /Lose (\d+) Life for each Enemy hit by your Attacks/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Lose # Life for each Enemy hit by your Spells',
    regex: /Lose (\d+) Life for each Enemy hit by your Spells/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Lose # Mana per Second',
    regex: /Lose (\d+) Mana per Second/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Lose #% of Energy Shield on Kill',
    regex: /Lose (\d+)% of Energy Shield on Kill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Lose #% of Life on Kill',
    regex: /Lose (\d+)% of Life on Kill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Lose #% of Mana per Second',
    regex: /Lose (\d+)% of Mana per Second/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Lose #% of your Energy Shield when you Block',
    regex: /Lose (\d+)% of your Energy Shield when you Block/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Lose a Power Charge each second if you have not Detonated Mines Recently',
    regex: /Lose a Power Charge each second if you have not Detonated Mines Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Lose a Power Charge when Hit',
    regex: /Lose a Power Charge when Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Lose all Endurance Charges when Rampage ends',
    regex: /Lose all Endurance Charges when Rampage ends/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Lose all Frenzy, Endurance, and Power Charges when you Move',
    regex: /Lose all Frenzy, Endurance, and Power Charges when you Move/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Lose all Power Charges on Critical Strike',
    regex: /Lose all Power Charges on Critical Strike/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Lose all Power Charges on reaching Maximum Power Charges',
    regex: /Lose all Power Charges on reaching Maximum Power Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Lose Souls gained from Soul Eater when you use a Flask',
    regex: /Lose Souls gained from Soul Eater when you use a Flask/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Malevolence Reserves no Mana',
    regex: /Malevolence Reserves no Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Mana Reservation of Herald Skills is always 45%',
    regex: /Mana Reservation of Herald Skills is always 45%/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Manifest Dancing Dervish also manifests a copy of Dancing Dervish',
    regex: /Manifest Dancing Dervish also manifests a copy of Dancing Dervish/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Manifested Dancing Dervish dies when Rampage ends',
    regex: /Manifested Dancing Dervish dies when Rampage ends/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Manifested Dancing Dervish disables both weapon slots',
    regex: /Manifested Dancing Dervish disables both weapon slots/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Melee and Melee Weapon Type modifiers in Radius are Transformed to Bow Modifiers',
    regex: /Melee and Melee Weapon Type modifiers in Radius are Transformed to Bow Modifiers/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Melee Attacks have #% chance to cause Bleeding',
    regex: /Melee Attacks have (\d+)% chance to cause Bleeding/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Melee Attacks have #% chance to Poison on Hit',
    regex: /Melee Attacks have (\d+)% chance to Poison on Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Melee Critical Strikes Poison the Enemy',
    regex: /Melee Critical Strikes Poison the Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Mercury Footprints',
    regex: /Mercury Footprints/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Mind Over Matter',
    regex: /Mind Over Matter/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Mines can be Detonated an additional time',
    regex: /Mines can be Detonated an additional time/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Minion Instability',
    regex: /Minion Instability/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Minions cannot be Blinded',
    regex: /Minions cannot be Blinded/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Minions convert #% of Physical Damage to Chaos Damage per White Socket',
    regex: /Minions convert (\d+)% of Physical Damage to Chaos Damage per White Socket/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Minions convert #% of Physical Damage to Cold Damage per Green Socket',
    regex: /Minions convert (\d+)% of Physical Damage to Cold Damage per Green Socket/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Minions convert #% of Physical Damage to Fire Damage per Red Socket',
    regex: /Minions convert (\d+)% of Physical Damage to Fire Damage per Red Socket/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Minions convert #% of Physical Damage to Lightning Damage per Blue Socket',
    regex: /Minions convert (\d+)% of Physical Damage to Lightning Damage per Blue Socket/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Minions deal #% increased Damage if you\'ve Hit Recently',
    regex: /Minions deal (\d+)% increased Damage if you've Hit Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Minions deal #% increased Damage per 10 Dexterity',
    regex: /Minions deal (\d+)% increased Damage per 10 Dexterity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Minions gain #% of Elemental Damage as Extra Chaos Damage',
    regex: /Minions gain (\d+)% of Elemental Damage as Extra Chaos Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Minions gain #% of Physical Damage as Extra Cold Damage',
    regex: /Minions gain (\d+)% of Physical Damage as Extra Cold Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Minions gain Unholy Might for # seconds on Kill',
    regex: /Minions gain Unholy Might for (\d+) seconds on Kill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Minions have #% chance to Blind Enemies on hit',
    regex: /Minions have (\d+)% chance to Blind Enemies on hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Minions have #% chance to Dodge Attack Hits',
    regex: /Minions have (\d+)% chance to Dodge Attack Hits/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Minions have #% chance to Dodge Spell Hits',
    regex: /Minions have (\d+)% chance to Dodge Spell Hits/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Minions have #% chance to Freeze, Shock and Ignite',
    regex: /Minions have (\d+)% chance to Freeze, Shock and Ignite/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Minions have #% chance to Poison Enemies on Hit',
    regex: /Minions have (\d+)% chance to Poison Enemies on Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Minions have #% increased Area of Effect',
    regex: /Minions have (\d+)% increased Area of Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Minions have #% reduced maximum Life',
    regex: /Minions have (\d+)% reduced maximum Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Minions have #% reduced Movement Speed',
    regex: /Minions have (\d+)% reduced Movement Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Minions have +# to Accuracy Rating per 10 Devotion',
    regex: /Minions have \+(\d+) to Accuracy Rating per 10 Devotion/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Minions have +# to Armour',
    regex: /Minions have \+(\d+) to Armour/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Minions have +#% Chance to Block Spell Damage',
    regex: /Minions have \+(\d+)% Chance to Block Spell Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Minions have +#% to Cold Resistance',
    regex: /Minions have \+(\d+)% to Cold Resistance/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Minions Leech #% of Damage as Life against Poisoned Enemies',
    regex: /Minions Leech (\d+)% of Damage as Life against Poisoned Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Minions Recover #% of Life on Killing a Poisoned Enemy',
    regex: /Minions Recover (\d+)% of Life on Killing a Poisoned Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Minions Recover #% of their Life when they Block',
    regex: /Minions Recover (\d+)% of their Life when they Block/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Minions\' Attacks deal # to # additional Physical Damage',
    regex: /Minions' Attacks deal (\d+) to (\d+) additional Physical Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Minions\' Hits can only Kill Ignited Enemies',
    regex: /Minions' Hits can only Kill Ignited Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Modifiers to Claw Attack Speed also apply to Unarmed Attack Speed',
    regex: /Modifiers to Claw Attack Speed also apply to Unarmed Attack Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Modifiers to Claw Critical Strike Chance also apply to Unarmed Attack Critical Strike Chance',
    regex: /Modifiers to Claw Critical Strike Chance also apply to Unarmed Attack Critical Strike Chance/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Modifiers to Claw Damage also apply to Unarmed Attack Damage',
    regex: /Modifiers to Claw Damage also apply to Unarmed Attack Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Monsters fire # additional Projectiles',
    regex: /Monsters fire (\d+) additional Projectiles/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Monsters have Onslaught',
    regex: /Monsters have Onslaught/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Mortal Conviction',
    regex: /Mortal Conviction/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Movement Attack Skills have #% reduced Attack Speed',
    regex: /Movement Attack Skills have (\d+)% reduced Attack Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Movement Skills cost no Mana',
    regex: /Movement Skills cost no Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Movement Skills deal no Physical Damage',
    regex: /Movement Skills deal no Physical Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Movement Speed cannot be modified to below base value',
    regex: /Movement Speed cannot be modified to below base value/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Moving while Bleeding doesn\'t cause you to take extra Damage',
    regex: /Moving while Bleeding doesn't cause you to take extra Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Nearby allies gain #% increased Damage',
    regex: /Nearby allies gain (\d+)% increased Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Nearby Allies gain #% increased Mana Regeneration Rate',
    regex: /Nearby Allies gain (\d+)% increased Mana Regeneration Rate/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Nearby Allies gain #% of Life Regenerated per second',
    regex: /Nearby Allies gain (\d+)% of Life Regenerated per second/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Nearby Allies have #% increased Cast Speed per 100 Intelligence you have',
    regex: /Nearby Allies have (\d+)% increased Cast Speed per 100 Intelligence you have/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Nearby Allies have #% increased Defences per 100 Strength you have',
    regex: /Nearby Allies have (\d+)% increased Defences per 100 Strength you have/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Nearby Allies have #% increased Item Rarity',
    regex: /Nearby Allies have (\d+)% increased Item Rarity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Nearby Allies have +#% to Critical Strike Multiplier',
    regex: /Nearby Allies have \+(\d+)% to Critical Strike Multiplier/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Nearby Allies have +#% to Critical Strike Multiplier per 100 Dexterity you have',
    regex: /Nearby Allies have \+(\d+)% to Critical Strike Multiplier per 100 Dexterity you have/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Nearby Allies have Culling Strike',
    regex: /Nearby Allies have Culling Strike/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Nearby Allies have Fortify',
    regex: /Nearby Allies have Fortify/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Nearby allies Recover #% of your Maximum Life when you Die',
    regex: /Nearby allies Recover (\d+)% of your Maximum Life when you Die/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Nearby Allies\' Action Speed cannot be modified to below base value',
    regex: /Nearby Allies' Action Speed cannot be modified to below base value/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Nearby Allies\' Damage with Hits is Lucky',
    regex: /Nearby Allies' Damage with Hits is Lucky/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Nearby Enemies are Blinded',
    regex: /Nearby Enemies are Blinded/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Nearby Enemies are Hindered, with #% reduced Movement Speed',
    regex: /Nearby Enemies are Hindered, with (\d+)% reduced Movement Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Nearby Enemies are Intimidated',
    regex: /Nearby Enemies are Intimidated/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Nearby Enemies cannot deal Critical Strikes',
    regex: /Nearby Enemies cannot deal Critical Strikes/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Nearby Enemies grant #% increased Flask Charges',
    regex: /Nearby Enemies grant (\d+)% increased Flask Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Nearby Enemies have #% increased Effect of Curses on them',
    regex: /Nearby Enemies have (\d+)% increased Effect of Curses on them/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Nearby Enemies have #% reduced Stun and Block Recovery',
    regex: /Nearby Enemies have (\d+)% reduced Stun and Block Recovery/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Nearby Enemies have #% to all Resistances',
    regex: /Nearby Enemies have (\d+)% to all Resistances/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Nearby Enemies take # Lightning Damage per second',
    regex: /Nearby Enemies take (\d+) Lightning Damage per second/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Never deal Critical Strikes',
    regex: /Never deal Critical Strikes/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'No Chance to Block',
    regex: /No Chance to Block/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'No Physical Damage',
    regex: /No Physical Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Non-Aura Curses you inflict are not removed from Dying Enemies',
    regex: /Non-Aura Curses you inflict are not removed from Dying Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Non-Channelling Skills have -# to Total Mana Cost while affected by Clarity',
    regex: /Non-Channelling Skills have -(\d+) to Total Mana Cost while affected by Clarity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Non-Chilled Enemies you inflict Bleeding on are Chilled',
    regex: /Non-Chilled Enemies you inflict Bleeding on are Chilled/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Non-Chilled Enemies you Poison are Chilled',
    regex: /Non-Chilled Enemies you Poison are Chilled/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Non-Critical Strikes deal no Damage',
    regex: /Non-Critical Strikes deal no Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Non-instant Mana Recovery from Flasks is also Recovered as Life',
    regex: /Non-instant Mana Recovery from Flasks is also Recovered as Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Notable Passive Skills in Radius are Transformed to instead grant: Minions have #% reduced Movement Speed',
    regex: /Notable Passive Skills in Radius are Transformed to instead grant: Minions have (\d+)% reduced Movement Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Notable Passive Skills in Radius are Transformed to instead grant: Minions take #% increased Damage',
    regex: /Notable Passive Skills in Radius are Transformed to instead grant: Minions take (\d+)% increased Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Notable Passive Skills in Radius grant nothing',
    regex: /Notable Passive Skills in Radius grant nothing/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'On Killing a Poisoned Enemy, nearby Enemies are Poisoned',
    regex: /On Killing a Poisoned Enemy, nearby Enemies are Poisoned/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Onslaught',
    regex: /Onslaught/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Pain Attunement',
    regex: /Pain Attunement/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Passive Skills in Radius also grant: Traps and Mines deal # to # added Physical Damage',
    regex: /Passive Skills in Radius also grant: Traps and Mines deal (\d+) to (\d+) added Physical Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Passives granting Cold Resistance or all Elemental Resistances in Radius also grant an equal chance to gain a Frenzy Charge on Kill',
    regex: /Passives granting Cold Resistance or all Elemental Resistances in Radius also grant an equal chance to gain a Frenzy Charge on Kill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Passives granting Cold Resistance or all Elemental Resistances in Radius also grant Chance to Dodge Attack Hits at #% of its value',
    regex: /Passives granting Cold Resistance or all Elemental Resistances in Radius also grant Chance to Dodge Attack Hits at (\d+)% of its value/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Passives granting Fire Resistance or all Elemental Resistances in Radius also grant an equal chance to gain an Endurance Charge on Kill',
    regex: /Passives granting Fire Resistance or all Elemental Resistances in Radius also grant an equal chance to gain an Endurance Charge on Kill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Passives granting Fire Resistance or all Elemental Resistances in Radius also grant Chance to Block Attack Damage at #% of its value',
    regex: /Passives granting Fire Resistance or all Elemental Resistances in Radius also grant Chance to Block Attack Damage at (\d+)% of its value/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Passives granting Lightning Resistance or all Elemental Resistances in Radius also grant an equal chance to gain a Power Charge on Kill',
    regex: /Passives granting Lightning Resistance or all Elemental Resistances in Radius also grant an equal chance to gain a Power Charge on Kill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Passives granting Lightning Resistance or all Elemental Resistances in Radius also grant Chance to Block Spell Damage at #% of its value',
    regex: /Passives granting Lightning Resistance or all Elemental Resistances in Radius also grant Chance to Block Spell Damage at (\d+)% of its value/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Passives in Radius apply to Minions instead of you',
    regex: /Passives in Radius apply to Minions instead of you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Passives in Radius can be Allocated without being connected to your tree',
    regex: /Passives in Radius can be Allocated without being connected to your tree/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Penetrate #% Elemental Resistances per Frenzy Charge',
    regex: /Penetrate (\d+)% Elemental Resistances per Frenzy Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Perfect Agony',
    regex: /Perfect Agony/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Permanently Intimidate Enemies on Block',
    regex: /Permanently Intimidate Enemies on Block/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Phase Acrobatics',
    regex: /Phase Acrobatics/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Phasing',
    regex: /Phasing/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Physical Damage is increased by 1% per # Intelligence from Allocated Passives in Radius',
    regex: /Physical Damage is increased by 1% per (\d+) Intelligence from Allocated Passives in Radius/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Point Blank',
    regex: /Point Blank/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Poison Cursed Enemies on hit',
    regex: /Poison Cursed Enemies on hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Poison you inflict is Reflected to you if you have fewer than 100 Poisons on you',
    regex: /Poison you inflict is Reflected to you if you have fewer than 100 Poisons on you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Poisoned Enemies you Kill with Hits Shatter',
    regex: /Poisoned Enemies you Kill with Hits Shatter/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Poisonous Hit',
    regex: /Poisonous Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Poisons on you expire #% slower',
    regex: /Poisons on you expire (\d+)% slower/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Poisons you inflict deal Damage #% faster',
    regex: /Poisons you inflict deal Damage (\d+)% faster/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Precision has 50% less Mana Reservation',
    regex: /Precision has 50% less Mana Reservation/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Pride Reserves no Mana',
    regex: /Pride Reserves no Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Primordial',
    regex: /Primordial/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Projectile Attack Skills have #% increased Critical Strike Chance',
    regex: /Projectile Attack Skills have (\d+)% increased Critical Strike Chance/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Projectile Damage is increased by 1% per # Dexterity from Allocated Passives in Radius',
    regex: /Projectile Damage is increased by 1% per (\d+) Dexterity from Allocated Passives in Radius/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Projectiles Fork',
    regex: /Projectiles Fork/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Projectiles from Attacks have #% chance to inflict Bleeding on Hit while you have a Bestial Minion',
    regex: /Projectiles from Attacks have (\d+)% chance to inflict Bleeding on Hit while you have a Bestial Minion/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Projectiles from Attacks have #% chance to Maim on Hit while you have a Bestial Minion',
    regex: /Projectiles from Attacks have (\d+)% chance to Maim on Hit while you have a Bestial Minion/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Projectiles from Attacks have #% chance to Poison on Hit while you have a Bestial Minion',
    regex: /Projectiles from Attacks have (\d+)% chance to Poison on Hit while you have a Bestial Minion/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Projectiles from Spells cannot Pierce',
    regex: /Projectiles from Spells cannot Pierce/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Projectiles gain #% of Non-Chaos Damage as extra Chaos Damage per Chain',
    regex: /Projectiles gain (\d+)% of Non-Chaos Damage as extra Chaos Damage per Chain/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Projectiles have #% chance to Freeze',
    regex: /Projectiles have (\d+)% chance to Freeze/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Projectiles have #% chance to Ignite',
    regex: /Projectiles have (\d+)% chance to Ignite/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Projectiles have #% chance to Shock',
    regex: /Projectiles have (\d+)% chance to Shock/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Projectiles Pierce # additional Targets while you have Phasing',
    regex: /Projectiles Pierce (\d+) additional Targets while you have Phasing/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Projectiles Pierce all Targets while you have Phasing',
    regex: /Projectiles Pierce all Targets while you have Phasing/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Projectiles Return to you after Hitting targets',
    regex: /Projectiles Return to you after Hitting targets/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Properties are doubled while in a Breach',
    regex: /Properties are doubled while in a Breach/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Purity of Elements Reserves no Mana',
    regex: /Purity of Elements Reserves no Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Purity of Fire has #% reduced Mana Reservation',
    regex: /Purity of Fire has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Purity of Fire Reserves no Mana',
    regex: /Purity of Fire Reserves no Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Purity of Ice has #% reduced Mana Reservation',
    regex: /Purity of Ice has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Purity of Ice Reserves no Mana',
    regex: /Purity of Ice Reserves no Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Purity of Lightning has #% reduced Mana Reservation',
    regex: /Purity of Lightning has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Purity of Lightning Reserves no Mana',
    regex: /Purity of Lightning Reserves no Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Raise Zombie does not require a corpse',
    regex: /Raise Zombie does not require a corpse/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Raised Zombies deal #% increased Damage',
    regex: /Raised Zombies deal (\d+)% increased Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Raised Zombies deal #% more Physical Damage',
    regex: /Raised Zombies deal (\d+)% more Physical Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Raised Zombies have #% increased maximum Life',
    regex: /Raised Zombies have (\d+)% increased maximum Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Raised Zombies have +# to maximum Life',
    regex: /Raised Zombies have \+(\d+) to maximum Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Raised Zombies have +#% to all Resistances',
    regex: /Raised Zombies have \+(\d+)% to all Resistances/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Rampage',
    regex: /Rampage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Recover # Energy Shield when your Trap is triggered by an Enemy',
    regex: /Recover (\d+) Energy Shield when your Trap is triggered by an Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Recover # Life when you Block',
    regex: /Recover (\d+) Life when you Block/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Recover # Life when you Ignite an Enemy',
    regex: /Recover (\d+) Life when you Ignite an Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Recover # Life when your Trap is triggered by an Enemy',
    regex: /Recover (\d+) Life when your Trap is triggered by an Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Recover #% of Energy Shield when you lose a Spirit Charge',
    regex: /Recover (\d+)% of Energy Shield when you lose a Spirit Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Recover #% of Life on Rampage',
    regex: /Recover (\d+)% of Life on Rampage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Recover #% of Life when you Consume a corpse',
    regex: /Recover (\d+)% of Life when you Consume a corpse/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Recover #% of Life when you Ignite an Enemy',
    regex: /Recover (\d+)% of Life when you Ignite an Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Recover #% of Life when you lose a Spirit Charge',
    regex: /Recover (\d+)% of Life when you lose a Spirit Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Recover #% of Life when you use a Mana Flask',
    regex: /Recover (\d+)% of Life when you use a Mana Flask/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Recover #% of Mana when you Shock an Enemy',
    regex: /Recover (\d+)% of Mana when you Shock an Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Recover #% of your maximum Life on use',
    regex: /Recover (\d+)% of your maximum Life on use/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Reflect Shocks applied to you to all Nearby Enemies',
    regex: /Reflect Shocks applied to you to all Nearby Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Reflects # Chaos Damage to Melee Attackers',
    regex: /Reflects (\d+) Chaos Damage to Melee Attackers/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Reflects # Cold Damage to Melee Attackers',
    regex: /Reflects (\d+) Cold Damage to Melee Attackers/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Reflects # Fire Damage to Melee Attackers',
    regex: /Reflects (\d+) Fire Damage to Melee Attackers/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Reflects # Physical Damage to Attackers on Block',
    regex: /Reflects (\d+) Physical Damage to Attackers on Block/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Reflects # to # Lightning Damage to Attackers on Block',
    regex: /Reflects (\d+) to (\d+) Lightning Damage to Attackers on Block/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Reflects # to # Lightning Damage to Melee Attackers',
    regex: /Reflects (\d+) to (\d+) Lightning Damage to Melee Attackers/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Reflects # to # Physical Damage to Attackers on Block',
    regex: /Reflects (\d+) to (\d+) Physical Damage to Attackers on Block/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Reflects # to # Physical Damage to Melee Attackers',
    regex: /Reflects (\d+) to (\d+) Physical Damage to Melee Attackers/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate # Energy Shield per second if all Equipped items are Corrupted',
    regex: /Regenerate (\d+) Energy Shield per second if all Equipped items are Corrupted/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate # Energy Shield per Second per Poison on you, up to 250 per second',
    regex: /Regenerate (\d+) Energy Shield per Second per Poison on you, up to 250 per second/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate # Life over 1 second when you Cast a Spell',
    regex: /Regenerate (\d+) Life over 1 second when you Cast a Spell/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate # Life per second for each Uncorrupted Item Equipped',
    regex: /Regenerate (\d+) Life per second for each Uncorrupted Item Equipped/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate # Life per second if no Equipped Items are Corrupted',
    regex: /Regenerate (\d+) Life per second if no Equipped Items are Corrupted/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate # Life per second if you have at least 1000 Maximum Energy Shield',
    regex: /Regenerate (\d+) Life per second if you have at least 1000 Maximum Energy Shield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate # Life per second if you have at least 1500 Maximum Energy Shield',
    regex: /Regenerate (\d+) Life per second if you have at least 1500 Maximum Energy Shield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate # Life per second if you have at least 500 Maximum Energy Shield',
    regex: /Regenerate (\d+) Life per second if you have at least 500 Maximum Energy Shield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate # Life per second per Buff on you',
    regex: /Regenerate (\d+) Life per second per Buff on you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate # Life per second per Endurance Charge',
    regex: /Regenerate (\d+) Life per second per Endurance Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate # Life per second per Level',
    regex: /Regenerate (\d+) Life per second per Level/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate # Life per Second while affected by Vitality',
    regex: /Regenerate (\d+) Life per Second while affected by Vitality/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate # Life per second while Ignited',
    regex: /Regenerate (\d+) Life per second while Ignited/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate # Life per second while moving',
    regex: /Regenerate (\d+) Life per second while moving/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate # Life per Second while you have Avian\'s Flight',
    regex: /Regenerate (\d+) Life per Second while you have Avian's Flight/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate # Mana per second if all Equipped Items are Corrupted',
    regex: /Regenerate (\d+) Mana per second if all Equipped Items are Corrupted/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate # Mana per Second per 10 Devotion',
    regex: /Regenerate (\d+) Mana per Second per 10 Devotion/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate # Mana per Second per Power Charge',
    regex: /Regenerate (\d+) Mana per Second per Power Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate # Mana per Second while Dual Wielding',
    regex: /Regenerate (\d+) Mana per Second while Dual Wielding/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate # Mana per Second while holding a Shield',
    regex: /Regenerate (\d+) Mana per Second while holding a Shield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate # Mana per second while wielding a Staff',
    regex: /Regenerate (\d+) Mana per second while wielding a Staff/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate # Mana per Second while you have Avian\'s Flight',
    regex: /Regenerate (\d+) Mana per Second while you have Avian's Flight/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate #% of Energy Shield per Second for every 10 Intelligence on Allocated Passives in Radius',
    regex: /Regenerate (\d+)% of Energy Shield per Second for every 10 Intelligence on Allocated Passives in Radius/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate #% of Energy Shield per Second while affected by Discipline',
    regex: /Regenerate (\d+)% of Energy Shield per Second while affected by Discipline/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate #% of Energy Shield per second while on Low Life',
    regex: /Regenerate (\d+)% of Energy Shield per second while on Low Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate #% of Life per second for each Raised Zombie',
    regex: /Regenerate (\d+)% of Life per second for each Raised Zombie/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate #% of Life per second if you have been Hit Recently',
    regex: /Regenerate (\d+)% of Life per second if you have been Hit Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate #% of Life per second if you\'ve taken a Savage Hit in the past 1 second',
    regex: /Regenerate (\d+)% of Life per second if you've taken a Savage Hit in the past 1 second/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate #% of Life per second on Chilled Ground',
    regex: /Regenerate (\d+)% of Life per second on Chilled Ground/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate #% of Life per second per 500 Maximum Energy Shield',
    regex: /Regenerate (\d+)% of Life per second per 500 Maximum Energy Shield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate #% of Life per second per Endurance Charge',
    regex: /Regenerate (\d+)% of Life per second per Endurance Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate #% of Life per second per Frenzy Charge',
    regex: /Regenerate (\d+)% of Life per second per Frenzy Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate #% of Life per second per Power Charge',
    regex: /Regenerate (\d+)% of Life per second per Power Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate #% of Life per second while Frozen',
    regex: /Regenerate (\d+)% of Life per second while Frozen/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate #% of Life per second while on Low Life',
    regex: /Regenerate (\d+)% of Life per second while on Low Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate #% of Life per second with at least 400 Strength',
    regex: /Regenerate (\d+)% of Life per second with at least 400 Strength/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Regenerate #% of your Armour as Life over 1 second when you Block',
    regex: /Regenerate (\d+)% of your Armour as Life over 1 second when you Block/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Remove an Ailment when you use a Flask if all Equipped Items are Elder Items',
    regex: /Remove an Ailment when you use a Flask if all Equipped Items are Elder Items/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Removes Burning when you use a Flask',
    regex: /Removes Burning when you use a Flask/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Removes Elemental Ailments on Rampage',
    regex: /Removes Elemental Ailments on Rampage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Replenishes Energy Shield by #% of Armour when you Block',
    regex: /Replenishes Energy Shield by (\d+)% of Armour when you Block/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Reserves #% of Life',
    regex: /Reserves (\d+)% of Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Resolute Technique',
    regex: /Resolute Technique/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Right ring slot: #% reduced Reflected Physical Damage taken',
    regex: /Right ring slot: (\d+)% reduced Reflected Physical Damage taken/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Right ring slot: +# to maximum Mana',
    regex: /Right ring slot: \+(\d+) to maximum Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Right ring slot: Projectiles from Spells cannot Fork',
    regex: /Right ring slot: Projectiles from Spells cannot Fork/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Right ring slot: Projectiles from Spells Chain +# times',
    regex: /Right ring slot: Projectiles from Spells Chain \+(\d+) times/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Right ring slot: Regenerate #% of Energy Shield per second',
    regex: /Right ring slot: Regenerate (\d+)% of Energy Shield per second/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Right ring slot: You cannot Regenerate Mana',
    regex: /Right ring slot: You cannot Regenerate Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Runebinder',
    regex: /Runebinder/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Sacrifice #% of Life to gain that much Energy Shield when you Cast a Spell',
    regex: /Sacrifice (\d+)% of Life to gain that much Energy Shield when you Cast a Spell/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Sacrifice #% of your Life when you Use or Trigger a Spell Skill',
    regex: /Sacrifice (\d+)% of your Life when you Use or Trigger a Spell Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Sentinels of Purity deal #% increased Damage',
    regex: /Sentinels of Purity deal (\d+)% increased Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Share Endurance Charges with nearby party members',
    regex: /Share Endurance Charges with nearby party members/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Shared Suffering',
    regex: /Shared Suffering/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Shock Reflection',
    regex: /Shock Reflection/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Shocked Enemies you Kill Explode, dealing #% of their Maximum Life as Lightning Damage which cannot Shock',
    regex: /Shocked Enemies you Kill Explode, dealing (\d+)% of their Maximum Life as Lightning Damage which cannot Shock/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Shocks you cause are reflected back to you',
    regex: /Shocks you cause are reflected back to you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Shocks you inflict spread to other Enemies within a Radius of #',
    regex: /Shocks you inflict spread to other Enemies within a Radius of (\d+)/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Shocks you when you reach Maximum Power Charges',
    regex: /Shocks you when you reach Maximum Power Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Siege Ballista has +# to maximum number of Summoned Totems per 200 Dexterity',
    regex: /Siege Ballista has \+(\d+) to maximum number of Summoned Totems per 200 Dexterity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Siren Worm Bait',
    regex: /Siren Worm Bait/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Skeletons deal #% increased Damage',
    regex: /Skeletons deal (\d+)% increased Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Skills Chain +# times',
    regex: /Skills Chain \+(\d+) times/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Skills Chain an additional time while at maximum Frenzy Charges',
    regex: /Skills Chain an additional time while at maximum Frenzy Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Skills fire # additional Projectiles if you\'ve been Hit Recently',
    regex: /Skills fire (\d+) additional Projectiles if you've been Hit Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Skills fire # additional Projectiles if you\'ve used a Movement Skill Recently',
    regex: /Skills fire (\d+) additional Projectiles if you've used a Movement Skill Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Skills which throw Mines throw up to 1 additional Mine if you have at least 800 Dexterity',
    regex: /Skills which throw Mines throw up to 1 additional Mine if you have at least 800 Dexterity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Skills which throw Mines throw up to 1 additional Mine if you have at least 800 Intelligence',
    regex: /Skills which throw Mines throw up to 1 additional Mine if you have at least 800 Intelligence/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Skills which throw Traps have Blood Magic',
    regex: /Skills which throw Traps have Blood Magic/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Curse Gems have #% reduced Mana Reservation',
    regex: /Socketed Curse Gems have (\d+)% reduced Mana Reservation/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Added Chaos Damage',
    regex: /Socketed Gems are Supported by Level (\d+) Added Chaos Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Added Cold Damage',
    regex: /Socketed Gems are Supported by Level (\d+) Added Cold Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Added Lightning Damage',
    regex: /Socketed Gems are Supported by Level (\d+) Added Lightning Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Blasphemy',
    regex: /Socketed Gems are Supported by Level (\d+) Blasphemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Blessing',
    regex: /Socketed Gems are Supported by Level (\d+) Blessing/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Block Chance Reduction',
    regex: /Socketed Gems are Supported by Level (\d+) Block Chance Reduction/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Blood Magic',
    regex: /Socketed Gems are Supported by Level (\d+) Blood Magic/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Bloodlust',
    regex: /Socketed Gems are Supported by Level (\d+) Bloodlust/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Bonechill',
    regex: /Socketed Gems are Supported by Level (\d+) Bonechill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Cast on Death',
    regex: /Socketed Gems are Supported by Level (\d+) Cast on Death/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Cast when Stunned',
    regex: /Socketed Gems are Supported by Level (\d+) Cast when Stunned/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Chain',
    regex: /Socketed Gems are Supported by Level (\d+) Chain/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Chance to Flee',
    regex: /Socketed Gems are Supported by Level (\d+) Chance to Flee/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Charged Mines',
    regex: /Socketed Gems are Supported by Level (\d+) Charged Mines/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Charged Traps',
    regex: /Socketed Gems are Supported by Level (\d+) Charged Traps/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Close Combat',
    regex: /Socketed Gems are Supported by Level (\d+) Close Combat/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Cluster Trap',
    regex: /Socketed Gems are Supported by Level (\d+) Cluster Trap/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Cold to Fire',
    regex: /Socketed Gems are Supported by Level (\d+) Cold to Fire/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Combustion',
    regex: /Socketed Gems are Supported by Level (\d+) Combustion/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Culling Strike',
    regex: /Socketed Gems are Supported by Level (\d+) Culling Strike/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Curse On Hit',
    regex: /Socketed Gems are Supported by Level (\d+) Curse On Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Damage On Full Life',
    regex: /Socketed Gems are Supported by Level (\d+) Damage On Full Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Deadly Ailments',
    regex: /Socketed Gems are Supported by Level (\d+) Deadly Ailments/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Deathmark',
    regex: /Socketed Gems are Supported by Level (\d+) Deathmark/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Decay',
    regex: /Socketed Gems are Supported by Level (\d+) Decay/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Elemental Army Support',
    regex: /Socketed Gems are Supported by Level (\d+) Elemental Army Support/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Elemental Penetration',
    regex: /Socketed Gems are Supported by Level (\d+) Elemental Penetration/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Empower',
    regex: /Socketed Gems are Supported by Level (\d+) Empower/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Energy Leech',
    regex: /Socketed Gems are Supported by Level (\d+) Energy Leech/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Enhance',
    regex: /Socketed Gems are Supported by Level (\d+) Enhance/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Enlighten',
    regex: /Socketed Gems are Supported by Level (\d+) Enlighten/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Feeding Frenzy',
    regex: /Socketed Gems are Supported by Level (\d+) Feeding Frenzy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Fork',
    regex: /Socketed Gems are Supported by Level (\d+) Fork/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Generosity',
    regex: /Socketed Gems are Supported by Level (\d+) Generosity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Greater Multiple Projectiles',
    regex: /Socketed Gems are Supported by Level (\d+) Greater Multiple Projectiles/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Greater Spell Echo',
    regex: /Socketed Gems are Supported by Level (\d+) Greater Spell Echo/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Greater Volley',
    regex: /Socketed Gems are Supported by Level (\d+) Greater Volley/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # High-Impact Mine',
    regex: /Socketed Gems are Supported by Level (\d+) High-Impact Mine/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Ice Bite',
    regex: /Socketed Gems are Supported by Level (\d+) Ice Bite/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Ignite Proliferation',
    regex: /Socketed Gems are Supported by Level (\d+) Ignite Proliferation/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Impale',
    regex: /Socketed Gems are Supported by Level (\d+) Impale/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Infernal Legion',
    regex: /Socketed Gems are Supported by Level (\d+) Infernal Legion/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Infused Channelling',
    regex: /Socketed Gems are Supported by Level (\d+) Infused Channelling/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Intensify',
    regex: /Socketed Gems are Supported by Level (\d+) Intensify/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Iron Will',
    regex: /Socketed Gems are Supported by Level (\d+) Iron Will/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Item Quantity',
    regex: /Socketed Gems are Supported by Level (\d+) Item Quantity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Knockback',
    regex: /Socketed Gems are Supported by Level (\d+) Knockback/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Life Gain On Hit',
    regex: /Socketed Gems are Supported by Level (\d+) Life Gain On Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Meat Shield',
    regex: /Socketed Gems are Supported by Level (\d+) Meat Shield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Minefield',
    regex: /Socketed Gems are Supported by Level (\d+) Minefield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Minion Speed',
    regex: /Socketed Gems are Supported by Level (\d+) Minion Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Mirage Archer',
    regex: /Socketed Gems are Supported by Level (\d+) Mirage Archer/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Multiple Totems',
    regex: /Socketed Gems are Supported by Level (\d+) Multiple Totems/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Multiple Traps',
    regex: /Socketed Gems are Supported by Level (\d+) Multiple Traps/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Nightblade',
    regex: /Socketed Gems are Supported by Level (\d+) Nightblade/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Physical To Lightning',
    regex: /Socketed Gems are Supported by Level (\d+) Physical To Lightning/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Pierce',
    regex: /Socketed Gems are Supported by Level (\d+) Pierce/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Point Blank',
    regex: /Socketed Gems are Supported by Level (\d+) Point Blank/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Pulverise',
    regex: /Socketed Gems are Supported by Level (\d+) Pulverise/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Rage',
    regex: /Socketed Gems are Supported by Level (\d+) Rage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Shockwave',
    regex: /Socketed Gems are Supported by Level (\d+) Shockwave/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Stun',
    regex: /Socketed Gems are Supported by Level (\d+) Stun/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Summon Phantasm',
    regex: /Socketed Gems are Supported by Level (\d+) Summon Phantasm/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Swift Affliction',
    regex: /Socketed Gems are Supported by Level (\d+) Swift Affliction/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Swift Assembly',
    regex: /Socketed Gems are Supported by Level (\d+) Swift Assembly/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Unleash',
    regex: /Socketed Gems are Supported by Level (\d+) Unleash/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Vile Toxins',
    regex: /Socketed Gems are Supported by Level (\d+) Vile Toxins/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Void Manipulation',
    regex: /Socketed Gems are Supported by Level (\d+) Void Manipulation/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems are Supported by Level # Withering Touch',
    regex: /Socketed Gems are Supported by Level (\d+) Withering Touch/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems fire # additional Projectiles',
    regex: /Socketed Gems fire (\d+) additional Projectiles/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems fire an additional Projectile',
    regex: /Socketed Gems fire an additional Projectile/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems fire Projectiles in a Nova',
    regex: /Socketed Gems fire Projectiles in a Nova/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems have #% chance to cause Enemies to Flee on Hit',
    regex: /Socketed Gems have (\d+)% chance to cause Enemies to Flee on Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems have #% increased Mana Reservation',
    regex: /Socketed Gems have (\d+)% increased Mana Reservation/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems have #% reduced Mana Cost',
    regex: /Socketed Gems have (\d+)% reduced Mana Cost/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems have #% reduced Skill Effect Duration',
    regex: /Socketed Gems have (\d+)% reduced Skill Effect Duration/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems have Blood Magic',
    regex: /Socketed Gems have Blood Magic/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems have Elemental Equilibrium',
    regex: /Socketed Gems have Elemental Equilibrium/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems have Iron Will',
    regex: /Socketed Gems have Iron Will/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Gems Reserve No Mana',
    regex: /Socketed Gems Reserve No Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Golem Skills gain #% of Maximum Life as Extra Maximum Energy Shield',
    regex: /Socketed Golem Skills gain (\d+)% of Maximum Life as Extra Maximum Energy Shield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Golem Skills have #% chance to Taunt on Hit',
    regex: /Socketed Golem Skills have (\d+)% chance to Taunt on Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Golem Skills have #% increased Attack and Cast Speed',
    regex: /Socketed Golem Skills have (\d+)% increased Attack and Cast Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Golem Skills have Minions Regenerate #% of Life per second',
    regex: /Socketed Golem Skills have Minions Regenerate (\d+)% of Life per second/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Melee Gems have #% increased Area of Effect',
    regex: /Socketed Melee Gems have (\d+)% increased Area of Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Minion Gems are Supported by Level # Life Leech',
    regex: /Socketed Minion Gems are Supported by Level (\d+) Life Leech/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Red Gems get #% Physical Damage as Extra Fire Damage',
    regex: /Socketed Red Gems get (\d+)% Physical Damage as Extra Fire Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Skill Gems get a #% Mana Multiplier',
    regex: /Socketed Skill Gems get a (\d+)% Mana Multiplier/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Socketed Skills Summon your maximum number of Totems in formation',
    regex: /Socketed Skills Summon your maximum number of Totems in formation/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Sockets cannot be modified',
    regex: /Sockets cannot be modified/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Spectres have #% increased Critical Strike Chance',
    regex: /Spectres have (\d+)% increased Critical Strike Chance/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Spectres have #% increased Damage',
    regex: /Spectres have (\d+)% increased Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Spectres have #% increased maximum Life',
    regex: /Spectres have (\d+)% increased maximum Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Spectres have a Base Duration of # seconds Spectres do not travel between Areas',
    regex: /Spectres have a Base Duration of (\d+) seconds Spectres do not travel between Areas/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Spell Skills deal no Damage',
    regex: /Spell Skills deal no Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Spells fire an additional Projectile',
    regex: /Spells fire an additional Projectile/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Spells have a #% chance to deal Double Damage',
    regex: /Spells have a (\d+)% chance to deal Double Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Split Arrow fires an additional arrow with # Dexterity from Passives in Radius',
    regex: /Split Arrow fires an additional arrow with (\d+) Dexterity from Passives in Radius/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Spreads Tar when you Block',
    regex: /Spreads Tar when you Block/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Spreads Tar when you take a Critical Strike',
    regex: /Spreads Tar when you take a Critical Strike/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Strength from Passives in Radius is Transformed to Dexterity',
    regex: /Strength from Passives in Radius is Transformed to Dexterity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Strength from Passives in Radius is Transformed to Intelligence',
    regex: /Strength from Passives in Radius is Transformed to Intelligence/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Strength provides no bonus to Maximum Life',
    regex: /Strength provides no bonus to Maximum Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Strength\'s Damage Bonus instead grants 3% increased Melee Physical Damage per 10 Strength',
    regex: /Strength's Damage Bonus instead grants 3% increased Melee Physical Damage per 10 Strength/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Stun Threshold is based on #% of your Mana instead of Life',
    regex: /Stun Threshold is based on (\d+)% of your Mana instead of Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Stun Threshold is based on Energy Shield instead of Life',
    regex: /Stun Threshold is based on Energy Shield instead of Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Summon # additional Skeleton Warriors with Summon Skeleton',
    regex: /Summon (\d+) additional Skeleton Warriors with Summon Skeleton/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Summon Raging Spirit has #% increased Duration',
    regex: /Summon Raging Spirit has (\d+)% increased Duration/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Summoned Golems are Aggressive',
    regex: /Summoned Golems are Aggressive/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Summoned Golems Regenerate #% of their Life per second',
    regex: /Summoned Golems Regenerate (\d+)% of their Life per second/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Summoned Holy Relics have #% reduced Cooldown Recovery Speed',
    regex: /Summoned Holy Relics have (\d+)% reduced Cooldown Recovery Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Summoned Raging Spirits deal #% increased Damage',
    regex: /Summoned Raging Spirits deal (\d+)% increased Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Summoned Raging Spirits have #% increased maximum Life',
    regex: /Summoned Raging Spirits have (\d+)% increased maximum Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Summoned Raging Spirits refresh their Duration when they Kill an Ignited Enemy',
    regex: /Summoned Raging Spirits refresh their Duration when they Kill an Ignited Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Summoned Raging Spirits take #% of their Maximum Life per second as Chaos Damage',
    regex: /Summoned Raging Spirits take (\d+)% of their Maximum Life per second as Chaos Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Summoned Raging Spirits\' Hits always Ignite',
    regex: /Summoned Raging Spirits' Hits always Ignite/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Summoned Skeletons Cover Enemies in Ash on Hit',
    regex: /Summoned Skeletons Cover Enemies in Ash on Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Summoned Skeletons have Avatar of Fire',
    regex: /Summoned Skeletons have Avatar of Fire/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Summoned Skeletons take #% of their Maximum Life per second as Fire Damage',
    regex: /Summoned Skeletons take (\d+)% of their Maximum Life per second as Fire Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Take # Fire Damage when you Ignite an Enemy',
    regex: /Take (\d+) Fire Damage when you Ignite an Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Take # Physical Damage per Second per Siphoning Charge if you\'ve used a Skill Recently',
    regex: /Take (\d+) Physical Damage per Second per Siphoning Charge if you've used a Skill Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Take # Physical Damage when you use a Movement Skill',
    regex: /Take (\d+) Physical Damage when you use a Movement Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Take no Extra Damage from Critical Strikes',
    regex: /Take no Extra Damage from Critical Strikes/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Temporal Chains has #% reduced Effect on you',
    regex: /Temporal Chains has (\d+)% reduced Effect on you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Temporal Chains has #% reduced Mana Reservation',
    regex: /Temporal Chains has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Thaumaturgical Lure',
    regex: /Thaumaturgical Lure/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'The Effect of Chill on you is reversed',
    regex: /The Effect of Chill on you is reversed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Totems cannot be Stunned',
    regex: /Totems cannot be Stunned/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Totems fire # additional Projectiles',
    regex: /Totems fire (\d+) additional Projectiles/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Totems gain #% to all Elemental Resistances per active Totem',
    regex: /Totems gain (\d+)% to all Elemental Resistances per active Totem/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Totems have #% increased Attack Speed per active Totem',
    regex: /Totems have (\d+)% increased Attack Speed per active Totem/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Totems have #% increased Cast Speed per active Totem',
    regex: /Totems have (\d+)% increased Cast Speed per active Totem/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Totems Reflect #% of their maximum Life as Fire Damage to nearby Enemies when Hit',
    regex: /Totems Reflect (\d+)% of their maximum Life as Fire Damage to nearby Enemies when Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Traps and Mines deal # to # additional Physical Damage',
    regex: /Traps and Mines deal (\d+) to (\d+) additional Physical Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Traps and Mines have a #% chance to Poison on Hit',
    regex: /Traps and Mines have a (\d+)% chance to Poison on Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Traps from Socketed Skills create a Smoke Cloud when triggered',
    regex: /Traps from Socketed Skills create a Smoke Cloud when triggered/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Travel Skills have #% increased Cooldown Recovery Speed',
    regex: /Travel Skills have (\d+)% increased Cooldown Recovery Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Trigger a Socketed Bow Skill when you Attack with a Bow',
    regex: /Trigger a Socketed Bow Skill when you Attack with a Bow/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Trigger a Socketed Cold Spell on Melee Critical Strike',
    regex: /Trigger a Socketed Cold Spell on Melee Critical Strike/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Trigger a Socketed Lightning Spell on Hit Socketed Lightning Spells deal 100% increased Spell Damage if Triggered',
    regex: /Trigger a Socketed Lightning Spell on Hit Socketed Lightning Spells deal 100% increased Spell Damage if Triggered/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Trigger a Socketed Spell when you Attack with this Weapon',
    regex: /Trigger a Socketed Spell when you Attack with this Weapon/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Trigger a Socketed Warcry Skill when you lose Endurance Charges',
    regex: /Trigger a Socketed Warcry Skill when you lose Endurance Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Trigger Commandment of Inferno on Critical Strike',
    regex: /Trigger Commandment of Inferno on Critical Strike/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Trigger Level # Abyssal Cry on Hit',
    regex: /Trigger Level (\d+) Abyssal Cry on Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Trigger Level # Bone Nova when you Kill a Bleeding Enemy',
    regex: /Trigger Level (\d+) Bone Nova when you Kill a Bleeding Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Trigger Level # Bone Offering, Flesh Offering or Spirit Offering every 5 seconds Offering Skills Triggered this way also affect you',
    regex: /Trigger Level (\d+) Bone Offering, Flesh Offering or Spirit Offering every 5 seconds Offering Skills Triggered this way also affect you/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Trigger Level # Consecrate when you deal a Critical Strike',
    regex: /Trigger Level (\d+) Consecrate when you deal a Critical Strike/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Trigger Level # Contaminate when you Kill an Enemy',
    regex: /Trigger Level (\d+) Contaminate when you Kill an Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Trigger Level # Darktongue\'s Kiss when you Cast a Curse Skill',
    regex: /Trigger Level (\d+) Darktongue's Kiss when you Cast a Curse Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Trigger Level # Elemental Warding when you Hit an Enemy while Cursed',
    regex: /Trigger Level (\d+) Elemental Warding when you Hit an Enemy while Cursed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Trigger Level # Feast of Flesh every 5 seconds',
    regex: /Trigger Level (\d+) Feast of Flesh every 5 seconds/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Trigger Level # Fire Burst on Kill',
    regex: /Trigger Level (\d+) Fire Burst on Kill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Trigger Level # Fog of War when your Trap is triggered',
    regex: /Trigger Level (\d+) Fog of War when your Trap is triggered/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Trigger Level # Icicle Burst when you Kill a Frozen Enemy',
    regex: /Trigger Level (\d+) Icicle Burst when you Kill a Frozen Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Trigger Level # Intimidating Cry when you lose Cat\'s Stealth',
    regex: /Trigger Level (\d+) Intimidating Cry when you lose Cat's Stealth/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Trigger Level # Lightning Bolt when you deal a Critical Strike',
    regex: /Trigger Level (\d+) Lightning Bolt when you deal a Critical Strike/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Trigger Level # Rain of Arrows when you Attack with a Bow',
    regex: /Trigger Level (\d+) Rain of Arrows when you Attack with a Bow/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Trigger Level # Shock Ground when Hit',
    regex: /Trigger Level (\d+) Shock Ground when Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Trigger Level # Spirit Burst when you Use a Skill while you have a Spirit Charge',
    regex: /Trigger Level (\d+) Spirit Burst when you Use a Skill while you have a Spirit Charge/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Trigger Level # Storm Cascade when you Attack',
    regex: /Trigger Level (\d+) Storm Cascade when you Attack/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Trigger Level # Summon Phantasm Skill when you Consume a corpse',
    regex: /Trigger Level (\d+) Summon Phantasm Skill when you Consume a corpse/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Trigger Level # Void Gaze when you use a Skill',
    regex: /Trigger Level (\d+) Void Gaze when you use a Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Trigger Level 1 Create Lesser Shrine when you Kill an Enemy',
    regex: /Trigger Level 1 Create Lesser Shrine when you Kill an Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Trigger Level 20 Animate Guardian\'s Weapon when Animated Guardian Kills an Enemy',
    regex: /Trigger Level 20 Animate Guardian's Weapon when Animated Guardian Kills an Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Trigger Level 20 Arcane Wake after Spending a total of 200 Mana',
    regex: /Trigger Level 20 Arcane Wake after Spending a total of 200 Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Trigger Level 20 Glimpse of Eternity when Hit',
    regex: /Trigger Level 20 Glimpse of Eternity when Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Trigger Socketed Curse Skill when you cast a Curse Skill',
    regex: /Trigger Socketed Curse Skill when you cast a Curse Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Trigger Socketed Minion Spells on Kill with this Weapon',
    regex: /Trigger Socketed Minion Spells on Kill with this Weapon/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Triggered Spells deal #% increased Spell Damage',
    regex: /Triggered Spells deal (\d+)% increased Spell Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Triggers Level # Abberath\'s Fury when Equipped',
    regex: /Triggers Level (\d+) Abberath's Fury when Equipped/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Triggers Level # Blinding Aura when Equipped',
    regex: /Triggers Level (\d+) Blinding Aura when Equipped/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Triggers Level # Cold Aegis when Equipped',
    regex: /Triggers Level (\d+) Cold Aegis when Equipped/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Triggers Level # Death Walk when Equipped',
    regex: /Triggers Level (\d+) Death Walk when Equipped/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Triggers Level # Elemental Aegis when Equipped',
    regex: /Triggers Level (\d+) Elemental Aegis when Equipped/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Triggers Level # Fire Aegis when Equipped',
    regex: /Triggers Level (\d+) Fire Aegis when Equipped/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Triggers Level # Lightning Aegis when Equipped',
    regex: /Triggers Level (\d+) Lightning Aegis when Equipped/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Triggers Level # Manifest Dancing Dervish on Rampage',
    regex: /Triggers Level (\d+) Manifest Dancing Dervish on Rampage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Unaffected by Bleeding while affected by Malevolence',
    regex: /Unaffected by Bleeding while affected by Malevolence/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Unaffected by Burning Ground while affected by Purity of Fire',
    regex: /Unaffected by Burning Ground while affected by Purity of Fire/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Unaffected by Chilled Ground while affected by Purity of Ice',
    regex: /Unaffected by Chilled Ground while affected by Purity of Ice/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Unaffected by Conductivity while affected by Purity of Lightning',
    regex: /Unaffected by Conductivity while affected by Purity of Lightning/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Unaffected by Curses',
    regex: /Unaffected by Curses/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Unaffected by Elemental Weakness while affected by Purity of Elements',
    regex: /Unaffected by Elemental Weakness while affected by Purity of Elements/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Unaffected by Enfeeble while affected by Grace',
    regex: /Unaffected by Enfeeble while affected by Grace/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Unaffected by Flammability while affected by Purity of Fire',
    regex: /Unaffected by Flammability while affected by Purity of Fire/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Unaffected by Frostbite while affected by Purity of Ice',
    regex: /Unaffected by Frostbite while affected by Purity of Ice/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Unaffected by Poison',
    regex: /Unaffected by Poison/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Unaffected by Poison while affected by Malevolence',
    regex: /Unaffected by Poison while affected by Malevolence/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Unaffected by Shock',
    regex: /Unaffected by Shock/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Unaffected by Shocked Ground while affected by Purity of Lightning',
    regex: /Unaffected by Shocked Ground while affected by Purity of Lightning/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Unaffected by Temporal Chains',
    regex: /Unaffected by Temporal Chains/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Unaffected by Temporal Chains while affected by Haste',
    regex: /Unaffected by Temporal Chains while affected by Haste/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Unaffected by Vulnerability while affected by Determination',
    regex: /Unaffected by Vulnerability while affected by Determination/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Unwavering Stance',
    regex: /Unwavering Stance/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Uses both hand slots',
    regex: /Uses both hand slots/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Vaal Pact',
    regex: /Vaal Pact/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Vitality has #% reduced Mana Reservation',
    regex: /Vitality has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Vitality Reserves no Mana',
    regex: /Vitality Reserves no Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Vulnerability has #% reduced Mana Reservation',
    regex: /Vulnerability has (\d+)% reduced Mana Reservation/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Warcries Knock Enemies Back in an Area',
    regex: /Warcries Knock Enemies Back in an Area/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Warcry Skills\' Cooldown Time is 2 seconds',
    regex: /Warcry Skills' Cooldown Time is 2 seconds/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Weapons you Animate create an additional copy',
    regex: /Weapons you Animate create an additional copy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'When used in the Synthesiser, the new item will have an additional Herald Modifier',
    regex: /When used in the Synthesiser, the new item will have an additional Herald Modifier/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'When you Kill a Rare monster, you gain its Modifiers for # seconds',
    regex: /When you Kill a Rare monster, you gain its Modifiers for (\d+) seconds/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'When you Kill a Shocked Enemy, inflict an equivalent Shock on each nearby Enemy',
    regex: /When you Kill a Shocked Enemy, inflict an equivalent Shock on each nearby Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'When you Kill an Ignited Enemy, inflict an equivalent Ignite on each nearby Enemy',
    regex: /When you Kill an Ignited Enemy, inflict an equivalent Ignite on each nearby Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'While at maximum Frenzy Charges, Attacks Poison Enemies',
    regex: /While at maximum Frenzy Charges, Attacks Poison Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'While in Her Embrace, take #% of your total Maximum Life and Energy Shield as Fire Damage per second per Level',
    regex: /While in Her Embrace, take (\d+)% of your total Maximum Life and Energy Shield as Fire Damage per second per Level/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'While your Passive Skill Tree connects to the Duelist\'s starting location, you gain: #% of Attack Damage Leeched as Life',
    regex: /While your Passive Skill Tree connects to the Duelist's starting location, you gain: (\d+)% of Attack Damage Leeched as Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'While your Passive Skill Tree connects to the Marauder\'s starting location, you gain: Melee Skills have #% increased Area of Effect',
    regex: /While your Passive Skill Tree connects to the Marauder's starting location, you gain: Melee Skills have (\d+)% increased Area of Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'While your Passive Skill Tree connects to the Ranger\'s starting location, you gain: #% increased Movement Speed',
    regex: /While your Passive Skill Tree connects to the Ranger's starting location, you gain: (\d+)% increased Movement Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'While your Passive Skill Tree connects to the Scion\'s starting location, you gain: +# to All Attributes',
    regex: /While your Passive Skill Tree connects to the Scion's starting location, you gain: \+(\d+) to All Attributes/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'While your Passive Skill Tree connects to the Shadow\'s starting location, you gain: +#% to Critical Strike Chance',
    regex: /While your Passive Skill Tree connects to the Shadow's starting location, you gain: \+(\d+)% to Critical Strike Chance/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'While your Passive Skill Tree connects to the Templar\'s starting location, you gain: Damage Penetrates #% Elemental Resistances',
    regex: /While your Passive Skill Tree connects to the Templar's starting location, you gain: Damage Penetrates (\d+)% Elemental Resistances/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'While your Passive Skill Tree connects to the Witch\'s starting location, you gain: #% of Mana Regenerated per second',
    regex: /While your Passive Skill Tree connects to the Witch's starting location, you gain: (\d+)% of Mana Regenerated per second/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Wicked Ward',
    regex: /Wicked Ward/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With # Corrupted Items Equipped: 50% of Chaos Damage does not bypass Energy Shield, and 50% of Physical Damage bypasses Energy Shield',
    regex: /With (\d+) Corrupted Items Equipped: 50% of Chaos Damage does not bypass Energy Shield, and 50% of Physical Damage bypasses Energy Shield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With # Corrupted Items Equipped: Life Leech recovers based on your Chaos Damage instead',
    regex: /With (\d+) Corrupted Items Equipped: Life Leech recovers based on your Chaos Damage instead/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With 4 Notables Allocated in Radius, When you Kill a Rare monster, you gain # of its Modifiers for 20 seconds',
    regex: /With 4 Notables Allocated in Radius, When you Kill a Rare monster, you gain (\d+) of its Modifiers for 20 seconds/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With 40 Intelligence in Radius, #% of Glacial Cascade Physical Damage Converted to Cold Damage',
    regex: /With 40 Intelligence in Radius, (\d+)% of Glacial Cascade Physical Damage Converted to Cold Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With 40 Intelligence in Radius, Glacial Cascade has an additional Burst',
    regex: /With 40 Intelligence in Radius, Glacial Cascade has an additional Burst/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With 40 total Dexterity and Strength in Radius, Elemental Hit and Wild Strike cannot choose Lightning',
    regex: /With 40 total Dexterity and Strength in Radius, Elemental Hit and Wild Strike cannot choose Lightning/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With 40 total Dexterity and Strength in Radius, Elemental Hit and Wild Strike deal 50% less Lightning Damage',
    regex: /With 40 total Dexterity and Strength in Radius, Elemental Hit and Wild Strike deal 50% less Lightning Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With 40 total Dexterity and Strength in Radius, Spectral Shield Throw Chains +# times',
    regex: /With 40 total Dexterity and Strength in Radius, Spectral Shield Throw Chains \+(\d+) times/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With 40 total Dexterity and Strength in Radius, Spectral Shield Throw fires #% less Shard Projectiles',
    regex: /With 40 total Dexterity and Strength in Radius, Spectral Shield Throw fires (\d+)% less Shard Projectiles/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With 40 total Dexterity and Strength in Radius, Spectral Shield Throw fires Shard Projectiles when Chaining',
    regex: /With 40 total Dexterity and Strength in Radius, Spectral Shield Throw fires Shard Projectiles when Chaining/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With 40 total Intelligence and Dexterity in Radius, Elemental Hit and Wild Strike cannot choose Fire',
    regex: /With 40 total Intelligence and Dexterity in Radius, Elemental Hit and Wild Strike cannot choose Fire/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With 40 total Intelligence and Dexterity in Radius, Elemental Hit and Wild Strike deal 50% less Fire Damage',
    regex: /With 40 total Intelligence and Dexterity in Radius, Elemental Hit and Wild Strike deal 50% less Fire Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With 40 total Strength and Intelligence in Radius, Elemental Hit and Wild Strike cannot choose Cold',
    regex: /With 40 total Strength and Intelligence in Radius, Elemental Hit and Wild Strike cannot choose Cold/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With 40 total Strength and Intelligence in Radius, Elemental Hit and Wild Strike deal 50% less Cold Damage',
    regex: /With 40 total Strength and Intelligence in Radius, Elemental Hit and Wild Strike deal 50% less Cold Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With 5 Corrupted Items Equipped: Gain Soul Eater for # seconds on Vaal Skill use',
    regex: /With 5 Corrupted Items Equipped: Gain Soul Eater for (\d+) seconds on Vaal Skill use/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With a Ghastly Eye Jewel Socketed, Minions have +# to Accuracy Rating',
    regex: /With a Ghastly Eye Jewel Socketed, Minions have \+(\d+) to Accuracy Rating/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With a Hypnotic Eye Jewel Socketed, gain Arcane Surge on Hit with Spells',
    regex: /With a Hypnotic Eye Jewel Socketed, gain Arcane Surge on Hit with Spells/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With a Murderous Eye Jewel Socketed, Intimidate Enemies for 4 seconds on Hit with Attacks',
    regex: /With a Murderous Eye Jewel Socketed, Intimidate Enemies for 4 seconds on Hit with Attacks/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With a Searching Eye Jewel Socketed, Maim Enemies for 4 seconds on Hit with Attacks',
    regex: /With a Searching Eye Jewel Socketed, Maim Enemies for 4 seconds on Hit with Attacks/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 1000 Strength, #% of Damage dealt by your Raised Zombies is Leeched to you as Life',
    regex: /With at least 1000 Strength, (\d+)% of Damage dealt by your Raised Zombies is Leeched to you as Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Dexterity in Radius, Animate Weapon can Animate up to # Ranged Weapons',
    regex: /With at least 40 Dexterity in Radius, Animate Weapon can Animate up to (\d+) Ranged Weapons/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Dexterity in Radius, Barrage fires an additional # projectiles simultaneously on the first and final attacks',
    regex: /With at least 40 Dexterity in Radius, Barrage fires an additional (\d+) projectiles simultaneously on the first and final attacks/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Dexterity in Radius, Burning Arrow can inflict an additional Ignite on an Enemy',
    regex: /With at least 40 Dexterity in Radius, Burning Arrow can inflict an additional Ignite on an Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Dexterity in Radius, Burning Arrow has a #% chance to spread Burning Ground if it Ignites an Enemy',
    regex: /With at least 40 Dexterity in Radius, Burning Arrow has a (\d+)% chance to spread Burning Ground if it Ignites an Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Dexterity in Radius, Burning Arrow has a #% chance to spread Tar if it does not Ignite an Enemy',
    regex: /With at least 40 Dexterity in Radius, Burning Arrow has a (\d+)% chance to spread Tar if it does not Ignite an Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Dexterity in Radius, Caustic Arrow deals #% increased Damage over Time',
    regex: /With at least 40 Dexterity in Radius, Caustic Arrow deals (\d+)% increased Damage over Time/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Dexterity in Radius, Caustic Arrow deals #% reduced Damage with Hits',
    regex: /With at least 40 Dexterity in Radius, Caustic Arrow deals (\d+)% reduced Damage with Hits/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Dexterity in Radius, Caustic Arrow has a #% chance on Hit to Poison Enemies on Caustic Ground',
    regex: /With at least 40 Dexterity in Radius, Caustic Arrow has a (\d+)% chance on Hit to Poison Enemies on Caustic Ground/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Dexterity in Radius, Dual Strike deals Off-Hand Splash Damage to surrounding targets',
    regex: /With at least 40 Dexterity in Radius, Dual Strike deals Off-Hand Splash Damage to surrounding targets/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Dexterity in Radius, Dual Strike has a #% chance to deal Double Damage with the Main-Hand Weapon',
    regex: /With at least 40 Dexterity in Radius, Dual Strike has a (\d+)% chance to deal Double Damage with the Main-Hand Weapon/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Dexterity in Radius, each Spectral Throw Projectile gains #% increased Damage each time it Hits',
    regex: /With at least 40 Dexterity in Radius, each Spectral Throw Projectile gains (\d+)% increased Damage each time it Hits/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Dexterity in Radius, Ethereal Knives fires # additional Projectiles',
    regex: /With at least 40 Dexterity in Radius, Ethereal Knives fires (\d+) additional Projectiles/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Dexterity in Radius, Ethereal Knives fires Projectiles in a Nova',
    regex: /With at least 40 Dexterity in Radius, Ethereal Knives fires Projectiles in a Nova/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Dexterity in Radius, Fire Trap throws up to 1 additional Trap',
    regex: /With at least 40 Dexterity in Radius, Fire Trap throws up to 1 additional Trap/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Dexterity in Radius, Frost Blades has #% increased Projectile Speed',
    regex: /With at least 40 Dexterity in Radius, Frost Blades has (\d+)% increased Projectile Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Dexterity in Radius, Ice Shot has #% increased Area of Effect',
    regex: /With at least 40 Dexterity in Radius, Ice Shot has (\d+)% increased Area of Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Dexterity in Radius, Ice Shot Pierces # additional Targets',
    regex: /With at least 40 Dexterity in Radius, Ice Shot Pierces (\d+) additional Targets/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Dexterity in Radius, Melee Damage dealt by Frost Blades Penetrates #% Cold Resistance',
    regex: /With at least 40 Dexterity in Radius, Melee Damage dealt by Frost Blades Penetrates (\d+)% Cold Resistance/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Dexterity in Radius, Shrapnel Shot has #% increased Area of Effect',
    regex: /With at least 40 Dexterity in Radius, Shrapnel Shot has (\d+)% increased Area of Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Dexterity in Radius, Shrapnel Shot\'s cone has a #% chance to deal Double Damage',
    regex: /With at least 40 Dexterity in Radius, Shrapnel Shot's cone has a (\d+)% chance to deal Double Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Dexterity in Radius, Split Arrow fires Projectiles in Parallel',
    regex: /With at least 40 Dexterity in Radius, Split Arrow fires Projectiles in Parallel/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Dexterity in Radius, Viper Strike deals #% increased Damage with Hits and Poison for each Poison on the Enemy',
    regex: /With at least 40 Dexterity in Radius, Viper Strike deals (\d+)% increased Damage with Hits and Poison for each Poison on the Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Dexterity in Radius, Viper Strike has a #% chance per Poison on Enemy to grant Unholy Might for 4 seconds on Hit',
    regex: /With at least 40 Dexterity in Radius, Viper Strike has a (\d+)% chance per Poison on Enemy to grant Unholy Might for 4 seconds on Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Intelligence in Radius, # additional Spark Projectiles',
    regex: /With at least 40 Intelligence in Radius, (\d+) additional Spark Projectiles/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Intelligence in Radius, #% increased Freezing Pulse Damage if you\'ve Shattered an Enemy Recently',
    regex: /With at least 40 Intelligence in Radius, (\d+)% increased Freezing Pulse Damage if you've Shattered an Enemy Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Intelligence in Radius, #% of Damage taken gained as Mana over 4 seconds when Hit during Rallying Cry for you and Allies',
    regex: /With at least 40 Intelligence in Radius, (\d+)% of Damage taken gained as Mana over 4 seconds when Hit during Rallying Cry for you and Allies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Intelligence in Radius, Blight has #% increased Area of Effect after 1 second of Channelling',
    regex: /With at least 40 Intelligence in Radius, Blight has (\d+)% increased Area of Effect after 1 second of Channelling/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Intelligence in Radius, Blight has #% increased Hinder Duration',
    regex: /With at least 40 Intelligence in Radius, Blight has (\d+)% increased Hinder Duration/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Intelligence in Radius, Blight inflicts Withered for # seconds',
    regex: /With at least 40 Intelligence in Radius, Blight inflicts Withered for (\d+) seconds/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Intelligence in Radius, Blight inflicts Withered for 2 seconds',
    regex: /With at least 40 Intelligence in Radius, Blight inflicts Withered for 2 seconds/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Intelligence in Radius, Cold Snap grants Power Charges instead of Frenzy Charges when Enemies die in its Area With at least 40 Intelligence in Radius, Cold Snap\'s Cooldown can be bypassed by Power Charges instead of Frenzy Charges',
    regex: /With at least 40 Intelligence in Radius, Cold Snap grants Power Charges instead of Frenzy Charges when Enemies die in its Area With at least 40 Intelligence in Radius, Cold Snap's Cooldown can be bypassed by Power Charges instead of Frenzy Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Intelligence in Radius, each Lightning Tendrils Repeat has #% increased Area of Effect per Enemy Hit',
    regex: /With at least 40 Intelligence in Radius, each Lightning Tendrils Repeat has (\d+)% increased Area of Effect per Enemy Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Intelligence in Radius, Fireball Projectiles gain Area as they travel farther, up to #% increased Area of Effect',
    regex: /With at least 40 Intelligence in Radius, Fireball Projectiles gain Area as they travel farther, up to (\d+)% increased Area of Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Intelligence in Radius, Fireball Projectiles gain Radius as they travel farther, up to +# Radius',
    regex: /With at least 40 Intelligence in Radius, Fireball Projectiles gain Radius as they travel farther, up to \+(\d+) Radius/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Intelligence in Radius, Freezing Pulse fires # additional Projectiles',
    regex: /With at least 40 Intelligence in Radius, Freezing Pulse fires (\d+) additional Projectiles/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Intelligence in Radius, Frostbolt fires # additional Projectiles',
    regex: /With at least 40 Intelligence in Radius, Frostbolt fires (\d+) additional Projectiles/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Intelligence in Radius, Frostbolt Projectiles gain #% increased Projectile Speed per second',
    regex: /With at least 40 Intelligence in Radius, Frostbolt Projectiles gain (\d+)% increased Projectile Speed per second/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Intelligence in Radius, Magma Orb fires an additional Projectile',
    regex: /With at least 40 Intelligence in Radius, Magma Orb fires an additional Projectile/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Intelligence in Radius, Magma Orb has #% increased Area of Effect per Chain',
    regex: /With at least 40 Intelligence in Radius, Magma Orb has (\d+)% increased Area of Effect per Chain/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Intelligence in Radius, Raised Spectres have a #% chance to gain Soul Eater for 30 seconds on Kill',
    regex: /With at least 40 Intelligence in Radius, Raised Spectres have a (\d+)% chance to gain Soul Eater for 30 seconds on Kill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Intelligence in Radius, Raised Zombies\' Slam Attack deals #% increased Damage',
    regex: /With at least 40 Intelligence in Radius, Raised Zombies' Slam Attack deals (\d+)% increased Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Intelligence in Radius, Raised Zombies\' Slam Attack has #% increased Cooldown Recovery Speed',
    regex: /With at least 40 Intelligence in Radius, Raised Zombies' Slam Attack has (\d+)% increased Cooldown Recovery Speed/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Intelligence in Radius, Spark fires # additional Projectiles',
    regex: /With at least 40 Intelligence in Radius, Spark fires (\d+) additional Projectiles/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Intelligence in Radius, Spark fires Projectiles in a Nova',
    regex: /With at least 40 Intelligence in Radius, Spark fires Projectiles in a Nova/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Intelligence in Radius, Summon Skeletons can Summon up to # Skeleton Mages',
    regex: /With at least 40 Intelligence in Radius, Summon Skeletons can Summon up to (\d+) Skeleton Mages/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Strength in Radius, #% increased Rarity of Items dropped by Enemies Shattered by Glacial Hammer',
    regex: /With at least 40 Strength in Radius, (\d+)% increased Rarity of Items dropped by Enemies Shattered by Glacial Hammer/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Strength in Radius, #% of Glacial Hammer Physical Damage Converted to Cold Damage',
    regex: /With at least 40 Strength in Radius, (\d+)% of Glacial Hammer Physical Damage Converted to Cold Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Strength in Radius, Cleave grants Fortify on Hit',
    regex: /With at least 40 Strength in Radius, Cleave grants Fortify on Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Strength in Radius, Cleave has +1 to Radius per Nearby Enemy, up to +10',
    regex: /With at least 40 Strength in Radius, Cleave has \+1 to Radius per Nearby Enemy, up to \+10/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Strength in Radius, Glacial Hammer deals Cold-only Splash Damage to surrounding targets',
    regex: /With at least 40 Strength in Radius, Glacial Hammer deals Cold-only Splash Damage to surrounding targets/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Strength in Radius, Ground Slam has a #% chance to grant an Endurance Charge when you Stun an Enemy',
    regex: /With at least 40 Strength in Radius, Ground Slam has a (\d+)% chance to grant an Endurance Charge when you Stun an Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Strength in Radius, Ground Slam has a #% increased angle',
    regex: /With at least 40 Strength in Radius, Ground Slam has a (\d+)% increased angle/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Strength in Radius, Heavy Strike has a #% chance to deal Double Damage',
    regex: /With at least 40 Strength in Radius, Heavy Strike has a (\d+)% chance to deal Double Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Strength in Radius, Molten Strike fires # additional Projectiles',
    regex: /With at least 40 Strength in Radius, Molten Strike fires (\d+) additional Projectiles/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Strength in Radius, Molten Strike has #% increased Area of Effect',
    regex: /With at least 40 Strength in Radius, Molten Strike has (\d+)% increased Area of Effect/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'With at least 40 Strength in Radius, Vigilant Strike Fortifies you and Nearby Allies for # seconds',
    regex: /With at least 40 Strength in Radius, Vigilant Strike Fortifies you and Nearby Allies for (\d+) seconds/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Wrath Reserves no Mana',
    regex: /Wrath Reserves no Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You always Ignite while Burning',
    regex: /You always Ignite while Burning/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You and Allies affected by Auras from your Skills deal #% increased Damage',
    regex: /You and Allies affected by Auras from your Skills deal (\d+)% increased Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You and nearby allies gain #% increased Damage',
    regex: /You and nearby allies gain (\d+)% increased Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You and Nearby Allies have # to # added Chaos Damage per White Socket',
    regex: /You and Nearby Allies have (\d+) to (\d+) added Chaos Damage per White Socket/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You and Nearby Allies have # to # added Cold Damage per Green Socket',
    regex: /You and Nearby Allies have (\d+) to (\d+) added Cold Damage per Green Socket/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You and Nearby Allies have # to # added Fire Damage per Red Socket',
    regex: /You and Nearby Allies have (\d+) to (\d+) added Fire Damage per Red Socket/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You and Nearby Allies have # to # added Lightning Damage per Blue Socket',
    regex: /You and Nearby Allies have (\d+) to (\d+) added Lightning Damage per Blue Socket/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You are Chilled while you are Bleeding',
    regex: /You are Chilled while you are Bleeding/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You are Chilled while you are Poisoned',
    regex: /You are Chilled while you are Poisoned/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You are Cursed with Level # Vulnerability',
    regex: /You are Cursed with Level (\d+) Vulnerability/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You can apply an additional Curse while at maximum Power Charges',
    regex: /You can apply an additional Curse while at maximum Power Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You can catch Exotic Fish',
    regex: /You can catch Exotic Fish/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You can inflict an additional Ignite on an Enemy',
    regex: /You can inflict an additional Ignite on an Enemy/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You can only deal Damage with this Weapon and Ignite',
    regex: /You can only deal Damage with this Weapon and Ignite/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You can only Socket Corrupted Gems in this item',
    regex: /You can only Socket Corrupted Gems in this item/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You cannot be Chilled for # seconds after being Chilled',
    regex: /You cannot be Chilled for (\d+) seconds after being Chilled/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You cannot be Cursed with Silence',
    regex: /You cannot be Cursed with Silence/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You cannot be Frozen for # seconds after being Frozen',
    regex: /You cannot be Frozen for (\d+) seconds after being Frozen/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You cannot be Hindered',
    regex: /You cannot be Hindered/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You cannot be Ignited for # seconds after being Ignited',
    regex: /You cannot be Ignited for (\d+) seconds after being Ignited/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You cannot be killed by reflected Elemental Damage',
    regex: /You cannot be killed by reflected Elemental Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You cannot be Shocked for # seconds after being Shocked',
    regex: /You cannot be Shocked for (\d+) seconds after being Shocked/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You cannot be Shocked while at maximum Endurance Charges',
    regex: /You cannot be Shocked while at maximum Endurance Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You cannot be Shocked while Frozen',
    regex: /You cannot be Shocked while Frozen/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You cannot be Stunned while at maximum Endurance Charges',
    regex: /You cannot be Stunned while at maximum Endurance Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You cannot deal Critical Strikes against non-Shocked Enemies',
    regex: /You cannot deal Critical Strikes against non-Shocked Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You cannot have non-Animated Minions',
    regex: /You cannot have non-Animated Minions/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You cannot have non-Golem Minions',
    regex: /You cannot have non-Golem Minions/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You cannot increase the Quantity of Items found',
    regex: /You cannot increase the Quantity of Items found/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You cannot increase the Rarity of Items found',
    regex: /You cannot increase the Rarity of Items found/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You cannot Recharge Energy Shield',
    regex: /You cannot Recharge Energy Shield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You cannot Regenerate Energy Shield',
    regex: /You cannot Regenerate Energy Shield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You count as on Low Life while not on Full Life',
    regex: /You count as on Low Life while not on Full Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You count as on Low Life while you are Cursed with Vulnerability',
    regex: /You count as on Low Life while you are Cursed with Vulnerability/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You gain an Endurance Charge on Kill',
    regex: /You gain an Endurance Charge on Kill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You gain Divinity for # seconds on reaching maximum Divine Charges Lose all Divine Charges when you gain Divinity',
    regex: /You gain Divinity for (\d+) seconds on reaching maximum Divine Charges Lose all Divine Charges when you gain Divinity/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You gain Onslaught for # seconds on Critical Strike',
    regex: /You gain Onslaught for (\d+) seconds on Critical Strike/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You gain Onslaught for # seconds on Culling Strike',
    regex: /You gain Onslaught for (\d+) seconds on Culling Strike/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You gain Onslaught for # seconds on Hit',
    regex: /You gain Onslaught for (\d+) seconds on Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You gain Onslaught for # seconds on Kill',
    regex: /You gain Onslaught for (\d+) seconds on Kill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You gain Onslaught for # seconds on Kill while affected by Haste',
    regex: /You gain Onslaught for (\d+) seconds on Kill while affected by Haste/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You gain Onslaught for # seconds on Killing Taunted Enemies',
    regex: /You gain Onslaught for (\d+) seconds on Killing Taunted Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You gain Onslaught for # seconds on using a Vaal Skill',
    regex: /You gain Onslaught for (\d+) seconds on using a Vaal Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You gain Onslaught for # seconds per Endurance Charge when Hit',
    regex: /You gain Onslaught for (\d+) seconds per Endurance Charge when Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You gain Phasing for # seconds on using a Vaal Skill',
    regex: /You gain Phasing for (\d+) seconds on using a Vaal Skill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You grant # Frenzy Charges to allies on Death',
    regex: /You grant (\d+) Frenzy Charges to allies on Death/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You have Crimson Dance if you have dealt a Critical Strike Recently',
    regex: /You have Crimson Dance if you have dealt a Critical Strike Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You have Crimson Dance while you have Cat\'s Stealth',
    regex: /You have Crimson Dance while you have Cat's Stealth/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You have Far Shot while you do not have Iron Reflexes',
    regex: /You have Far Shot while you do not have Iron Reflexes/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You have Fungal Ground around you while stationary',
    regex: /You have Fungal Ground around you while stationary/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You have Iron Reflexes while at maximum Frenzy Charges',
    regex: /You have Iron Reflexes while at maximum Frenzy Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You have Mind over Matter while at maximum Power Charges',
    regex: /You have Mind over Matter while at maximum Power Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You have no Armour or Maximum Energy Shield',
    regex: /You have no Armour or Maximum Energy Shield/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You have no Life Regeneration',
    regex: /You have no Life Regeneration/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You have Onslaught while at maximum Endurance Charges',
    regex: /You have Onslaught while at maximum Endurance Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You have Onslaught while not on Low Mana',
    regex: /You have Onslaught while not on Low Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You have Onslaught while on Low Life',
    regex: /You have Onslaught while on Low Life/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You have Onslaught while you have Fortify',
    regex: /You have Onslaught while you have Fortify/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You have Phasing if Energy Shield Recharge has started Recently',
    regex: /You have Phasing if Energy Shield Recharge has started Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You have Phasing if you\'ve Killed Recently',
    regex: /You have Phasing if you've Killed Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You have Phasing while affected by Haste',
    regex: /You have Phasing while affected by Haste/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You have Phasing while you have Cat\'s Stealth',
    regex: /You have Phasing while you have Cat's Stealth/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You have Resolute Technique while you do not have Elemental Overload',
    regex: /You have Resolute Technique while you do not have Elemental Overload/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You have Vaal Pact if you\'ve dealt a Critical Strike Recently',
    regex: /You have Vaal Pact if you've dealt a Critical Strike Recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You have Vaal Pact while all Socketed Gems are Red',
    regex: /You have Vaal Pact while all Socketed Gems are Red/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You have Vaal Pact while at maximum Endurance Charges',
    regex: /You have Vaal Pact while at maximum Endurance Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You have Zealot\'s Oath if you haven\'t been hit recently',
    regex: /You have Zealot's Oath if you haven't been hit recently/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You lose #% of Energy Shield per second',
    regex: /You lose (\d+)% of Energy Shield per second/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You lose all Endurance Charges on reaching maximum Endurance Charges',
    regex: /You lose all Endurance Charges on reaching maximum Endurance Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You lose all Endurance Charges when Hit',
    regex: /You lose all Endurance Charges when Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You lose all Spirit Charges when taking a Savage Hit',
    regex: /You lose all Spirit Charges when taking a Savage Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You only lose # Crab Barriers when you take Physical Damage from a Hit',
    regex: /You only lose (\d+) Crab Barriers when you take Physical Damage from a Hit/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You take # Chaos Damage per second for # seconds on Kill',
    regex: /You take (\d+) Chaos Damage per second for (\d+) seconds on Kill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You take #% reduced Extra Damage from Critical Strikes while affected by Determination',
    regex: /You take (\d+)% reduced Extra Damage from Critical Strikes while affected by Determination/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You take #% reduced Extra Damage from Critical Strikes while you have no Power Charges',
    regex: /You take (\d+)% reduced Extra Damage from Critical Strikes while you have no Power Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'You take Chaos Damage instead of Physical Damage from Bleeding',
    regex: /You take Chaos Damage instead of Physical Damage from Bleeding/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Attacks deal # Physical Damage',
    regex: /Your Attacks deal (\d+) Physical Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Attacks do not cost Mana',
    regex: /Your Attacks do not cost Mana/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Aura Buffs do not affect allies',
    regex: /Your Aura Buffs do not affect allies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Chaos Damage can Shock',
    regex: /Your Chaos Damage can Shock/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Chaos Damage has #% chance to Poison Enemies',
    regex: /Your Chaos Damage has (\d+)% chance to Poison Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Chaos Damage Poisons Enemies',
    regex: /Your Chaos Damage Poisons Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Cold Damage can Ignite',
    regex: /Your Cold Damage can Ignite/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Cold Damage can Ignite but not Freeze or Chill',
    regex: /Your Cold Damage can Ignite but not Freeze or Chill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Cold Damage can Poison',
    regex: /Your Cold Damage can Poison/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Critical Strike Multiplier is 300%',
    regex: /Your Critical Strike Multiplier is 300%/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Critical Strikes do not deal extra Damage',
    regex: /Your Critical Strikes do not deal extra Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Curses can apply to Hexproof Enemies',
    regex: /Your Curses can apply to Hexproof Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Elemental Damage can Shock',
    regex: /Your Elemental Damage can Shock/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Energy Shield starts at zero',
    regex: /Your Energy Shield starts at zero/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Fire Damage can Poison',
    regex: /Your Fire Damage can Poison/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Fire Damage can Shock but not Ignite',
    regex: /Your Fire Damage can Shock but not Ignite/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Hits can only Kill Frozen Enemies',
    regex: /Your Hits can only Kill Frozen Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your hits can\'t be Evaded',
    regex: /Your hits can't be Evaded/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Hits can\'t be Evaded by Blinded Enemies',
    regex: /Your Hits can't be Evaded by Blinded Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Hits Intimidate Enemies for 4 seconds while you are using Pride',
    regex: /Your Hits Intimidate Enemies for 4 seconds while you are using Pride/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Increases and Reductions to Quantity of Items found also apply to Damage',
    regex: /Your Increases and Reductions to Quantity of Items found also apply to Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Lightning Damage can Freeze but not Shock',
    regex: /Your Lightning Damage can Freeze but not Shock/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Lightning Damage can Ignite',
    regex: /Your Lightning Damage can Ignite/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Lightning Damage can Poison',
    regex: /Your Lightning Damage can Poison/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Maximum Frenzy Charges is equal to your Maximum Power Charges',
    regex: /Your Maximum Frenzy Charges is equal to your Maximum Power Charges/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Maximum Resistances are #%',
    regex: /Your Maximum Resistances are (\d+)%/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Minions spread Caustic Ground on Death, dealing #% of their maximum Life as Chaos Damage per second',
    regex: /Your Minions spread Caustic Ground on Death, dealing (\d+)% of their maximum Life as Chaos Damage per second/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Movement Speed is #% of its base value',
    regex: /Your Movement Speed is (\d+)% of its base value/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Physical Damage can Chill',
    regex: /Your Physical Damage can Chill/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Physical Damage can Shock',
    regex: /Your Physical Damage can Shock/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Raised Spectres also gain Arcane Surge when you do',
    regex: /Your Raised Spectres also gain Arcane Surge when you do/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Raised Zombies count as corpses',
    regex: /Your Raised Zombies count as corpses/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Skills deal you #% of Mana Spent on Skill Mana Costs as Physical Damage',
    regex: /Your Skills deal you (\d+)% of Mana Spent on Skill Mana Costs as Physical Damage/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Spells are disabled',
    regex: /Your Spells are disabled/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your spells have #% chance to Shock against Frozen Enemies',
    regex: /Your spells have (\d+)% chance to Shock against Frozen Enemies/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Your Spells have Culling Strike',
    regex: /Your Spells have Culling Strike/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Zealot\'s Oath',
    regex: /Zealot's Oath/,
    type: ModFilterType.UNIQUE,
  },
  {
    label: 'Zealotry Reserves no Mana',
    regex: /Zealotry Reserves no Mana/,
    type: ModFilterType.UNIQUE,
  },
];
/* bestiary */
export const bestiaryModRegexes: IMod[] = [
  {
    label: 'Family: The Caverns',
    regex: /Family: The Caverns/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Family: The Deep',
    regex: /Family: The Deep/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Family: The Sands',
    regex: /Family: The Sands/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Family: The Wilds',
    regex: /Family: The Wilds/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Ape Chieftains',
    regex: /Genus: Ape Chieftains/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Apes',
    regex: /Genus: Apes/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Arachnoscorpions',
    regex: /Genus: Arachnoscorpions/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Bulls',
    regex: /Genus: Bulls/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Carrion Insects',
    regex: /Genus: Carrion Insects/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Carrion Queens',
    regex: /Genus: Carrion Queens/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Chimerals',
    regex: /Genus: Chimerals/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Cockerels',
    regex: /Genus: Cockerels/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Crabs',
    regex: /Genus: Crabs/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Devourers',
    regex: /Genus: Devourers/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Frogs',
    regex: /Genus: Frogs/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Gargantuans',
    regex: /Genus: Gargantuans/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Gem Frogs',
    regex: /Genus: Gem Frogs/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Goat Shamans',
    regex: /Genus: Goat Shamans/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Goatmen',
    regex: /Genus: Goatmen/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Goliaths',
    regex: /Genus: Goliaths/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Hellions',
    regex: /Genus: Hellions/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Hounds',
    regex: /Genus: Hounds/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Karui Hounds',
    regex: /Genus: Karui Hounds/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Leapers',
    regex: /Genus: Leapers/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Lurchers',
    regex: /Genus: Lurchers/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Lynxes',
    regex: /Genus: Lynxes/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Maws',
    regex: /Genus: Maws/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Octopuses',
    regex: /Genus: Octopuses/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Parasites',
    regex: /Genus: Parasites/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Pitbulls',
    regex: /Genus: Pitbulls/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Plummeting Ursae',
    regex: /Genus: Plummeting Ursae/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Retches',
    regex: /Genus: Retches/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Rhexes',
    regex: /Genus: Rhexes/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Rhoas',
    regex: /Genus: Rhoas/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Sand Spitters',
    regex: /Genus: Sand Spitters/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Scorpions',
    regex: /Genus: Scorpions/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Sea Witches',
    regex: /Genus: Sea Witches/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Shield Crabs',
    regex: /Genus: Shield Crabs/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Snakes',
    regex: /Genus: Snakes/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Spawn',
    regex: /Genus: Spawn/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Spider Crabs',
    regex: /Genus: Spider Crabs/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Spiders',
    regex: /Genus: Spiders/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Tigers',
    regex: /Genus: Tigers/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Vultures',
    regex: /Genus: Vultures/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Watchers',
    regex: /Genus: Watchers/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Genus: Wolves',
    regex: /Genus: Wolves/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Group: Amphibians',
    regex: /Group: Amphibians/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Group: Arachnids',
    regex: /Group: Arachnids/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Group: Avians',
    regex: /Group: Avians/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Group: Canines',
    regex: /Group: Canines/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Group: Cephalopods',
    regex: /Group: Cephalopods/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Group: Crustaceans',
    regex: /Group: Crustaceans/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Group: Felines',
    regex: /Group: Felines/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Group: Insects',
    regex: /Group: Insects/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Group: Primates',
    regex: /Group: Primates/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Group: Reptiles',
    regex: /Group: Reptiles/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Group: Unnaturals',
    regex: /Group: Unnaturals/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Group: Ursae',
    regex: /Group: Ursae/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Aspect of the Hellion',
    regex: /Aspect of the Hellion/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Blood Geyser',
    regex: /Blood Geyser/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Churning Claws',
    regex: /Churning Claws/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Craicic Presence',
    regex: /Craicic Presence/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Crimson Flock',
    regex: /Crimson Flock/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Crushing Claws',
    regex: /Crushing Claws/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Deep One\'s Presence',
    regex: /Deep One's Presence/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Erupting Winds',
    regex: /Erupting Winds/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Farric Presence',
    regex: /Farric Presence/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Fenumal Presence',
    regex: /Fenumal Presence/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Fertile Presence',
    regex: /Fertile Presence/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Grants Level # Aspect of the Avian Skill',
    regex: /Grants Level (\d+) Aspect of the Avian Skill/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Grants Level # Aspect of the Cat Skill',
    regex: /Grants Level (\d+) Aspect of the Cat Skill/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Grants Level # Aspect of the Crab Skill',
    regex: /Grants Level (\d+) Aspect of the Crab Skill/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Grants Level # Aspect of the Spider Skill',
    regex: /Grants Level (\d+) Aspect of the Spider Skill/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Hadal Dive',
    regex: /Hadal Dive/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Incendiary Mite',
    regex: /Incendiary Mite/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Infested Earth',
    regex: /Infested Earth/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Putrid Flight',
    regex: /Putrid Flight/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Raven Caller',
    regex: /Raven Caller/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Saqawine Presence',
    regex: /Saqawine Presence/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Satyr Storm',
    regex: /Satyr Storm/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Spectral Stampede',
    regex: /Spectral Stampede/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Spectral Swipe',
    regex: /Spectral Swipe/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Tiger Prey',
    regex: /Tiger Prey/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Unstable Swarm',
    regex: /Unstable Swarm/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Vile Hatchery',
    regex: /Vile Hatchery/,
    type: ModFilterType.BESTIARY,
  },
  {
    label: 'Winter Bloom',
    regex: /Winter Bloom/,
    type: ModFilterType.BESTIARY,
  },
];
/* map mods */
export const mapModRegexes: IMod[] = [
  {
    label: '# Flask Charges recovered every 3 seconds',
    regex: /(\d+) Flask Charges recovered every 3 seconds/,
    type: ModFilterType.MAP,
  },
  {
    label: '#% increased Experience gain',
    regex: /(\d+)% increased Experience gain/,
    type: ModFilterType.MAP,
  },
  {
    label: '#% increased Monster Attack Speed',
    regex: /(\d+)% increased Monster Attack Speed/,
    type: ModFilterType.MAP,
  },
  {
    label: '#% increased Monster Cast Speed',
    regex: /(\d+)% increased Monster Cast Speed/,
    type: ModFilterType.MAP,
  },
  {
    label: '#% increased Monster Damage',
    regex: /(\d+)% increased Monster Damage/,
    type: ModFilterType.MAP,
  },
  {
    label: '#% increased Monster Movement Speed',
    regex: /(\d+)% increased Monster Movement Speed/,
    type: ModFilterType.MAP,
  },
  {
    label: '#% increased Quantity of Items found in this Area',
    regex: /(\d+)% increased Quantity of Items found in this Area/,
    type: ModFilterType.MAP,
  },
  {
    label: '#% increased Rarity of Items found in this Area',
    regex: /(\d+)% increased Rarity of Items found in this Area/,
    type: ModFilterType.MAP,
  },
  {
    label: '#% less effect of Curses on Monsters',
    regex: /(\d+)% less effect of Curses on Monsters/,
    type: ModFilterType.MAP,
  },
  {
    label: '#% more Magic Monsters',
    regex: /(\d+)% more Magic Monsters/,
    type: ModFilterType.MAP,
  },
  {
    label: '#% more Monster Life',
    regex: /(\d+)% more Monster Life/,
    type: ModFilterType.MAP,
  },
  {
    label: '#% more Rare Monsters',
    regex: /(\d+)% more Rare Monsters/,
    type: ModFilterType.MAP,
  },
  {
    label: '+#% Monster Chaos Resistance',
    regex: /\+(\d+)% Monster Chaos Resistance/,
    type: ModFilterType.MAP,
  },
  {
    label: '+#% Monster Cold Resistance',
    regex: /\+(\d+)% Monster Cold Resistance/,
    type: ModFilterType.MAP,
  },
  {
    label: '+#% Monster Elemental Resistance',
    regex: /\+(\d+)% Monster Elemental Resistance/,
    type: ModFilterType.MAP,
  },
  {
    label: '+#% Monster Fire Resistance',
    regex: /\+(\d+)% Monster Fire Resistance/,
    type: ModFilterType.MAP,
  },
  {
    label: '+#% Monster Lightning Resistance',
    regex: /\+(\d+)% Monster Lightning Resistance/,
    type: ModFilterType.MAP,
  },
  {
    label: '+#% Monster pack size',
    regex: /\+(\d+)% Monster pack size/,
    type: ModFilterType.MAP,
  },
  {
    label: '+#% Monster Physical Damage Reduction',
    regex: /\+(\d+)% Monster Physical Damage Reduction/,
    type: ModFilterType.MAP,
  },
  {
    label: '+#% to Monster Critical Strike Multiplier',
    regex: /\+(\d+)% to Monster Critical Strike Multiplier/,
    type: ModFilterType.MAP,
  },
  {
    label: '-#% maximum Player Resistances',
    regex: /-(\d+)% maximum Player Resistances/,
    type: ModFilterType.MAP,
  },
  {
    label: 'All Monster Damage from Hits always Ignites',
    regex: /All Monster Damage from Hits always Ignites/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Ancient Talismans possess monsters throughout Wraeclast',
    regex: /Ancient Talismans possess monsters throughout Wraeclast/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area becomes fatal after some time',
    regex: /Area becomes fatal after some time/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area can contain Breaches',
    regex: /Area can contain Breaches/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area can contain Mysterious Harbingers',
    regex: /Area can contain Mysterious Harbingers/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area contains # additional Breaches',
    regex: /Area contains (\d+) additional Breaches/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area contains # additional Essences',
    regex: /Area contains (\d+) additional Essences/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area contains # additional Magic Monster packs',
    regex: /Area contains (\d+) additional Magic Monster packs/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area contains # additional Monsters possessed by Ancient Talismans',
    regex: /Area contains (\d+) additional Monsters possessed by Ancient Talismans/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area contains # additional packs with a Rare monster',
    regex: /Area contains (\d+) additional packs with a Rare monster/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area contains # additional Perandus Chests',
    regex: /Area contains (\d+) additional Perandus Chests/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area contains # extra Harbingers',
    regex: /Area contains (\d+) extra Harbingers/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area contains # extra Shrines',
    regex: /Area contains (\d+) extra Shrines/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area contains # extra Strongboxes',
    regex: /Area contains (\d+) extra Strongboxes/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area contains a Stone Circle',
    regex: /Area contains a Stone Circle/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area contains Alva',
    regex: /Area contains Alva/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area contains an additional Breach',
    regex: /Area contains an additional Breach/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area contains an additional Essence',
    regex: /Area contains an additional Essence/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area contains an additional Legion Encounter',
    regex: /Area contains an additional Legion Encounter/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area contains an extra Harbinger',
    regex: /Area contains an extra Harbinger/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area contains an extra Shrine',
    regex: /Area contains an extra Shrine/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area contains an extra Strongbox',
    regex: /Area contains an extra Strongbox/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area contains Einhar',
    regex: /Area contains Einhar/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area contains Immortal Syndicate activity',
    regex: /Area contains Immortal Syndicate activity/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area contains Jun',
    regex: /Area contains Jun/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area contains many Sentinel Traps',
    regex: /Area contains many Sentinel Traps/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area contains many Totems',
    regex: /Area contains many Totems/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area contains Niko',
    regex: /Area contains Niko/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area contains no monsters',
    regex: /Area contains no monsters/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area contains two Unique Bosses',
    regex: /Area contains two Unique Bosses/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area contains unbridged gaps to cross',
    regex: /Area contains unbridged gaps to cross/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area contains Zana',
    regex: /Area contains Zana/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area has a #% chance to contain Cadiro Perandus',
    regex: /Area has a (\d+)% chance to contain Cadiro Perandus/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area has Damaging Totems',
    regex: /Area has Damaging Totems/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area has increased monster variety',
    regex: /Area has increased monster variety/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area has patches of burning ground',
    regex: /Area has patches of burning ground/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area has patches of chilled ground',
    regex: /Area has patches of chilled ground/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area has patches of desecrated ground',
    regex: /Area has patches of desecrated ground/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area has patches of shocking ground',
    regex: /Area has patches of shocking ground/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area has patches of tar',
    regex: /Area has patches of tar/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area is #% larger',
    regex: /Area is (\d+)% larger/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area is a Maze',
    regex: /Area is a Maze/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area is haunted by # additional Tormented Spirit',
    regex: /Area is haunted by (\d+) additional Tormented Spirit/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area is haunted by # additional Tormented Spirits',
    regex: /Area is haunted by (\d+) additional Tormented Spirits/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area is inhabited by # additional Rogue Exiles',
    regex: /Area is inhabited by (\d+) additional Rogue Exiles/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area is inhabited by # additional Warbands',
    regex: /Area is inhabited by (\d+) additional Warbands/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area is inhabited by Abominations',
    regex: /Area is inhabited by Abominations/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area is inhabited by an additional Invasion Boss',
    regex: /Area is inhabited by an additional Invasion Boss/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area is inhabited by Animals',
    regex: /Area is inhabited by Animals/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area is inhabited by Bandits',
    regex: /Area is inhabited by Bandits/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area is inhabited by Blackguards',
    regex: /Area is inhabited by Blackguards/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area is inhabited by Cultists of Kitava',
    regex: /Area is inhabited by Cultists of Kitava/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area is inhabited by Demons',
    regex: /Area is inhabited by Demons/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area is inhabited by Ghosts',
    regex: /Area is inhabited by Ghosts/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area is inhabited by Goatmen',
    regex: /Area is inhabited by Goatmen/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area is inhabited by Humanoids',
    regex: /Area is inhabited by Humanoids/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area is inhabited by Lunaris fanatics',
    regex: /Area is inhabited by Lunaris fanatics/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area is inhabited by ranged monsters',
    regex: /Area is inhabited by ranged monsters/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area is inhabited by Sea Witches and their Spawn',
    regex: /Area is inhabited by Sea Witches and their Spawn/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area is inhabited by Skeletons',
    regex: /Area is inhabited by Skeletons/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area is inhabited by Solaris fanatics',
    regex: /Area is inhabited by Solaris fanatics/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area is inhabited by Spiders',
    regex: /Area is inhabited by Spiders/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area is inhabited by the Vaal',
    regex: /Area is inhabited by the Vaal/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area is inhabited by Undead',
    regex: /Area is inhabited by Undead/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Area is inhabited by wild Animals',
    regex: /Area is inhabited by wild Animals/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Areas can contain Essences',
    regex: /Areas can contain Essences/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Areas contain deposits of Voltaxic Sulphite',
    regex: /Areas contain deposits of Voltaxic Sulphite/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Areas contain Memory Fragments',
    regex: /Areas contain Memory Fragments/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Areas Have the Same Layout for all Players',
    regex: /Areas Have the Same Layout for all Players/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Caches of Perandus wealth can be found throughout Wraeclast',
    regex: /Caches of Perandus wealth can be found throughout Wraeclast/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Cannot Leech Life from Monsters',
    regex: /Cannot Leech Life from Monsters/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Cannot Leech Mana from Monsters',
    regex: /Cannot Leech Mana from Monsters/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Chests have #% increased Item Rarity',
    regex: /Chests have (\d+)% increased Item Rarity/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Contains the Immortalised Grandmasters PvP damage scaling in effect',
    regex: /Contains the Immortalised Grandmasters PvP damage scaling in effect/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Curses have #% reduced effect on Monsters',
    regex: /Curses have (\d+)% reduced effect on Monsters/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Found Items have a #% chance to drop Corrupted in Area',
    regex: /Found Items have a (\d+)% chance to drop Corrupted in Area/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Life, Mana, Energy Shield and Flasks are not refilled in Towns',
    regex: /Life, Mana, Energy Shield and Flasks are not refilled in Towns/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Magic Monster Packs each have a Bloodline Mod',
    regex: /Magic Monster Packs each have a Bloodline Mod/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Minimap is Revealed',
    regex: /Minimap is Revealed/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monster Level: #',
    regex: /Monster Level: (\d+)/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters and bosses invade from elsewhere in Wraeclast',
    regex: /Monsters and bosses invade from elsewhere in Wraeclast/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters are Hexproof',
    regex: /Monsters are Hexproof/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters are Immune to randomly chosen Elemental Ailments or Stun',
    regex: /Monsters are Immune to randomly chosen Elemental Ailments or Stun/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters cannot be affected by Ailments',
    regex: /Monsters cannot be affected by Ailments/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters cannot be Chilled or Frozen',
    regex: /Monsters cannot be Chilled or Frozen/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters cannot be Ignited',
    regex: /Monsters cannot be Ignited/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters cannot be Shocked',
    regex: /Monsters cannot be Shocked/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters cannot be Stunned',
    regex: /Monsters cannot be Stunned/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters cannot be Taunted',
    regex: /Monsters cannot be Taunted/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters deal #% extra Damage as Cold',
    regex: /Monsters deal (\d+)% extra Damage as Cold/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters deal #% extra Damage as Fire',
    regex: /Monsters deal (\d+)% extra Damage as Fire/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters deal #% extra Damage as Lightning',
    regex: /Monsters deal (\d+)% extra Damage as Lightning/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters drop items # Levels higher',
    regex: /Monsters drop items (\d+) Levels higher/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters drop no items',
    regex: /Monsters drop no items/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters fire # additional Projectiles',
    regex: /Monsters fire (\d+) additional Projectiles/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters Fracture',
    regex: /Monsters Fracture/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters gain # Endurance Charge every 20 seconds',
    regex: /Monsters gain (\d+) Endurance Charge every 20 seconds/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters gain # Endurance Charges every 20 seconds',
    regex: /Monsters gain (\d+) Endurance Charges every 20 seconds/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters gain # Frenzy Charge every 20 seconds',
    regex: /Monsters gain (\d+) Frenzy Charge every 20 seconds/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters gain # Frenzy Charges every 20 seconds',
    regex: /Monsters gain (\d+) Frenzy Charges every 20 seconds/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters gain # Power Charge every 20 seconds',
    regex: /Monsters gain (\d+) Power Charge every 20 seconds/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters gain # Power Charges every 20 seconds',
    regex: /Monsters gain (\d+) Power Charges every 20 seconds/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters gain a Frenzy Charge on Hit',
    regex: /Monsters gain a Frenzy Charge on Hit/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters gain a Power Charge on Hit',
    regex: /Monsters gain a Power Charge on Hit/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters gain an Endurance Charge on Hit',
    regex: /Monsters gain an Endurance Charge on Hit/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters have #% chance to Avoid Ailments',
    regex: /Monsters have (\d+)% chance to Avoid Ailments/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters have #% chance to Avoid Elemental Ailments',
    regex: /Monsters have (\d+)% chance to Avoid Elemental Ailments/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters have #% increased Accuracy Rating',
    regex: /Monsters have (\d+)% increased Accuracy Rating/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters have #% increased Area of Effect',
    regex: /Monsters have (\d+)% increased Area of Effect/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters have #% increased Critical Strike Chance',
    regex: /Monsters have (\d+)% increased Critical Strike Chance/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters have a #% chance to avoid Poison, Blind, and Bleeding',
    regex: /Monsters have a (\d+)% chance to avoid Poison, Blind, and Bleeding/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters have a #% chance to cause Elemental Ailments on Hit',
    regex: /Monsters have a (\d+)% chance to cause Elemental Ailments on Hit/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters have Onslaught',
    regex: /Monsters have Onslaught/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters Poison on Hit',
    regex: /Monsters Poison on Hit/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters reflect #% of Elemental Damage',
    regex: /Monsters reflect (\d+)% of Elemental Damage/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters reflect #% of Physical Damage',
    regex: /Monsters reflect (\d+)% of Physical Damage/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters reflect Curses',
    regex: /Monsters reflect Curses/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters take #% reduced Extra Damage from Critical Strikes',
    regex: /Monsters take (\d+)% reduced Extra Damage from Critical Strikes/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters\' Action Speed cannot be modified to below base value',
    regex: /Monsters' Action Speed cannot be modified to below base value/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters\' Melee Attacks apply random Curses on Hit',
    regex: /Monsters' Melee Attacks apply random Curses on Hit/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Monsters\' skills Chain # additional times',
    regex: /Monsters' skills Chain (\d+) additional times/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Player chance to Dodge is Unlucky',
    regex: /Player chance to Dodge is Unlucky/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Players are Cursed with Conductivity',
    regex: /Players are Cursed with Conductivity/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Players are Cursed with Elemental Weakness',
    regex: /Players are Cursed with Elemental Weakness/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Players are Cursed with Enfeeble',
    regex: /Players are Cursed with Enfeeble/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Players are Cursed with Flammability',
    regex: /Players are Cursed with Flammability/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Players are Cursed with Frostbite',
    regex: /Players are Cursed with Frostbite/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Players are Cursed with Projectile Weakness',
    regex: /Players are Cursed with Projectile Weakness/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Players are Cursed with Punishment',
    regex: /Players are Cursed with Punishment/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Players are Cursed with Temporal Chains',
    regex: /Players are Cursed with Temporal Chains/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Players are Cursed with Vulnerability',
    regex: /Players are Cursed with Vulnerability/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Players are Cursed with Warlord\'s Mark',
    regex: /Players are Cursed with Warlord's Mark/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Players cannot Regenerate Life, Mana or Energy Shield',
    regex: /Players cannot Regenerate Life, Mana or Energy Shield/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Players deal #% less Projectile Damage',
    regex: /Players deal (\d+)% less Projectile Damage/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Players gain #% reduced Flask Charges',
    regex: /Players gain (\d+)% reduced Flask Charges/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Players gain a Random Mod from Slain Rare Monsters for # seconds',
    regex: /Players gain a Random Mod from Slain Rare Monsters for (\d+) seconds/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Players gain Modifiers from Slain Rare Monsters for # seconds',
    regex: /Players gain Modifiers from Slain Rare Monsters for (\d+) seconds/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Players gain Soul Eater for # seconds on Rare Monster Kill',
    regex: /Players gain Soul Eater for (\d+) seconds on Rare Monster Kill/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Players have #% increased Action Speed while Chilled',
    regex: /Players have (\d+)% increased Action Speed while Chilled/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Players have #% increased Cooldown Recovery Speed for Movement Skills',
    regex: /Players have (\d+)% increased Cooldown Recovery Speed for Movement Skills/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Players have #% less Area of Effect',
    regex: /Players have (\d+)% less Area of Effect/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Players have #% less Armour',
    regex: /Players have (\d+)% less Armour/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Players have #% less Recovery Rate of Life and Energy Shield',
    regex: /Players have (\d+)% less Recovery Rate of Life and Energy Shield/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Players have #% reduced Chance to Block',
    regex: /Players have (\d+)% reduced Chance to Block/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Players have a random Curse on them every 10 seconds',
    regex: /Players have a random Curse on them every 10 seconds/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Players have Blood Magic',
    regex: /Players have Blood Magic/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Players have Corrupting Blood',
    regex: /Players have Corrupting Blood/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Players have Elemental Equilibrium',
    regex: /Players have Elemental Equilibrium/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Players have no Life or Mana Regeneration',
    regex: /Players have no Life or Mana Regeneration/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Players have Point Blank',
    regex: /Players have Point Blank/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Players take # Chaos Damage per second',
    regex: /Players take (\d+) Chaos Damage per second/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Powerful Shrines can affect both Monsters and you',
    regex: /Powerful Shrines can affect both Monsters and you/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Powerful Tempests can affect both Monsters and you',
    regex: /Powerful Tempests can affect both Monsters and you/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Projectiles move at #% reduced Speed',
    regex: /Projectiles move at (\d+)% reduced Speed/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Rare Monsters each have a Nemesis Mod',
    regex: /Rare Monsters each have a Nemesis Mod/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Rogue Exiles roam Wraeclast',
    regex: /Rogue Exiles roam Wraeclast/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Shrines are corrupted by Darkness',
    regex: /Shrines are corrupted by Darkness/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Slaying Enemies close together can attract monsters from Beyond this realm',
    regex: /Slaying Enemies close together can attract monsters from Beyond this realm/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Slaying Enemies close together has a #% chance to attract monsters from Beyond',
    regex: /Slaying Enemies close together has a (\d+)% chance to attract monsters from Beyond/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Slaying Enemies in a kill streak grants Rampage bonuses',
    regex: /Slaying Enemies in a kill streak grants Rampage bonuses/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Strongboxes are guarded by ambushing monsters',
    regex: /Strongboxes are guarded by ambushing monsters/,
    type: ModFilterType.MAP,
  },
  {
    label: 'This Area\'s Modifiers to Quantity of Items found also apply to Rarity',
    regex: /This Area's Modifiers to Quantity of Items found also apply to Rarity/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Tormented Spirits haunt Wraeclast',
    regex: /Tormented Spirits haunt Wraeclast/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Unique Boss deals #% increased Damage',
    regex: /Unique Boss deals (\d+)% increased Damage/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Unique Boss drops # additional Maps',
    regex: /Unique Boss drops (\d+) additional Maps/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Unique Boss drops divination cards',
    regex: /Unique Boss drops divination cards/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Unique Boss gives #% increased Experience',
    regex: /Unique Boss gives (\d+)% increased Experience/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Unique Boss has #% increased Area of Effect',
    regex: /Unique Boss has (\d+)% increased Area of Effect/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Unique Boss has #% increased Attack and Cast Speed',
    regex: /Unique Boss has (\d+)% increased Attack and Cast Speed/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Unique Boss has #% increased Life',
    regex: /Unique Boss has (\d+)% increased Life/,
    type: ModFilterType.MAP,
  },
  {
    label: 'Unique Boss is augmented by Player choices',
    regex: /Unique Boss is augmented by Player choices/,
    type: ModFilterType.MAP,
  },
];
/* prophecies */
export const propheciesModRegexes: IMod[] = [
  {
    label: 'You will find Alva and complete her mission.',
    regex: /You will find Alva and complete her mission./,
    type: ModFilterType.PROPHECY,
  },
  {
    label: 'You will find Einhar and complete his mission.',
    regex: /You will find Einhar and complete his mission./,
    type: ModFilterType.PROPHECY,
  },
  {
    label: 'You will find Jun and complete her mission.',
    regex: /You will find Jun and complete her mission./,
    type: ModFilterType.PROPHECY,
  },
  {
    label: 'You will find Niko and complete his mission.',
    regex: /You will find Niko and complete his mission./,
    type: ModFilterType.PROPHECY,
  },
  {
    label: 'You will find Zana and complete her mission.',
    regex: /You will find Zana and complete her mission./,
    type: ModFilterType.PROPHECY,
  },
];
/* leaguestone */
export const leaguestoneModRegexes: IMod[] = [
  {
    label: 'Can only be used in Areas with Monster Level # or below',
    regex: /Can only be used in Areas with Monster Level (\d+) or below/,
    type: ModFilterType.LEAGUESTONE,
  },
  {
    label: 'Currently has # Charges',
    regex: /Currently has (\d+) Charges/,
    type: ModFilterType.LEAGUESTONE,
  },
  {
    label: 'Maximum # Charges',
    regex: /Maximum (\d+) Charges/,
    type: ModFilterType.LEAGUESTONE,
  },
  {
    label: '+# to Maximum Charges',
    regex: /\+(\d+) to Maximum Charges/,
    type: ModFilterType.LEAGUESTONE,
  },
];
